<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" xmlns:psc="http://podlove.org/simple-chapters" xmlns:omny="https://omny.fm/rss-extensions" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:acast="https://schema.acast.com/1.0/" xmlns:podcast="https://podcastindex.org/namespace/1.0" version="2.0">
  <channel>
    <omny:organizationId>c4157e60-c7f8-470d-b13f-a7b30040df73</omny:organizationId>
    <omny:programId>564f493f-af32-4c48-862f-a7b300e4df49</omny:programId>
    <omny:playlistId>ac317852-8807-44b8-8eff-a7b300e4df52</omny:playlistId>
    <language>en-US</language>
    <atom:link rel="self" type="application/rss+xml" href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/podcast.rss" />
    <atom:link rel="first" type="application/rss+xml" href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/podcast.rss?page=1" />
    <atom:link rel="last" type="application/rss+xml" href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/podcast.rss?page=1" />
    <title>Future of Coding</title>
    <link>https://futureofcoding.org/</link>
    <description><![CDATA[<p>A romp through the field of computer programming, grapling with our history and wondering what should come next. A mix of deeply technical talk, philosophy, art, dark lore, and good takes. Hosted by <a href="https://ivanish.ca/">Ivan Reese</a>, <a href="https://jimmyhmiller.github.io/">Jimmy Miller</a>, and <a href="https://todepond.com/">Lu Wilson</a>.</p>]]></description>
    <itunes:type>episodic</itunes:type>
    <itunes:summary>A romp through the field of computer programming, grapling with our history and wondering what should come next. A mix of deeply technical talk, philosophy, art, dark lore, and good takes. Hosted by Ivan Reese, Jimmy Miller, and Lu Wilson.</itunes:summary>
    <itunes:owner>
      <itunes:name>Ivan Reese</itunes:name>
      <itunes:email>admin@futureofcoding.org</itunes:email>
    </itunes:owner>
    <itunes:author>Future of Coding</itunes:author>
    <copyright>2025 Ivan Reese, Jimmy Miller, and Lu Wilson</copyright>
    <itunes:explicit>no</itunes:explicit>
    <itunes:category text="Technology"></itunes:category>
    <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
    <image>
      <url>https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large</url>
      <title>Future of Coding</title>
      <link>https://futureofcoding.org/</link>
    </image>
    <item>
      <title>Computing Machinery and Intelligence by Alan Turing (feat. Felienne Hermans)</title>
      <itunes:title>Computing Machinery and Intelligence by Alan Turing (feat. Felienne Hermans)</itunes:title>
      <description><![CDATA[<p>You know <a href="https://en.wikipedia.org/wiki/Alan_Turing">Alan Turing</a>, right?</p> <p>And the <a href="https://en.wikipedia.org/wiki/Turing_test">Turing test</a>?</p> <p>Have you actually <em>read</em> the paper that introduced it,</p> <p><a href="https://courses.cs.umbc.edu/471/papers/turing.pdf">Computing Machinery and Intelligence</a>?</p> <p><em>No?!</em></p> <p>You&hellip; you are not prepared.</p> <hr> <p><em>With very special guest:</em> <a href="https://www.felienne.com/">Felienne Hermans</a></p> <p><strong>Notes</strong></p> <p>$ <a href="https://www.patreon.com/futureofcoding">Patreon</a></p> <ul> <li><a href="https://www.dair-institute.org/maiht3k/">Mystery AI Hype Theatre 3000</a> podcast, from <a href="https://en.wikipedia.org/wiki/Emily_M._Bender">Emily M. Bender</a> and <a href="https://en.wikipedia.org/wiki/Alex_Hanna_%28research_scientist%29">Alex Hanna</a>. "Always read the footnotes"</li> <li>[The Language Game](<a href="https://en.wikipedia.org/wiki/Language_game_(philosophy)">https://en.wikipedia.org/wiki/Language_game_(philosophy)</a> by <a href="https://en.wikipedia.org/wiki/Ludwig_Wittgenstein">Ludwig Wittgenstein</a></li> <li><a href="https://www.cambridge.org/core/services/aop-cambridge-core/content/view/13C1D582F132D7F24734C48683AA3552/S003181910002266Xa.pdf/can-machines-think.pdf">Can Machines Think?</a> by <a href="https://en.wikipedia.org/wiki/Wolfe_Mays">W. "Billy" Mays</a></li> <li>Lu's paper with <a href="https://www.cs.unm.edu/~ackley/">Dave Ackley</a>, <a href="https://www.todepond.com/code/">Dialogues on Natural Code</a> describes how the symbiote will spread to consume all of humanity.</li> <li><a href="https://link.springer.com/content/pdf/10.1007/s42113-024-00217-5.pdf">Reclaiming AI as a Theoretical Tool for Cognitive Science</a> by <a href="https://irisvanrooijcogsci.com">Iris van Rooij</a> et al.</li> <li><a href="https://en.wikipedia.org/wiki/Ned_Block">Ned Block</a>'s <a href="https://en.wikipedia.org/wiki/Blockhead_(thought_experiment)">Blockhead</a></li> <li><a href="https://en.wikipedia.org/wiki/Nick_Cave">Nick Cave</a>'s thoughts on <a href="https://www.theredhandfiles.com/chat-gpt-what-do-you-think/">AI song lyrics</a>. For instance: "Writing a good song is not mimicry, or replication, or pastiche, it is the opposite. [&hellip;] It is the breathless confrontation with one&rsquo;s vulnerability, one&rsquo;s perilousness, one&rsquo;s smallness, pitted against a sense of sudden shocking discovery; it is the redemptive artistic act that stirs the heart of the listener, where the listener recognizes in the inner workings of the song their own blood, their own struggle, their own suffering."</li> <li><a href="https://en.wikipedia.org/wiki/Hubert_Dreyfus%27s_views_on_artificial_intelligence">What Computers Can't Do</a> by <a href="https://en.wikipedia.org/wiki/Hubert_Dreyfus">Hubert Dryfus</a></li> <li><a href="https://en.wikipedia.org/wiki/Wittgenstein_on_Rules_and_Private_Language">Wittgenstein on Rules</a> by <a href="https://en.wikipedia.org/wiki/Saul_Kripke">Saul Kripke</a></li> <li><a href="https://homes.luddy.indiana.edu/nensmeng/files/Ensmenger2012-Chess.pdf">Is chess the drosophila of artificial intelligence?</a> by <a href="https://luddy.indiana.edu/contact/profile/?profile_id=197">Nathan Ensmenger</a></li> <li><a href="https://www.cs.cmu.edu/~social/reading/Laurel-ComputersAsTheatre.pdf">Computers as Theatre</a> by <a href="https://en.wikipedia.org/wiki/Brenda_Laurel">Brenda Laurel</a></li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, especially questions or topics you'd like us to discuss on future episodes, share your wildest ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and:</p> <ul> <li>IVAN: <a href="https://mastodon.social/@spiralganglion">🐘</a> <a href="https://bsky.app/profile/spiralganglion.com">🦋</a> <a href="https://ivanish.ca/">🌐</a></li> <li>JIMM: <a href="https://hachyderm.io/@jimmyhmiller">🐘</a> <a href="https://bsky.app/profile/jimmyhmiller.bsky.social">🦋</a> <a href="https://jimmyhmiller.github.io/">🌐</a></li> <li>TODE: <a href="https://mas.to/@todepond">🐘</a> <a href="https://bsky.app/profile/todepond.com">🦋</a> <a href="https://www.todepond.com/">🌐</a></li> <li>FELI: <a href="https://mastodon.social/@Felienne">🐘</a> <a href="https://bsky.app/profile/felienne.bsky.social">🦋</a> <a href="https://www.felienne.com/">🌐</a></li> </ul> <p>See you in the future!</p> <p><a href="https://futureofcoding.org/episodes/076">https://futureofcoding.org/episodes/076</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>You know <a href="https://en.wikipedia.org/wiki/Alan_Turing">Alan Turing</a>, right?</p> <p>And the <a href="https://en.wikipedia.org/wiki/Turing_test">Turing test</a>?</p> <p>Have you actually <em>read</em> the paper that introduced it,</p> <p><a href="https://courses.cs.umbc.edu/471/papers/turing.pdf">Computing Machinery and Intelligence</a>?</p> <p><em>No?!</em></p> <p>You&hellip; you are not prepared.</p> <hr> <p><em>With very special guest:</em> <a href="https://www.felienne.com/">Felienne Hermans</a></p> <p><strong>Notes</strong></p> <p>$ <a href="https://www.patreon.com/futureofcoding">Patreon</a></p> <ul> <li><a href="https://www.dair-institute.org/maiht3k/">Mystery AI Hype Theatre 3000</a> podcast, from <a href="https://en.wikipedia.org/wiki/Emily_M._Bender">Emily M. Bender</a> and <a href="https://en.wikipedia.org/wiki/Alex_Hanna_%28research_scientist%29">Alex Hanna</a>. "Always read the footnotes"</li> <li>[The Language Game](<a href="https://en.wikipedia.org/wiki/Language_game_(philosophy)">https://en.wikipedia.org/wiki/Language_game_(philosophy)</a> by <a href="https://en.wikipedia.org/wiki/Ludwig_Wittgenstein">Ludwig Wittgenstein</a></li> <li><a href="https://www.cambridge.org/core/services/aop-cambridge-core/content/view/13C1D582F132D7F24734C48683AA3552/S003181910002266Xa.pdf/can-machines-think.pdf">Can Machines Think?</a> by <a href="https://en.wikipedia.org/wiki/Wolfe_Mays">W. "Billy" Mays</a></li> <li>Lu's paper with <a href="https://www.cs.unm.edu/~ackley/">Dave Ackley</a>, <a href="https://www.todepond.com/code/">Dialogues on Natural Code</a> describes how the symbiote will spread to consume all of humanity.</li> <li><a href="https://link.springer.com/content/pdf/10.1007/s42113-024-00217-5.pdf">Reclaiming AI as a Theoretical Tool for Cognitive Science</a> by <a href="https://irisvanrooijcogsci.com">Iris van Rooij</a> et al.</li> <li><a href="https://en.wikipedia.org/wiki/Ned_Block">Ned Block</a>'s <a href="https://en.wikipedia.org/wiki/Blockhead_(thought_experiment)">Blockhead</a></li> <li><a href="https://en.wikipedia.org/wiki/Nick_Cave">Nick Cave</a>'s thoughts on <a href="https://www.theredhandfiles.com/chat-gpt-what-do-you-think/">AI song lyrics</a>. For instance: "Writing a good song is not mimicry, or replication, or pastiche, it is the opposite. [&hellip;] It is the breathless confrontation with one&rsquo;s vulnerability, one&rsquo;s perilousness, one&rsquo;s smallness, pitted against a sense of sudden shocking discovery; it is the redemptive artistic act that stirs the heart of the listener, where the listener recognizes in the inner workings of the song their own blood, their own struggle, their own suffering."</li> <li><a href="https://en.wikipedia.org/wiki/Hubert_Dreyfus%27s_views_on_artificial_intelligence">What Computers Can't Do</a> by <a href="https://en.wikipedia.org/wiki/Hubert_Dreyfus">Hubert Dryfus</a></li> <li><a href="https://en.wikipedia.org/wiki/Wittgenstein_on_Rules_and_Private_Language">Wittgenstein on Rules</a> by <a href="https://en.wikipedia.org/wiki/Saul_Kripke">Saul Kripke</a></li> <li><a href="https://homes.luddy.indiana.edu/nensmeng/files/Ensmenger2012-Chess.pdf">Is chess the drosophila of artificial intelligence?</a> by <a href="https://luddy.indiana.edu/contact/profile/?profile_id=197">Nathan Ensmenger</a></li> <li><a href="https://www.cs.cmu.edu/~social/reading/Laurel-ComputersAsTheatre.pdf">Computers as Theatre</a> by <a href="https://en.wikipedia.org/wiki/Brenda_Laurel">Brenda Laurel</a></li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, especially questions or topics you'd like us to discuss on future episodes, share your wildest ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and:</p> <ul> <li>IVAN: <a href="https://mastodon.social/@spiralganglion">🐘</a> <a href="https://bsky.app/profile/spiralganglion.com">🦋</a> <a href="https://ivanish.ca/">🌐</a></li> <li>JIMM: <a href="https://hachyderm.io/@jimmyhmiller">🐘</a> <a href="https://bsky.app/profile/jimmyhmiller.bsky.social">🦋</a> <a href="https://jimmyhmiller.github.io/">🌐</a></li> <li>TODE: <a href="https://mas.to/@todepond">🐘</a> <a href="https://bsky.app/profile/todepond.com">🦋</a> <a href="https://www.todepond.com/">🌐</a></li> <li>FELI: <a href="https://mastodon.social/@Felienne">🐘</a> <a href="https://bsky.app/profile/felienne.bsky.social">🦋</a> <a href="https://www.felienne.com/">🌐</a></li> </ul> <p>See you in the future!</p> <p><a href="https://futureofcoding.org/episodes/076">https://futureofcoding.org/episodes/076</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/1f5dcb7f-a092-4189-8a41-b2cc0041c824/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/computing-machinery/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">1f5dcb7f-a092-4189-8a41-b2cc0041c824</guid>
      <omny:clipId>1f5dcb7f-a092-4189-8a41-b2cc0041c824</omny:clipId>
      <pubDate>Sun, 27 Apr 2025 04:22:28 +0000</pubDate>
      <itunes:duration>7898</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/1f5dcb7f-a092-4189-8a41-b2cc0041c824/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="126383091" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/computing-machinery</link>
    </item>
    <item>
      <title>A Case for Feminism in Programming Language Design by Felienne Hermans</title>
      <itunes:title>A Case for Feminism in Programming Language Design by Felienne Hermans</itunes:title>
      <description><![CDATA[<p>In the academic field of programming language research, there are a few prestigious conferences that you must present at to advance in your career. These conferences are rather selective about which presentations they'll accept. If your research work involves proving formal properties about a programming language, you'll have their ear. But if your work looks at, say, the human factors of language design, you might as well not bother applying &mdash;&nbsp;and thus, not bother pursuing that work in the first place. Why is the formalistic, systems-focused work elevated, and the human-focused work diminished? And what are the downstream consequences, the self-reinforcing feedback loops that come from this narrow focus?</p> <p>In this episode we discuss a paper by <a href="https://www.felienne.com/">Felienne Hermans</a> and <a href="https://arischlesinger.com/">Ari Schlesinger</a> titled, <a href="https://www.felienne.com/archives/8470">A case for Feminism in Programming Language Design</a>. It applies the lens of intersectional feminism to reveal a startling lack of <a href="https://en.wikipedia.org/wiki/Yes,_and...">"Yes, and&hellip;"</a> in academic computer science, where valuable avenues of inquiry are closed off, careers are stifled, and people are unintentionally driven away from contributing to the field, simply because their passions and expertise don't conform to a set of invisible expectations. Through heartbreaking personal anecdotes and extensive supporting references, the paper makes the case that there's a lot of high-value greenfield work to be done, and people who would love to do it &mdash;&nbsp;but we will need to collectively identify, understand, and then fix a few broken incentives before it'll happen.</p> <p><strong>Notes</strong></p> <p>$ <a href="https://www.patreon.com/futureofcoding">Patreon</a></p> <ul> <li><a href="https://polypad.amplify.com/">Polypad</a>, dubbed the "best piece of education software for smartboards" by published academic Luke Wilson</li> <li>Or is it <a href="https://mathigon.org/">Mathigon</a>? "Looks like a nice <a href="https://www.desmos.com/">Desmos</a>", opines enterprise sales expert Ivan Reese.</li> <li><a href="https://web.archive.org/web/20241124083409/https://www.marketfacts.ca/home/">Market💡Facts.ca</a></li> <li><a href="https://www.hedy.org">Hedy</a>, a multi-lingual programming environment for the classroom created by Felienne.</li> </ul> <p>Welcome to the TALK BLOC:</p> <ul> <li> <p>Felienne Hermans at Onward! 2024: <a href="https://www.youtube.com/watch?v=-Br66SUjsdQ&amp;t=12129">A case for Feminism in Programming Language Design</a></p> </li> <li> <p>Ivan and Alex Warth at LIVE 2024: <a href="https://www.inkandswitch.com/ink/notes/inkling-live-presentation/">Inkling</a></p> </li> <li> <p>Lu at LIVE 2024: <a href="https://www.youtube.com/watch?v=4GOeYylCMJI&amp;t=12480">Arroost</a></p> </li> <li> <p>Lu at Onward! 2024: <a href="https://www.youtube.com/watch?v=-Br66SUjsdQ&amp;t=15105">Dialogs on Natural Code</a></p> </li> <li> <p><a href="https://www.youtube.com/watch?v=-Br66SUjsdQ&amp;t=23984s">Discovering Your Software Umwelt</a> by Rebecca Wirfs-Brock, Allen Wirfs-Brock, and Jordan Wirfs-Brock</p> </li> <li> <p><a href="https://stefanlesser.substack.com/p/video-and-transcript-of-my-presentation">A New Cognitive Perspective on Simplicity in System and Product Design</a> by FoC community member and previous <a href="https://www.patreon.com/posts/new-physics-with-99281699">bonus episode guest</a>, Stefan Lesser</p> </li> <li> <p><a href="https://archive.org/details/onward-redressing-the-balance">Redressing the Balance: A Yin-Yang Perspective on Information Technology</a> by FoC community member Konrad Hinsen</p> </li> <li> <p>Foremost among the contributions to society by Icebergs are their inspiration of <a href="https://suricrasia.online/iceberg/">the meme</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Alex_McLean">Alex McLean</a> as in <a href="https://www.youtube.com/watch?v=RijB8wnJCN0">Insane in the Membrane</a></p> </li> <li> <p><a href="https://ivanish.ca/four-four/">FOUR FOUR</a></p> </li> <li> <p>Mary Shaw, previous <a href="https://futureofcoding.org/episodes/069">guest</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Zachtronics">Zachtronics</a> make some hard puzzle games.</p> </li> <li> <p><a href="https://www.youtube.com/watch?v=ZMklf0vUl18">Define Define</a>, a really great video about <em>that</em>.</p> </li> <li> <p><a href="https://knowyourmeme.com/memes/we-should-improve-society-somewhat">Oh, you question toxic masculinity, yet you live within the gender binary?</a></p> </li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, especially if you're an avid listener who happens to work for a placement agency and knows an AI thought leader who has advised 5000 startups and would be a great fit for our show, share your ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and:</p> <ul> <li>Eats: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> &bull; <a href="https://ivanish.ca/">Website</a></li> <li>Shoots: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> &bull; <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Leaves: <a href="https://mas.to/@todepond">Mastodon</a> &bull; <a href="https://www.todepond.com/">Website</a></li> </ul> <p>See you in the future!</p> <p>https://futureofcoding.org/episodes/75</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>In the academic field of programming language research, there are a few prestigious conferences that you must present at to advance in your career. These conferences are rather selective about which presentations they'll accept. If your research work involves proving formal properties about a programming language, you'll have their ear. But if your work looks at, say, the human factors of language design, you might as well not bother applying &mdash;&nbsp;and thus, not bother pursuing that work in the first place. Why is the formalistic, systems-focused work elevated, and the human-focused work diminished? And what are the downstream consequences, the self-reinforcing feedback loops that come from this narrow focus?</p> <p>In this episode we discuss a paper by <a href="https://www.felienne.com/">Felienne Hermans</a> and <a href="https://arischlesinger.com/">Ari Schlesinger</a> titled, <a href="https://www.felienne.com/archives/8470">A case for Feminism in Programming Language Design</a>. It applies the lens of intersectional feminism to reveal a startling lack of <a href="https://en.wikipedia.org/wiki/Yes,_and...">"Yes, and&hellip;"</a> in academic computer science, where valuable avenues of inquiry are closed off, careers are stifled, and people are unintentionally driven away from contributing to the field, simply because their passions and expertise don't conform to a set of invisible expectations. Through heartbreaking personal anecdotes and extensive supporting references, the paper makes the case that there's a lot of high-value greenfield work to be done, and people who would love to do it &mdash;&nbsp;but we will need to collectively identify, understand, and then fix a few broken incentives before it'll happen.</p> <p><strong>Notes</strong></p> <p>$ <a href="https://www.patreon.com/futureofcoding">Patreon</a></p> <ul> <li><a href="https://polypad.amplify.com/">Polypad</a>, dubbed the "best piece of education software for smartboards" by published academic Luke Wilson</li> <li>Or is it <a href="https://mathigon.org/">Mathigon</a>? "Looks like a nice <a href="https://www.desmos.com/">Desmos</a>", opines enterprise sales expert Ivan Reese.</li> <li><a href="https://web.archive.org/web/20241124083409/https://www.marketfacts.ca/home/">Market💡Facts.ca</a></li> <li><a href="https://www.hedy.org">Hedy</a>, a multi-lingual programming environment for the classroom created by Felienne.</li> </ul> <p>Welcome to the TALK BLOC:</p> <ul> <li> <p>Felienne Hermans at Onward! 2024: <a href="https://www.youtube.com/watch?v=-Br66SUjsdQ&amp;t=12129">A case for Feminism in Programming Language Design</a></p> </li> <li> <p>Ivan and Alex Warth at LIVE 2024: <a href="https://www.inkandswitch.com/ink/notes/inkling-live-presentation/">Inkling</a></p> </li> <li> <p>Lu at LIVE 2024: <a href="https://www.youtube.com/watch?v=4GOeYylCMJI&amp;t=12480">Arroost</a></p> </li> <li> <p>Lu at Onward! 2024: <a href="https://www.youtube.com/watch?v=-Br66SUjsdQ&amp;t=15105">Dialogs on Natural Code</a></p> </li> <li> <p><a href="https://www.youtube.com/watch?v=-Br66SUjsdQ&amp;t=23984s">Discovering Your Software Umwelt</a> by Rebecca Wirfs-Brock, Allen Wirfs-Brock, and Jordan Wirfs-Brock</p> </li> <li> <p><a href="https://stefanlesser.substack.com/p/video-and-transcript-of-my-presentation">A New Cognitive Perspective on Simplicity in System and Product Design</a> by FoC community member and previous <a href="https://www.patreon.com/posts/new-physics-with-99281699">bonus episode guest</a>, Stefan Lesser</p> </li> <li> <p><a href="https://archive.org/details/onward-redressing-the-balance">Redressing the Balance: A Yin-Yang Perspective on Information Technology</a> by FoC community member Konrad Hinsen</p> </li> <li> <p>Foremost among the contributions to society by Icebergs are their inspiration of <a href="https://suricrasia.online/iceberg/">the meme</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Alex_McLean">Alex McLean</a> as in <a href="https://www.youtube.com/watch?v=RijB8wnJCN0">Insane in the Membrane</a></p> </li> <li> <p><a href="https://ivanish.ca/four-four/">FOUR FOUR</a></p> </li> <li> <p>Mary Shaw, previous <a href="https://futureofcoding.org/episodes/069">guest</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Zachtronics">Zachtronics</a> make some hard puzzle games.</p> </li> <li> <p><a href="https://www.youtube.com/watch?v=ZMklf0vUl18">Define Define</a>, a really great video about <em>that</em>.</p> </li> <li> <p><a href="https://knowyourmeme.com/memes/we-should-improve-society-somewhat">Oh, you question toxic masculinity, yet you live within the gender binary?</a></p> </li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, especially if you're an avid listener who happens to work for a placement agency and knows an AI thought leader who has advised 5000 startups and would be a great fit for our show, share your ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and:</p> <ul> <li>Eats: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> &bull; <a href="https://ivanish.ca/">Website</a></li> <li>Shoots: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> &bull; <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Leaves: <a href="https://mas.to/@todepond">Mastodon</a> &bull; <a href="https://www.todepond.com/">Website</a></li> </ul> <p>See you in the future!</p> <p>https://futureofcoding.org/episodes/75</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/a700130a-0662-480c-bd6f-b28601444c62/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/a-case-for-feminism/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">a700130a-0662-480c-bd6f-b28601444c62</guid>
      <omny:clipId>a700130a-0662-480c-bd6f-b28601444c62</omny:clipId>
      <pubDate>Sun, 16 Feb 2025 19:47:30 +0000</pubDate>
      <itunes:duration>7448</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/a700130a-0662-480c-bd6f-b28601444c62/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="119182902" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/a-case-for-feminism</link>
      <itunes:explicit>yes</itunes:explicit>
    </item>
    <item>
      <title>Is the Whole Universe a Computer™?</title>
      <itunes:title>Is the Whole Universe a Computer™?</itunes:title>
      <description><![CDATA[<p>"<a href="https://marksprevak.com/pdf/paper/Sprevak---The%20Computable%20Universe.pdf">Is the whole universe a computer?</a>", ask Jack Copeland, Mark Sprevak, and Oron Shagrir in chapter 41 of the book <a href="https://en.wikipedia.org/wiki/The_Turing_Guide">The Turing Guide</a>. They split this question in two, first asking whether the universe itself is a computer, then whether the universe could even be computed. These are lofty, unanswerable questions, sure, but they encroach on <em>our</em> territory &mdash;&nbsp;philosophy, automata, nonsense. So, in our usual reverent style and with attentive pacing, the three of us explore the paper, the questions, the answers they choose to highlight, and even share a few perfectly reasonable answers of our own.</p> <p><strong>Links</strong></p> <p>$ <a href="https://www.patreon.com/futureofcoding">Patreon</a></p> <p>In no particular order:</p> <ul> <li><a href="https://en.wikipedia.org/wiki/Carl_Sagan">Carl Sagan</a></li> <li><a href="https://www.youtube.com/watch?v=MJzV0CX0q8o">What it means to be open</a> was Lu's talk at Heart of Clojure</li> <li><a href="https://en.wikipedia.org/wiki/Rudy_Rucker">Rudy Rucker</a></li> <li><a href="https://courses.cs.umbc.edu/graduate/671/fall21/resources/searle_2002.pdf">Is the brain a digital computer?</a> by John Searle</li> <li>The <a href="https://en.wikipedia.org/wiki/Planck_units#Planck_time">Plankth of time</a>.</li> <li><a href="https://queue.acm.org/detail.cfm?id=3212479">C is Not a Low-Level Language</a> by David Chisnall</li> <li><a href="https://mastodon.social/@spiralganglion/112578884737169457">The Connection Machine!!</a></li> <li><a href="https://en.wikipedia.org/wiki/Kolmogorov_complexity">Komgloverav&hellip; Komolgorov&hellip;</a></li> <li><a href="https://en.wikipedia.org/wiki/Outer_Wilds">Outer Worlds?</a></li> <li><a href="https://en.wikipedia.org/wiki/The_Outer_Worlds">Outer Wilds?</a></li> <li><a href="https://www.youtube.com/watch?v=SHt4uJyhJo8">The Witness</a></li> </ul> <p>Music featured in this episode:</p> <ul> <li>No! That's a spoiler. No way I'm telling you.</li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, share your ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and catch us while you still can:</p> <ul> <li>Carl: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> &bull; <a href="https://ivanish.ca/">Website</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> &bull; <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Lu: <a href="https://mas.to/@todepond">Mastodon</a> &bull; <a href="https://www.todepond.com/">Website</a></li> </ul> <p>See you in the future!</p> <p><a href="https://futureofcoding.org/episodes/74">https://futureofcoding.org/episodes/74</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>"<a href="https://marksprevak.com/pdf/paper/Sprevak---The%20Computable%20Universe.pdf">Is the whole universe a computer?</a>", ask Jack Copeland, Mark Sprevak, and Oron Shagrir in chapter 41 of the book <a href="https://en.wikipedia.org/wiki/The_Turing_Guide">The Turing Guide</a>. They split this question in two, first asking whether the universe itself is a computer, then whether the universe could even be computed. These are lofty, unanswerable questions, sure, but they encroach on <em>our</em> territory &mdash;&nbsp;philosophy, automata, nonsense. So, in our usual reverent style and with attentive pacing, the three of us explore the paper, the questions, the answers they choose to highlight, and even share a few perfectly reasonable answers of our own.</p> <p><strong>Links</strong></p> <p>$ <a href="https://www.patreon.com/futureofcoding">Patreon</a></p> <p>In no particular order:</p> <ul> <li><a href="https://en.wikipedia.org/wiki/Carl_Sagan">Carl Sagan</a></li> <li><a href="https://www.youtube.com/watch?v=MJzV0CX0q8o">What it means to be open</a> was Lu's talk at Heart of Clojure</li> <li><a href="https://en.wikipedia.org/wiki/Rudy_Rucker">Rudy Rucker</a></li> <li><a href="https://courses.cs.umbc.edu/graduate/671/fall21/resources/searle_2002.pdf">Is the brain a digital computer?</a> by John Searle</li> <li>The <a href="https://en.wikipedia.org/wiki/Planck_units#Planck_time">Plankth of time</a>.</li> <li><a href="https://queue.acm.org/detail.cfm?id=3212479">C is Not a Low-Level Language</a> by David Chisnall</li> <li><a href="https://mastodon.social/@spiralganglion/112578884737169457">The Connection Machine!!</a></li> <li><a href="https://en.wikipedia.org/wiki/Kolmogorov_complexity">Komgloverav&hellip; Komolgorov&hellip;</a></li> <li><a href="https://en.wikipedia.org/wiki/Outer_Wilds">Outer Worlds?</a></li> <li><a href="https://en.wikipedia.org/wiki/The_Outer_Worlds">Outer Wilds?</a></li> <li><a href="https://www.youtube.com/watch?v=SHt4uJyhJo8">The Witness</a></li> </ul> <p>Music featured in this episode:</p> <ul> <li>No! That's a spoiler. No way I'm telling you.</li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, share your ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and catch us while you still can:</p> <ul> <li>Carl: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> &bull; <a href="https://ivanish.ca/">Website</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> &bull; <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Lu: <a href="https://mas.to/@todepond">Mastodon</a> &bull; <a href="https://www.todepond.com/">Website</a></li> </ul> <p>See you in the future!</p> <p><a href="https://futureofcoding.org/episodes/74">https://futureofcoding.org/episodes/74</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/b02eacd8-938d-433e-8239-b25b01889707/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/is-the-whole-universe-a-computer/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">b02eacd8-938d-433e-8239-b25b01889707</guid>
      <omny:clipId>b02eacd8-938d-433e-8239-b25b01889707</omny:clipId>
      <pubDate>Sun, 05 Jan 2025 00:02:16 +0000</pubDate>
      <itunes:duration>7950</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/b02eacd8-938d-433e-8239-b25b01889707/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="127223960" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/is-the-whole-universe-a-computer</link>
    </item>
    <item>
      <title>Moving Beyond Syntax: Lessons from 20 Years of Blocks Programming in AgentSheets by Alexander Repenning</title>
      <itunes:title>Moving Beyond Syntax: Lessons from 20 Years of Blocks Programming in AgentSheets by Alexander Repenning</itunes:title>
      <description><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Alexander_Repenning">Alexander Repenning</a> created <a href="https://en.wikipedia.org/wiki/AgentSheets">AgentSheets</a>, an environment to help kids develop computational thinking skills. It wrapped an unusual computational model with an even more unusual user interface. The result was divisive. It inspired so many other projects, whilst being rejected at every turn and failing to catch on the way Scratch later did. So in 2017, Repenning published this obit of a paper, <a href="https://agentsheets.com/img/educators/20YearsofBlockProgramingLessonsLearned_published.pdf">Moving Beyond Syntax: Lessons from 20 Years of Blocks Programming in AgentSheets</a>, which covers his findings over the years as AgentSheets evolved and transformed, and gives perspective on block-based programming, programming-by-example, agents / rule / rewrite systems, automata, and more.</p> <p>This is probably the most "normal" episode we've done in a while — we stay close to the text and un-clam many a thought-tickling pearl. I'm saying that sincerely now to throw you off our scent the next time we get totally lost in the weeds. I hear a clock ticking.</p> <p>Links</p> <p>$ Do you want to move beyond syntax? Frustrated by a lack of syntactic, semantic, or pragmatic support? <a href="https://www.patreon.com/futureofcoding">Join our Patreon</a>! Choose the tier that best reflects your personal vision of the future of coding. Get (frequently <em>unhinged</em>) monthly bonus content. Most of all: let us know that you enjoy this thing we do, and help us keep doing it for years to come.</p> <ul> <li><a href="https://en.wikipedia.org/wiki/Argos_(retailer)">Argos</a>, for our non-UK listeners. They were acquired by future TodePond sponsor, <a href="https://en.wikipedia.org/wiki/Sainsbury%27s">Sainsbury's</a>.</li> <li>Once again, I am asking for your <em><a href="https://mastodon.social/@wolkenmachine">Marcel Goethals</a> makes a lot of cool weird stuff and is a choice follow.</em></li> <li><a href="https://en.wikipedia.org/wiki/Scratch_(programming_language)">Scratch</a> isn't baby programming. Also, you should try <a href="https://github.com/ivanreese/2222">this bizarre game</a> Ivan programmed in 3 blocks of Scratch.</li> <li><a href="https://studio.sandspiel.club/">Sandspiel Studio</a> is a delightful block-based sand programming simulator automata environment. <a href="https://www.youtube.com/watch?v=ecCVor7mJ6o">Here's a video</a> of Lu and Max introducing it.</li> <li><a href="https://www.youtube.com/watch?v=SxdOUGdseq4">Simple Made Easy</a>, a seminal talk by <a href="https://en.wikipedia.org/wiki/Rich_Hickey">Rich Hickey</a>. Still hits, all these years later.</li> <li>Someday we'll do an episode on <a href="https://en.wikipedia.org/wiki/Speech_act">speech acts</a>.</li> <li><strong>Rewrite rules</strong> are one example of <a href="https://en.wikipedia.org/wiki/Rewriting">rewriting</a> in computing.</li> <li>Lu's talk —and I quote— "at Cellpond", was actually at SPLASH, about Cellpond, and <a href="https://www.youtube.com/watch?v=eQgxFuw8f1U">it's a good talk</a>, about —and I quote— "actually, what if they didn't give up on rewrite rules at this point in history and what if they went further?"</li> <li>Oh yeah — <a href="https://cellpond.cool/">Cellpond</a> is cool. Here's <a href="https://www.youtube.com/watch?v=xvlsJ3FqNYU">a video</a> showing you how it works. And here's <a href="https://www.youtube.com/watch?v=2jX84iTXKg8">a video</a> studying how that video works. And here's <a href="https://www.youtube.com/watch?v=hlsDbXSZ2ko">a secret third thing</a>that bends into a half-dimension.</li> <li>Here's Repenning's "rule-bending" paper: <a href="https://home.cs.colorado.edu/~ralex/papers/PDF/VL95-RuleBending.pdf">Bending the Rules: Steps Toward Semantically Enriched Graphical Rewrite Rules</a></li> <li>I don't need to link to <a href="https://en.wikipedia.org/wiki/SimCity">SimCity</a>, right? You all know SimCity? <a href="https://en.wikipedia.org/wiki/Will_Wright_(game_designer)">Will Wright</a> is, arguably, the #1 name in simulation games. Well, you might not have caught the fantastic article <a href="https://logicmag.io/play/model-metropolis/">Model Metropolis</a> that unpacks the (inadvertently?) libertarian ideology embodied within the design of its systems. I'd also be remiss not to link to <a href="https://www.polygon.com/videos/2021/4/1/22352583/simcity-hidden-politics-ideology-urban-dynamics">Polygon's video</a> (and the corresponding write-up), which lend a little more colour to the history.</li> <li>Couldn't find a good link to Blox Pascal, which appears in the paper <em>Towards "Second Generation" Interactive, Graphical Programming Environments</em> by <a href="https://www.cs.rpi.edu/~glinert/vita-pubs.html">Ephraim P. Glinert</a>, which I also couldn't find a good link to.</li> <li><a href="https://en.wikipedia.org/wiki/Structure_editor">Projectional / Structural Editor</a>. Here's <a href="https://hazel.org/">a good one</a>.</li> <li><a href="https://www.patreon.com/posts/baba-is-you-104986179">Baba is You</a></li> <li><a href="https://futureofcoding.org/episodes/069">Vernacular Programmers</a></li> <li><a href="https://hazel.org/papers/livelits-paper.pdf">Filling Typed Holes with Live GUIs</a> is, AFAIK, the most current canonical reference for <em>livelits</em>.</li> <li>I'm not linking to Minecraft. But I will link to the <a href="https://minecraft.fandom.com/wiki/Redstone_Repeater">Repeater</a></li> <li><a href="https://www.patreon.com/posts/32-checkboxes-103278355">32 Checkboxes</a></li> <li><a href="https://wiremod.com/">Wiremod</a> is a… you know what, <a href="https://www.youtube.com/watch?v=6wEkNT2McKo">just watch this</a>.</li> <li><a href="https://en.wikipedia.org/wiki/Chomsky_hierarchy">Chomsky Hierarchy</a></li> <li><a href="https://en.wikipedia.org/wiki/The_Witness_(song)">The Witness</a></li> <li>Ivan wrote a <a href="https://mastodon.social/@spiralganglion/112578884737169457">colorful Mastodon thread</a> surveying the history of the <a href="https://en.wikipedia.org/wiki/Connection_Machine">Connection Machine</a>.</li> <li><a href="http://tom7.org/harder/">Harder Drive</a> is a must-watch video by the inimitable <a href="http://tom7.org/">Tom7</a>.</li> <li>Also couldn't find a good link for TORTIS. :/</li> <li><a href="https://en.wikipedia.org/wiki/Programming_by_example">Programming by Example (PbE)</a></li> <li><a href="https://en.wikipedia.org/wiki/Buffalo_buffalo_Buffalo_buffalo_buffalo_buffalo_Buffalo_buffalo">Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo</a></li> <li><a href="https://alexwarth.github.io/">Alex Warth</a>, one of the most lovely humans Ivan knows, is a real champion of "this, <em>because</em> that".</li> <li>Ivan's <a href="https://ivanish.ca/magnetic-fields/">magnetic field simulations</a> — <a href="https://knowyourmeme.com/memes/miracles-fucking-magnets-how-do-they-work">Magnets! How do they work?</a></li> <li>Amit Patel's <a href="https://www.redblobgames.com/">Red Blob Games</a>, fantastic (fantastic!) explorable explanations that help you study various algorithms and techniques used in game development.</li> <li><a href="https://en.wikipedia.org/wiki/Collaborative_diffusion">Collaborative diffusion</a> — "This article has multiple issues."</li> <li><a href="https://shaunlebron.github.io/">Shaun Lebron</a>, who you might know as the creator of <a href="https://shaunlebron.github.io/parinfer/">Parinfer</a>, made <a href="http://shaunlebron.github.io/gh4st/">a game that interactively teaches you how the ghost AI works in Pac-Man</a>. It's fun!</li> <li><a href="https://en.wikipedia.org/wiki/Maxwell%27s_equations">Maxwell's Equations</a> — specifically <a href="https://en.wikipedia.org/wiki/Maxwell%27s_equations#Gauss's_law">Gauss's law</a>, which states that magnetic fields are <a href="https://en.wikipedia.org/wiki/Solenoidal_vector_field">solenoidal</a>, meaning they have zero divergence at all points.</li> <li>University of Colorado Boulder has a collection of simulations called <a href="https://phet.colorado.edu/">PhET</a>. They're… mid, at least when compared to building your own simulation. <a href="https://phet.colorado.edu/sims/html/faradays-law/latest/faradays-law_all.html">For instance.</a></li> </ul> <p>Music featured in this episode:</p> <ul> <li><a href="https://www.youtube.com/watch?v=gSJeHDlhYls">snot bubbles</a></li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, share your ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and catch us at these normal places:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="https://ivanish.ca/">Website</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Lu: <a href="http://todepond.com/lab/login">Login</a> • <a href="https://www.todepond.com/">Website</a></li> </ul> <p>See you in the future!</p> <p><a href="https://futureofcoding.org/episodes/073">https://futureofcoding.org/episodes/073</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Alexander_Repenning">Alexander Repenning</a> created <a href="https://en.wikipedia.org/wiki/AgentSheets">AgentSheets</a>, an environment to help kids develop computational thinking skills. It wrapped an unusual computational model with an even more unusual user interface. The result was divisive. It inspired so many other projects, whilst being rejected at every turn and failing to catch on the way Scratch later did. So in 2017, Repenning published this obit of a paper, <a href="https://agentsheets.com/img/educators/20YearsofBlockProgramingLessonsLearned_published.pdf">Moving Beyond Syntax: Lessons from 20 Years of Blocks Programming in AgentSheets</a>, which covers his findings over the years as AgentSheets evolved and transformed, and gives perspective on block-based programming, programming-by-example, agents / rule / rewrite systems, automata, and more.</p> <p>This is probably the most "normal" episode we've done in a while — we stay close to the text and un-clam many a thought-tickling pearl. I'm saying that sincerely now to throw you off our scent the next time we get totally lost in the weeds. I hear a clock ticking.</p> <p>Links</p> <p>$ Do you want to move beyond syntax? Frustrated by a lack of syntactic, semantic, or pragmatic support? <a href="https://www.patreon.com/futureofcoding">Join our Patreon</a>! Choose the tier that best reflects your personal vision of the future of coding. Get (frequently <em>unhinged</em>) monthly bonus content. Most of all: let us know that you enjoy this thing we do, and help us keep doing it for years to come.</p> <ul> <li><a href="https://en.wikipedia.org/wiki/Argos_(retailer)">Argos</a>, for our non-UK listeners. They were acquired by future TodePond sponsor, <a href="https://en.wikipedia.org/wiki/Sainsbury%27s">Sainsbury's</a>.</li> <li>Once again, I am asking for your <em><a href="https://mastodon.social/@wolkenmachine">Marcel Goethals</a> makes a lot of cool weird stuff and is a choice follow.</em></li> <li><a href="https://en.wikipedia.org/wiki/Scratch_(programming_language)">Scratch</a> isn't baby programming. Also, you should try <a href="https://github.com/ivanreese/2222">this bizarre game</a> Ivan programmed in 3 blocks of Scratch.</li> <li><a href="https://studio.sandspiel.club/">Sandspiel Studio</a> is a delightful block-based sand programming simulator automata environment. <a href="https://www.youtube.com/watch?v=ecCVor7mJ6o">Here's a video</a> of Lu and Max introducing it.</li> <li><a href="https://www.youtube.com/watch?v=SxdOUGdseq4">Simple Made Easy</a>, a seminal talk by <a href="https://en.wikipedia.org/wiki/Rich_Hickey">Rich Hickey</a>. Still hits, all these years later.</li> <li>Someday we'll do an episode on <a href="https://en.wikipedia.org/wiki/Speech_act">speech acts</a>.</li> <li><strong>Rewrite rules</strong> are one example of <a href="https://en.wikipedia.org/wiki/Rewriting">rewriting</a> in computing.</li> <li>Lu's talk —and I quote— "at Cellpond", was actually at SPLASH, about Cellpond, and <a href="https://www.youtube.com/watch?v=eQgxFuw8f1U">it's a good talk</a>, about —and I quote— "actually, what if they didn't give up on rewrite rules at this point in history and what if they went further?"</li> <li>Oh yeah — <a href="https://cellpond.cool/">Cellpond</a> is cool. Here's <a href="https://www.youtube.com/watch?v=xvlsJ3FqNYU">a video</a> showing you how it works. And here's <a href="https://www.youtube.com/watch?v=2jX84iTXKg8">a video</a> studying how that video works. And here's <a href="https://www.youtube.com/watch?v=hlsDbXSZ2ko">a secret third thing</a>that bends into a half-dimension.</li> <li>Here's Repenning's "rule-bending" paper: <a href="https://home.cs.colorado.edu/~ralex/papers/PDF/VL95-RuleBending.pdf">Bending the Rules: Steps Toward Semantically Enriched Graphical Rewrite Rules</a></li> <li>I don't need to link to <a href="https://en.wikipedia.org/wiki/SimCity">SimCity</a>, right? You all know SimCity? <a href="https://en.wikipedia.org/wiki/Will_Wright_(game_designer)">Will Wright</a> is, arguably, the #1 name in simulation games. Well, you might not have caught the fantastic article <a href="https://logicmag.io/play/model-metropolis/">Model Metropolis</a> that unpacks the (inadvertently?) libertarian ideology embodied within the design of its systems. I'd also be remiss not to link to <a href="https://www.polygon.com/videos/2021/4/1/22352583/simcity-hidden-politics-ideology-urban-dynamics">Polygon's video</a> (and the corresponding write-up), which lend a little more colour to the history.</li> <li>Couldn't find a good link to Blox Pascal, which appears in the paper <em>Towards "Second Generation" Interactive, Graphical Programming Environments</em> by <a href="https://www.cs.rpi.edu/~glinert/vita-pubs.html">Ephraim P. Glinert</a>, which I also couldn't find a good link to.</li> <li><a href="https://en.wikipedia.org/wiki/Structure_editor">Projectional / Structural Editor</a>. Here's <a href="https://hazel.org/">a good one</a>.</li> <li><a href="https://www.patreon.com/posts/baba-is-you-104986179">Baba is You</a></li> <li><a href="https://futureofcoding.org/episodes/069">Vernacular Programmers</a></li> <li><a href="https://hazel.org/papers/livelits-paper.pdf">Filling Typed Holes with Live GUIs</a> is, AFAIK, the most current canonical reference for <em>livelits</em>.</li> <li>I'm not linking to Minecraft. But I will link to the <a href="https://minecraft.fandom.com/wiki/Redstone_Repeater">Repeater</a></li> <li><a href="https://www.patreon.com/posts/32-checkboxes-103278355">32 Checkboxes</a></li> <li><a href="https://wiremod.com/">Wiremod</a> is a… you know what, <a href="https://www.youtube.com/watch?v=6wEkNT2McKo">just watch this</a>.</li> <li><a href="https://en.wikipedia.org/wiki/Chomsky_hierarchy">Chomsky Hierarchy</a></li> <li><a href="https://en.wikipedia.org/wiki/The_Witness_(song)">The Witness</a></li> <li>Ivan wrote a <a href="https://mastodon.social/@spiralganglion/112578884737169457">colorful Mastodon thread</a> surveying the history of the <a href="https://en.wikipedia.org/wiki/Connection_Machine">Connection Machine</a>.</li> <li><a href="http://tom7.org/harder/">Harder Drive</a> is a must-watch video by the inimitable <a href="http://tom7.org/">Tom7</a>.</li> <li>Also couldn't find a good link for TORTIS. :/</li> <li><a href="https://en.wikipedia.org/wiki/Programming_by_example">Programming by Example (PbE)</a></li> <li><a href="https://en.wikipedia.org/wiki/Buffalo_buffalo_Buffalo_buffalo_buffalo_buffalo_Buffalo_buffalo">Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo</a></li> <li><a href="https://alexwarth.github.io/">Alex Warth</a>, one of the most lovely humans Ivan knows, is a real champion of "this, <em>because</em> that".</li> <li>Ivan's <a href="https://ivanish.ca/magnetic-fields/">magnetic field simulations</a> — <a href="https://knowyourmeme.com/memes/miracles-fucking-magnets-how-do-they-work">Magnets! How do they work?</a></li> <li>Amit Patel's <a href="https://www.redblobgames.com/">Red Blob Games</a>, fantastic (fantastic!) explorable explanations that help you study various algorithms and techniques used in game development.</li> <li><a href="https://en.wikipedia.org/wiki/Collaborative_diffusion">Collaborative diffusion</a> — "This article has multiple issues."</li> <li><a href="https://shaunlebron.github.io/">Shaun Lebron</a>, who you might know as the creator of <a href="https://shaunlebron.github.io/parinfer/">Parinfer</a>, made <a href="http://shaunlebron.github.io/gh4st/">a game that interactively teaches you how the ghost AI works in Pac-Man</a>. It's fun!</li> <li><a href="https://en.wikipedia.org/wiki/Maxwell%27s_equations">Maxwell's Equations</a> — specifically <a href="https://en.wikipedia.org/wiki/Maxwell%27s_equations#Gauss's_law">Gauss's law</a>, which states that magnetic fields are <a href="https://en.wikipedia.org/wiki/Solenoidal_vector_field">solenoidal</a>, meaning they have zero divergence at all points.</li> <li>University of Colorado Boulder has a collection of simulations called <a href="https://phet.colorado.edu/">PhET</a>. They're… mid, at least when compared to building your own simulation. <a href="https://phet.colorado.edu/sims/html/faradays-law/latest/faradays-law_all.html">For instance.</a></li> </ul> <p>Music featured in this episode:</p> <ul> <li><a href="https://www.youtube.com/watch?v=gSJeHDlhYls">snot bubbles</a></li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, share your ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and catch us at these normal places:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="https://ivanish.ca/">Website</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Lu: <a href="http://todepond.com/lab/login">Login</a> • <a href="https://www.todepond.com/">Website</a></li> </ul> <p>See you in the future!</p> <p><a href="https://futureofcoding.org/episodes/073">https://futureofcoding.org/episodes/073</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/d335c6ad-66b1-428c-851a-b1d701602e1e/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/moving-beyond-syntax-by-alexander-repenning/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">d335c6ad-66b1-428c-851a-b1d701602e1e</guid>
      <omny:clipId>d335c6ad-66b1-428c-851a-b1d701602e1e</omny:clipId>
      <pubDate>Sun, 25 Aug 2024 21:29:00 +0000</pubDate>
      <itunes:duration>9867</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/d335c6ad-66b1-428c-851a-b1d701602e1e/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="157890075" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/moving-beyond-syntax-by-alexander-repenning</link>
    </item>
    <item>
      <title>Pygmalion by David C. Smith</title>
      <itunes:title>Pygmalion by David C. Smith</itunes:title>
      <description><![CDATA[<p>If you're anything like Ivan (oof, sorry), you've heard of <a href="https://worrydream.com/refs/Smith_DC_1975_-_Pygmalion.pdf">Pygmalion</a> but never caught more than the gist. Some sort of project from the early 70s, similar to Sketchpad or Smalltalk or something, yet another promising prototype from the early history of our field that failed to take the world by storm. Our stock-in-trade on this show.</p> <p>But you've probably heard of Programming by Demonstration. And you've certainly heard of <em>icons</em> — you know, those little pictures that have become indelibly part of computing as we know it. Pygmalion is the originator of these concepts… and more!</p> <p>The best introduction to Pygmalion is Mariano Guerra's <a href="https://instadeq.com/blog/posts/no-code-history-pygmalion-1975/">No-code History: Pygmalion</a>, which includes a clearly articulated summary of the big ideas, motivation, and design, with a video demonstration of the programming interface, key terminology, and links.</p> <p>The <em>most</em> introduction to Pygmalion — or Pig Million, The Millionth Pig, as it'll surely come to be known — is the subject of today's episode: the original paper by <a href="https://en.wikipedia.org/wiki/David_Canfield_Smith">David Canfield Smith</a>.</p> <p>Links</p> <p>$ We don't run ads on this show anymore. Sometimes Ivan makes a fake ad for a nonsense product like CarrotGrid or Hest, but those don't pay for the dirt &amp; vapor we grow them in. <a href="https://www.patreon.com/futureofcoding">But what if they could?</a></p> <ul> <li> <p>Gonna just get this one out of the way: <a href="https://en.wikipedia.org/wiki/Quotation">Quotation</a> — and I quote, "A crucial semantic distinction between direct and indirect speech is that direct speech purports to report the exact words that were said or written EXACTLY AS THEY WERE SAID OR WRITTEN, LU, whereas indirect speech is a representation of speech in one's own words WHICH IS ALSO TOTALLY FINE, BUT JUST BE COOL ABOUT IT HEY?"</p> </li> <li> <p><a href="https://mas.to/@TodePond/112319116050265379">@TodePond@mas.to: but wouldn't it be funny... if i quoted those statements on a podcast... and the podcast editor thought... "that doesn't sound right, bret can't have said that"... (he can do no wrong after all)... and so they thought i was just paraphrasing him wrong... and they didn't mark them as quotes like all the other quotes in the show... wouldn't that be funny</a></p> </li> <li> <p><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/drawdeadfish.com">DrawDeadFish.com</a></p> </li> <li> <p>Shout out to <a href="http://brianhempel.com/">Brian Hempel</a> who sent us (among other <a href="https://maniposynth.org/">treats</a>) this <a href="http://acypher.com/wwid/Chapters/01Pygmalion.html">concise summary of Pig Million</a> from the seminal book <a href="http://acypher.com/wwid/">Watch What I Do: Programming by Demonstration</a>.</p> </li> <li> <p>Recent FoC Patreon bonus episodes were about the game <a href="https://www.patreon.com/posts/baba-is-you-104986179">Baba is You</a> and, on our first ever video episode, the design of a <a href="https://www.patreon.com/posts/32-checkboxes-103278355">visual representation for machine code</a>.</p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Leda_and_the_Swan">Leda and the Swan</a>.</p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Lenna">Lenna</a>, a sexist test image that was and to some extent still is widely used in computer graphics.</p> </li> <li> <p><a href="https://www.livingcomputation.org/">Living Computation</a></p> </li> <li> <p>Lu: <a href="https://en.wikipedia.org/wiki/Biscuit">Biscuit</a></p> </li> <li> <p>Jimmy: <a href="https://en.wikipedia.org/wiki/Biscuit_(bread)">Biscuit</a></p> </li> <li> <p>Ivan: <a href="https://en.wikipedia.org/wiki/Limp_Bizkit">Limp Bizkit</a></p> </li> <li> <p>Fine, I might as well link to <a href="https://en.wikipedia.org/wiki/Gottlob_Frege">Frege</a> and <a href="https://en.wikipedia.org/wiki/Analogy">analogy</a>.</p> </li> <li> <p>Aaron Sloman's <a href="https://www.cs.bham.ac.uk/research/projects/cogaff/sloman-analogical-1971.pdf">INTERACTIONS BETWEEN PHILOSOPHY AND ARTIFICIAL INTELLIGENCE: The Role of Intuition and Non-Logical Reasoning in Intelligence</a></p> </li> <li> <p>Ivan: <a href="https://en.wikipedia.org/wiki/Platonism">Platonism</a></p> </li> <li> <p>Jimmy: <a href="https://en.wikipedia.org/wiki/Neoplatonism">Neoplatonism</a></p> </li> <li> <p>Lu: <a href="https://www.youtube.com/watch?v=dQw4w9WgXcQ">Neuplatonism</a></p> </li> <li> <p>I would never <a href="https://en.wikipedia.org/wiki/Jacques_Derrida">Derrida</a></p> </li> <li> <p><a href="https://www.grammarphobia.com/blog/2007/03/a-nosy-question.html">Nosey words</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/History_of_the_alphabet">History of the alphabet</a></p> </li> <li> <p><a href="https://github.com/TodePond/TodeTode">TodeTode</a></p> </li> <li> <p>Lu: <a href="https://en.wikipedia.org/wiki/Constructed_language">Conlang</a></p> </li> <li> <p>Ivan: <a href="https://en.wikipedia.org/wiki/Conlon_Nancarrow">Conlon Nancarrow</a>, beloved (by Ivan, at least) composer of music for the <a href="https://en.wikipedia.org/wiki/Player_piano">Player Piano</a>. Here's a baby-faced Adam Neely with <a href="https://www.youtube.com/watch?v=e2reuQyLoZM">the scoop</a> if you're new to Nancarrow. Welcome.</p> </li> <li> <p>Jimmy: <a href="https://en.wikipedia.org/wiki/Conway_Twitty">Conway Twitty</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Autological_word">Autological words</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Grelling%E2%80%93Nelson_paradox">Heterological words</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/School_for_Poetic_Computation">School for Poetic Computation</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Programming_by_demonstration">Programming by Demonstration</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Player_versus_environment">Player vs Environment</a></p> </li> <li> <p>For the video demonstrating the programming model, check <a href="https://instadeq.com/blog/posts/no-code-history-pygmalion-1975/">Mariano's post</a></p> </li> <li> <p><a href="https://www.canvasprotocol.org/">Open Canvas Working Group</a></p> </li> <li> <p>Lu's project <a href="https://cellpond.cool/">CellPond</a>, and their <a href="https://www.youtube.com/watch?v=eQgxFuw8f1U">SPLASH talk</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Stagecast_Creator">StageCast Creator</a></p> </li> <li> <p><a href="https://mastodon.social/@wolkenmachine">Marcel Goethals</a> makes a lot of cool weird stuff and is a choice follow.</p> </li> </ul> <p>Why does it say "Put all the metal back in the ground" at the bottom of the show notes?</p> <p>Music featured in this episode:</p> <ul> <li>Various old stuff by Ivan. The music for StageCast Creator is called <a href="https://ivanish.ca/lost/">Between Two Tigers</a>.</li> <li><a href="https://www.youtube.com/watch?UerzkjrLju8?t=280">Conlon Nancarrow's Study No. 47</a></li> <li><a href="https://www.youtube.com/watch?v=wE1NyYT31Tw">Wagner</a>, the new <a href="https://en.wikipedia.org/wiki/The_Witness_(2016_video_game)">Witness</a> haunting every episode.</li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, share your ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and catch us at these normal places:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="https://ivanish.ca/">Website</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Lu: <a href="https://mas.to/@TodePond">Mastodon</a> • <a href="https://www.todepond.com/">Website</a></li> </ul> <p>See you in the future!</p> <p><a href="https://futureofcoding.org/episodes/072">https://futureofcoding.org/episodes/072</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>If you're anything like Ivan (oof, sorry), you've heard of <a href="https://worrydream.com/refs/Smith_DC_1975_-_Pygmalion.pdf">Pygmalion</a> but never caught more than the gist. Some sort of project from the early 70s, similar to Sketchpad or Smalltalk or something, yet another promising prototype from the early history of our field that failed to take the world by storm. Our stock-in-trade on this show.</p> <p>But you've probably heard of Programming by Demonstration. And you've certainly heard of <em>icons</em> — you know, those little pictures that have become indelibly part of computing as we know it. Pygmalion is the originator of these concepts… and more!</p> <p>The best introduction to Pygmalion is Mariano Guerra's <a href="https://instadeq.com/blog/posts/no-code-history-pygmalion-1975/">No-code History: Pygmalion</a>, which includes a clearly articulated summary of the big ideas, motivation, and design, with a video demonstration of the programming interface, key terminology, and links.</p> <p>The <em>most</em> introduction to Pygmalion — or Pig Million, The Millionth Pig, as it'll surely come to be known — is the subject of today's episode: the original paper by <a href="https://en.wikipedia.org/wiki/David_Canfield_Smith">David Canfield Smith</a>.</p> <p>Links</p> <p>$ We don't run ads on this show anymore. Sometimes Ivan makes a fake ad for a nonsense product like CarrotGrid or Hest, but those don't pay for the dirt &amp; vapor we grow them in. <a href="https://www.patreon.com/futureofcoding">But what if they could?</a></p> <ul> <li> <p>Gonna just get this one out of the way: <a href="https://en.wikipedia.org/wiki/Quotation">Quotation</a> — and I quote, "A crucial semantic distinction between direct and indirect speech is that direct speech purports to report the exact words that were said or written EXACTLY AS THEY WERE SAID OR WRITTEN, LU, whereas indirect speech is a representation of speech in one's own words WHICH IS ALSO TOTALLY FINE, BUT JUST BE COOL ABOUT IT HEY?"</p> </li> <li> <p><a href="https://mas.to/@TodePond/112319116050265379">@TodePond@mas.to: but wouldn't it be funny... if i quoted those statements on a podcast... and the podcast editor thought... "that doesn't sound right, bret can't have said that"... (he can do no wrong after all)... and so they thought i was just paraphrasing him wrong... and they didn't mark them as quotes like all the other quotes in the show... wouldn't that be funny</a></p> </li> <li> <p><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/drawdeadfish.com">DrawDeadFish.com</a></p> </li> <li> <p>Shout out to <a href="http://brianhempel.com/">Brian Hempel</a> who sent us (among other <a href="https://maniposynth.org/">treats</a>) this <a href="http://acypher.com/wwid/Chapters/01Pygmalion.html">concise summary of Pig Million</a> from the seminal book <a href="http://acypher.com/wwid/">Watch What I Do: Programming by Demonstration</a>.</p> </li> <li> <p>Recent FoC Patreon bonus episodes were about the game <a href="https://www.patreon.com/posts/baba-is-you-104986179">Baba is You</a> and, on our first ever video episode, the design of a <a href="https://www.patreon.com/posts/32-checkboxes-103278355">visual representation for machine code</a>.</p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Leda_and_the_Swan">Leda and the Swan</a>.</p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Lenna">Lenna</a>, a sexist test image that was and to some extent still is widely used in computer graphics.</p> </li> <li> <p><a href="https://www.livingcomputation.org/">Living Computation</a></p> </li> <li> <p>Lu: <a href="https://en.wikipedia.org/wiki/Biscuit">Biscuit</a></p> </li> <li> <p>Jimmy: <a href="https://en.wikipedia.org/wiki/Biscuit_(bread)">Biscuit</a></p> </li> <li> <p>Ivan: <a href="https://en.wikipedia.org/wiki/Limp_Bizkit">Limp Bizkit</a></p> </li> <li> <p>Fine, I might as well link to <a href="https://en.wikipedia.org/wiki/Gottlob_Frege">Frege</a> and <a href="https://en.wikipedia.org/wiki/Analogy">analogy</a>.</p> </li> <li> <p>Aaron Sloman's <a href="https://www.cs.bham.ac.uk/research/projects/cogaff/sloman-analogical-1971.pdf">INTERACTIONS BETWEEN PHILOSOPHY AND ARTIFICIAL INTELLIGENCE: The Role of Intuition and Non-Logical Reasoning in Intelligence</a></p> </li> <li> <p>Ivan: <a href="https://en.wikipedia.org/wiki/Platonism">Platonism</a></p> </li> <li> <p>Jimmy: <a href="https://en.wikipedia.org/wiki/Neoplatonism">Neoplatonism</a></p> </li> <li> <p>Lu: <a href="https://www.youtube.com/watch?v=dQw4w9WgXcQ">Neuplatonism</a></p> </li> <li> <p>I would never <a href="https://en.wikipedia.org/wiki/Jacques_Derrida">Derrida</a></p> </li> <li> <p><a href="https://www.grammarphobia.com/blog/2007/03/a-nosy-question.html">Nosey words</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/History_of_the_alphabet">History of the alphabet</a></p> </li> <li> <p><a href="https://github.com/TodePond/TodeTode">TodeTode</a></p> </li> <li> <p>Lu: <a href="https://en.wikipedia.org/wiki/Constructed_language">Conlang</a></p> </li> <li> <p>Ivan: <a href="https://en.wikipedia.org/wiki/Conlon_Nancarrow">Conlon Nancarrow</a>, beloved (by Ivan, at least) composer of music for the <a href="https://en.wikipedia.org/wiki/Player_piano">Player Piano</a>. Here's a baby-faced Adam Neely with <a href="https://www.youtube.com/watch?v=e2reuQyLoZM">the scoop</a> if you're new to Nancarrow. Welcome.</p> </li> <li> <p>Jimmy: <a href="https://en.wikipedia.org/wiki/Conway_Twitty">Conway Twitty</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Autological_word">Autological words</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Grelling%E2%80%93Nelson_paradox">Heterological words</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/School_for_Poetic_Computation">School for Poetic Computation</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Programming_by_demonstration">Programming by Demonstration</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Player_versus_environment">Player vs Environment</a></p> </li> <li> <p>For the video demonstrating the programming model, check <a href="https://instadeq.com/blog/posts/no-code-history-pygmalion-1975/">Mariano's post</a></p> </li> <li> <p><a href="https://www.canvasprotocol.org/">Open Canvas Working Group</a></p> </li> <li> <p>Lu's project <a href="https://cellpond.cool/">CellPond</a>, and their <a href="https://www.youtube.com/watch?v=eQgxFuw8f1U">SPLASH talk</a></p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Stagecast_Creator">StageCast Creator</a></p> </li> <li> <p><a href="https://mastodon.social/@wolkenmachine">Marcel Goethals</a> makes a lot of cool weird stuff and is a choice follow.</p> </li> </ul> <p>Why does it say "Put all the metal back in the ground" at the bottom of the show notes?</p> <p>Music featured in this episode:</p> <ul> <li>Various old stuff by Ivan. The music for StageCast Creator is called <a href="https://ivanish.ca/lost/">Between Two Tigers</a>.</li> <li><a href="https://www.youtube.com/watch?UerzkjrLju8?t=280">Conlon Nancarrow's Study No. 47</a></li> <li><a href="https://www.youtube.com/watch?v=wE1NyYT31Tw">Wagner</a>, the new <a href="https://en.wikipedia.org/wiki/The_Witness_(2016_video_game)">Witness</a> haunting every episode.</li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, share your ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and catch us at these normal places:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="https://ivanish.ca/">Website</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Lu: <a href="https://mas.to/@TodePond">Mastodon</a> • <a href="https://www.todepond.com/">Website</a></li> </ul> <p>See you in the future!</p> <p><a href="https://futureofcoding.org/episodes/072">https://futureofcoding.org/episodes/072</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/9ce56f44-ae77-4b33-849e-b19400dd8a1f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/pygmalion-by-david-c-smith/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">9ce56f44-ae77-4b33-849e-b19400dd8a1f</guid>
      <omny:clipId>9ce56f44-ae77-4b33-849e-b19400dd8a1f</omny:clipId>
      <pubDate>Wed, 19 Jun 2024 13:37:36 +0000</pubDate>
      <itunes:duration>11379</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/9ce56f44-ae77-4b33-849e-b19400dd8a1f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="182077715" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/pygmalion-by-david-c-smith</link>
      <itunes:explicit>yes</itunes:explicit>
    </item>
    <item>
      <title>Elephant in the Room</title>
      <itunes:title>Elephant in the Room</itunes:title>
      <description><![CDATA[<p><a href="https://vimeo.com/906418692">Inventing on Principle</a><br><a href="https://vimeo.com/64895205">Stop Drawing Dead Fish</a><br><a href="https://vimeo.com/71278954">The Future of Programming</a></p> <p>Yes, all three of them in one episode. Phew!</p> <p>Links</p> <p>$ <a href="https://www.patreon.com/futureofcoding">patreon.com/futureofcoding</a> — Lu and Jimmy recorded an episode about Hest without telling me, and by total coincidence released it on my birthday. Those jerks… make me so happy.</p> <ul> <li>Lu's talk at SPLASH 2023: <a href="https://www.youtube.com/watch?v=eQgxFuw8f1U">Cellpond: Spatial Programming Without Escape</a></li> <li>Gary Bernhardt's talk <a href="https://www.destroyallsoftware.com/talks/wat">Wat</a></li> <li><a href="https://www.youtube.com/watch?v=NGYGl_xxfXA">Inventing on Principle by Bret Victor ("""Clean""" Audio)</a></li> <li><a href="https://en.wikipedia.org/wiki/Braid_(video_game)">Braid</a>, the good video game from the creator of <a href="https://www.youtube.com/watch?v=KZokQov_aH0">The Witness</a></li> <li><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/davidhellman.net">David Hellman</a> is the visual artist behind <a href="http://braid-game.com/">Braid</a>, <a href="http://www.alessonislearned.com/">A Lesson Is Learned but the Damage Is Irreversible</a>, <a href="https://dynamicland.org/">Dynamicland</a>, and… the Braid section of Inventing on Principle.</li> <li><a href="https://www.kickstarter.com/projects/ibdknox/light-table">Light Table</a> by <a href="https://chris-granger.com/resume/">Chris Granger</a></li> <li><a href="https://worrydream.com/LearnableProgramming/">Learnable Programming</a> by Bret Victor</li> <li>When Lu says "It's <em>The Line</em>", they're referring to this thing they're working on called Seet (or "see it"), and you can <a href="https://github.com/TodePond/TodePondDotCom/blob/main/lab/readme.md">sneak</a> a peek at seet right <a href="https://www.todepond.com/wikiblogarden/see-it/prior-art/">heet</a>.</li> <li><a href="https://en.wikipedia.org/wiki/Paris_Fashion_Week">Paris Fashion Week</a> absolutely struts, and so can you!</li> <li>The <a href="https://en.wikipedia.org/wiki/Jean_jacket#Canadian_tuxedo">Canadian Tuxedo</a>. As the representative of Canada, I can confirm that I own both a denim jacket and denim pants. If you see me at a conference wearing this combo, I will give you a hug.</li> <li>Jimmy runs a personal <a href="https://en.wikipedia.org/wiki/Lichess">Lichess</a> data lake.</li> <li><a href="https://stackoverflow.com/questions/24581873/what-exactly-is-hot-module-replacement-in-webpack">Hot Module Replacement</a> is a good thing.</li> <li><a href="https://instadeq.com/blog/posts/no-code-history-pygmalion-1975/">Pygmalion</a> has a lot of juicy silly bits, 'parently.</li> <li><a href="http://cuttle.xyz/">Cuttle</a> is awesome! It's a worthy successor to <a href="http://aprt.us/">Apparatus</a>. <a href="http://tobyschachman.com/">Toby Schachman</a>, <a href="https://www.forresto.com/">Forrest Oliphant</a>, I think maybe a few other folks too? Crushing it. Oh, and don't miss <a href="https://futureofcoding.org/episodes/051">Toby's episode</a> of this very podcast!</li> <li><a href="http://recursivedrawing.com/">Recursive Drawing</a>, another Toby Schachman joint.</li> <li><a href="https://www.youtube.com/watch?v=Q4OIcwt8vcE">Screens in Screens in Screens</a>, another Lu Wilson joint.</li> <li><a href="https://en.wikipedia.org/wiki/Larry_Tesler">Larry Tesler</a>. Not a fan of modes.</li> <li>Lu writes about <a href="https://www.todepond.com/wikiblogarden/my-wikiblogarden/no-more-ideas/">No Ideas</a> on their <a href="https://www.todepond.com/wikiblogarden/">blog</a>, which is actually just a <a href="https://www.todepond.com/wikiblogarden/">wiki</a>, but it's actually a <a href="https://www.todepond.com/wikiblogarden/">blog</a>, but it's actually just a <a href="https://www.todepond.com/wikiblogarden/">garden</a>.</li> <li>When we mention <a href="https://en.wikipedia.org/wiki/Rich_Hickey">Rich Hickey</a>, we're referring to the talk <a href="https://www.infoq.com/presentations/Simple-Made-Easy/">Simple Made Easy</a></li> <li><a href="https://en.wikipedia.org/wiki/Jacob_Collier">Jacob Collier</a>, ugh.</li> <li><a href="https://en.wikipedia.org/wiki/Suffragette">Suffragettes</a>, women advocating for their <a href="https://en.wikipedia.org/wiki/Women%27s_suffrage">right to vote</a>, absolutely had a principle. Not sure that we should be directly likening their struggle to what we do in tech. On the other hand, it's good to foster positive movements, to resist <a href="https://en.wikipedia.org/wiki/Incel">incel</a> and other hateful ones.</li> <li>Instead of linking to e/ anything, I'm just gonna link to <a href="https://www.bltc.com/">BLTC</a> for reasons that only make sense to longtime listeners.</li> <li><a href="https://jackrusher.com/strange-loop-2022/">Stop Writing Dead Programs</a> by <a href="https://jackrusher.com/">Jack Rusher</a>. <a href="https://futureofcoding.org/episodes/041">Jack Rusher</a>? <a href="https://futureofcoding.org/episodes/069">Jack Rusher</a>!</li> <li><a href="https://www.youtube.com/watch?v=ZMklf0vUl18">It's the fish one, the one with the fish. …Sorry, these aren't actually fish, or something, because they're just drawings.</a></li> <li><a href="https://en.wikipedia.org/wiki/Ren%C3%A9_Magritte">René Magritte</a> is the creator behind <a href="https://en.wikipedia.org/wiki/The_Treachery_of_Images">La Trahison des Images</a>, origin of "Ceci n'est pas une pipe". Or maybe it was <a href="https://www.youtube.com/watch?v=_9MQe7tR5xQ">Margit the Fell Omen</a>?</li> <li>Magritte's <a href="https://gallica.bnf.fr/ark:/12148/bpt6k58451673/f38.item.r=les">Words and Images</a> are lovely. Here's an <a href="http://www.philosophical-investigations.org/2017/12/representing-reality-magritte-on-words.html">English translation</a>, though its worth taking a look at the original in context.</li> <li><a href="https://en.wikipedia.org/wiki/Acousmatic_music">Acousmatic Music</a></li> <li>Lu has made art with behaviour — various <a href="https://www.youtube.com/watch?v=BDyvjkAs5-Y">sands</a>, and <a href="https://www.youtube.com/watch?v=xvlsJ3FqNYU">CellPond</a>, say.</li> <li><a href="https://www.youtube.com/user/barnabydixon">Barnaby Dixon? Barnaby Dixon. Barnaby Dixon! Barnaby Dixon!!</a></li> <li>You can listen to part of Ivan's <a href="https://raised-sixth.surge.sh/">"""Metronome"""</a>, if you want. Or you can listen to an <a href="https://www.youtube.com/watch?v=CoP1bg1GQTM">early version</a> of the song he's using this metronome to write. Or you can hear snippets of it in the <a href="https://www.youtube.com/watch?v=-FgAHiI3ZNY">Torn Leaf Zero video</a> (especially the ending). But, like, you could also go make yourself lunch. I recommend mixing up a spicy peanut sauce for your roasted carrots. Shred a bit of cheese, tomato. Toast the bread. Pull the sausages right when the oil starts to spit. Put them straight into the compost. Look at the bottom of the compost bucket. What's down there? It's shiny. Why are you reading this? Why am I writing this? Why do we make <em>this</em>podcast?</li> <li><a href="https://www.youtube.com/watch?v=IvUU8joBb1Q">Wintergatan — Marble Machine</a> exists</li> <li>Oh, I forgot to add a link to <a href="https://arroost.com/">Arroost</a> earlier. You can also watch a pretty good video that is basically an <a href="https://www.youtube.com/watch?v=DNBKdU6XrLY">Arroost tutorial</a>, not much to it. There are also some nice examples of <a href="https://www.todepond.com/wikiblogarden/arroost/examples/">things people have made with Arroost</a>.</li> <li>The <a href="https://en.wikipedia.org/wiki/Rain_Room">Rain Room</a> looks <a href="https://www.youtube.com/watch?v=EkvazIZx-F0">pretty cool</a>. It's the exact inverse of <a href="https://www.polygon.com/23890979/starfield-rain-effects-how-its-made">how rain works in many video games</a>. YOU MUST PLAY <a href="https://www.youtube.com/watch?v=_0L-JzJhZbM">RAIN WORLD</a>.</li> <li>Here's a <a href="https://youtu.be/iRsSjh5TTqI?feature=shared&amp;t=188">beautiful demo of a microtonal guitar</a>, and speaking of using complex machines to make music that would be "easier" to make with a computer, here's a <a href="https://www.youtube.com/watch?v=zbbyikFthEc">microtonal guitar with mechanized frets that can change the tuning dynamically</a>. This entire YT channel is gold.</li> <li>Shane Crowley wrote <a href="https://edibotopic.com/blog/doing/leisure-sick/">a lovely blog post</a> about creating music with Arroost.</li> <li><a href="https://blank.page/">blank.page</a> is a fun experiment in writing with various frictions.</li> <li><a href="https://en.wikipedia.org/wiki/Super_Meat_Boy">Super Meat Boy</a> (the successor to Meat Boy, a Flash game) and <a href="https://en.wikipedia.org/wiki/Celeste_(video_game)">Celeste</a> are great examples of communicating tacit knowledge through the design of a simulation.</li> <li><a href="https://en.wikipedia.org/wiki/Newgrounds">Newgrounds</a> and <a href="https://en.wikipedia.org/wiki/EBaum%27s_World">eBaum's World</a> and <a href="https://en.wikipedia.org/wiki/Homestar_Runner">Homestar Runner</a> were early examples of (arguably) computer-native media.</li> <li>Hey, here's this episode's requisite link to the <a href="https://www.youtube.com/@T2TileProject">T2 Tile Project</a> and <a href="https://www.andrewwalpole.com/blog/an-introduction-to-robust-first-computation/">Robust-First Computing</a>. I should probably just create a hard-coded section of the episode page template linking to T2, The Witness, and Jack Rusher.</li> <li>The pun-proof <a href="https://en.wikipedia.org/wiki/Ivan_Sutherland">Ivan Sutherland</a> made <a href="https://en.wikipedia.org/wiki/Sketchpad">Sketchpad</a>. <a href="https://en.wikipedia.org/wiki/Planner_(programming_language)">Planner</a> exists.</li> <li>The <a href="https://en.wikipedia.org/wiki/PlayStation_3#Technical_specifications">PlayStation 3 Cell processor</a> was this weirdly parallel CPU that was a pain in the butt to program.</li> <li>The <a href="https://3dconnexion.com/ca/spacemouse/">SpaceMouse</a></li> </ul> <p>Put all metal back into the ground.</p> <p>Music featured in this episode:</p> <ul> <li>Fingers from <a href="https://ivanish.ca/this-score-is-butt-ugly/">This Score is Butt Ugly</a></li> <li><a href="https://www.youtube.com/watch?v=wE1NyYT31Tw">The Sailor's Chorus</a> from Wagner's The Flying Dutchman.</li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, share your ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and catch us at these normal places:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="https://ivanish.ca/">Website</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Lu: <a href="https://mas.to/@TodePond">Mastodon</a> • <a href="https://www.todepond.com/">Website</a></li> </ul> <p>See you in the future!</p> <p><a href="https://futureofcoding.org/episodes/71">https://futureofcoding.org/episodes/71</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><a href="https://vimeo.com/906418692">Inventing on Principle</a><br><a href="https://vimeo.com/64895205">Stop Drawing Dead Fish</a><br><a href="https://vimeo.com/71278954">The Future of Programming</a></p> <p>Yes, all three of them in one episode. Phew!</p> <p>Links</p> <p>$ <a href="https://www.patreon.com/futureofcoding">patreon.com/futureofcoding</a> — Lu and Jimmy recorded an episode about Hest without telling me, and by total coincidence released it on my birthday. Those jerks… make me so happy.</p> <ul> <li>Lu's talk at SPLASH 2023: <a href="https://www.youtube.com/watch?v=eQgxFuw8f1U">Cellpond: Spatial Programming Without Escape</a></li> <li>Gary Bernhardt's talk <a href="https://www.destroyallsoftware.com/talks/wat">Wat</a></li> <li><a href="https://www.youtube.com/watch?v=NGYGl_xxfXA">Inventing on Principle by Bret Victor ("""Clean""" Audio)</a></li> <li><a href="https://en.wikipedia.org/wiki/Braid_(video_game)">Braid</a>, the good video game from the creator of <a href="https://www.youtube.com/watch?v=KZokQov_aH0">The Witness</a></li> <li><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/davidhellman.net">David Hellman</a> is the visual artist behind <a href="http://braid-game.com/">Braid</a>, <a href="http://www.alessonislearned.com/">A Lesson Is Learned but the Damage Is Irreversible</a>, <a href="https://dynamicland.org/">Dynamicland</a>, and… the Braid section of Inventing on Principle.</li> <li><a href="https://www.kickstarter.com/projects/ibdknox/light-table">Light Table</a> by <a href="https://chris-granger.com/resume/">Chris Granger</a></li> <li><a href="https://worrydream.com/LearnableProgramming/">Learnable Programming</a> by Bret Victor</li> <li>When Lu says "It's <em>The Line</em>", they're referring to this thing they're working on called Seet (or "see it"), and you can <a href="https://github.com/TodePond/TodePondDotCom/blob/main/lab/readme.md">sneak</a> a peek at seet right <a href="https://www.todepond.com/wikiblogarden/see-it/prior-art/">heet</a>.</li> <li><a href="https://en.wikipedia.org/wiki/Paris_Fashion_Week">Paris Fashion Week</a> absolutely struts, and so can you!</li> <li>The <a href="https://en.wikipedia.org/wiki/Jean_jacket#Canadian_tuxedo">Canadian Tuxedo</a>. As the representative of Canada, I can confirm that I own both a denim jacket and denim pants. If you see me at a conference wearing this combo, I will give you a hug.</li> <li>Jimmy runs a personal <a href="https://en.wikipedia.org/wiki/Lichess">Lichess</a> data lake.</li> <li><a href="https://stackoverflow.com/questions/24581873/what-exactly-is-hot-module-replacement-in-webpack">Hot Module Replacement</a> is a good thing.</li> <li><a href="https://instadeq.com/blog/posts/no-code-history-pygmalion-1975/">Pygmalion</a> has a lot of juicy silly bits, 'parently.</li> <li><a href="http://cuttle.xyz/">Cuttle</a> is awesome! It's a worthy successor to <a href="http://aprt.us/">Apparatus</a>. <a href="http://tobyschachman.com/">Toby Schachman</a>, <a href="https://www.forresto.com/">Forrest Oliphant</a>, I think maybe a few other folks too? Crushing it. Oh, and don't miss <a href="https://futureofcoding.org/episodes/051">Toby's episode</a> of this very podcast!</li> <li><a href="http://recursivedrawing.com/">Recursive Drawing</a>, another Toby Schachman joint.</li> <li><a href="https://www.youtube.com/watch?v=Q4OIcwt8vcE">Screens in Screens in Screens</a>, another Lu Wilson joint.</li> <li><a href="https://en.wikipedia.org/wiki/Larry_Tesler">Larry Tesler</a>. Not a fan of modes.</li> <li>Lu writes about <a href="https://www.todepond.com/wikiblogarden/my-wikiblogarden/no-more-ideas/">No Ideas</a> on their <a href="https://www.todepond.com/wikiblogarden/">blog</a>, which is actually just a <a href="https://www.todepond.com/wikiblogarden/">wiki</a>, but it's actually a <a href="https://www.todepond.com/wikiblogarden/">blog</a>, but it's actually just a <a href="https://www.todepond.com/wikiblogarden/">garden</a>.</li> <li>When we mention <a href="https://en.wikipedia.org/wiki/Rich_Hickey">Rich Hickey</a>, we're referring to the talk <a href="https://www.infoq.com/presentations/Simple-Made-Easy/">Simple Made Easy</a></li> <li><a href="https://en.wikipedia.org/wiki/Jacob_Collier">Jacob Collier</a>, ugh.</li> <li><a href="https://en.wikipedia.org/wiki/Suffragette">Suffragettes</a>, women advocating for their <a href="https://en.wikipedia.org/wiki/Women%27s_suffrage">right to vote</a>, absolutely had a principle. Not sure that we should be directly likening their struggle to what we do in tech. On the other hand, it's good to foster positive movements, to resist <a href="https://en.wikipedia.org/wiki/Incel">incel</a> and other hateful ones.</li> <li>Instead of linking to e/ anything, I'm just gonna link to <a href="https://www.bltc.com/">BLTC</a> for reasons that only make sense to longtime listeners.</li> <li><a href="https://jackrusher.com/strange-loop-2022/">Stop Writing Dead Programs</a> by <a href="https://jackrusher.com/">Jack Rusher</a>. <a href="https://futureofcoding.org/episodes/041">Jack Rusher</a>? <a href="https://futureofcoding.org/episodes/069">Jack Rusher</a>!</li> <li><a href="https://www.youtube.com/watch?v=ZMklf0vUl18">It's the fish one, the one with the fish. …Sorry, these aren't actually fish, or something, because they're just drawings.</a></li> <li><a href="https://en.wikipedia.org/wiki/Ren%C3%A9_Magritte">René Magritte</a> is the creator behind <a href="https://en.wikipedia.org/wiki/The_Treachery_of_Images">La Trahison des Images</a>, origin of "Ceci n'est pas une pipe". Or maybe it was <a href="https://www.youtube.com/watch?v=_9MQe7tR5xQ">Margit the Fell Omen</a>?</li> <li>Magritte's <a href="https://gallica.bnf.fr/ark:/12148/bpt6k58451673/f38.item.r=les">Words and Images</a> are lovely. Here's an <a href="http://www.philosophical-investigations.org/2017/12/representing-reality-magritte-on-words.html">English translation</a>, though its worth taking a look at the original in context.</li> <li><a href="https://en.wikipedia.org/wiki/Acousmatic_music">Acousmatic Music</a></li> <li>Lu has made art with behaviour — various <a href="https://www.youtube.com/watch?v=BDyvjkAs5-Y">sands</a>, and <a href="https://www.youtube.com/watch?v=xvlsJ3FqNYU">CellPond</a>, say.</li> <li><a href="https://www.youtube.com/user/barnabydixon">Barnaby Dixon? Barnaby Dixon. Barnaby Dixon! Barnaby Dixon!!</a></li> <li>You can listen to part of Ivan's <a href="https://raised-sixth.surge.sh/">"""Metronome"""</a>, if you want. Or you can listen to an <a href="https://www.youtube.com/watch?v=CoP1bg1GQTM">early version</a> of the song he's using this metronome to write. Or you can hear snippets of it in the <a href="https://www.youtube.com/watch?v=-FgAHiI3ZNY">Torn Leaf Zero video</a> (especially the ending). But, like, you could also go make yourself lunch. I recommend mixing up a spicy peanut sauce for your roasted carrots. Shred a bit of cheese, tomato. Toast the bread. Pull the sausages right when the oil starts to spit. Put them straight into the compost. Look at the bottom of the compost bucket. What's down there? It's shiny. Why are you reading this? Why am I writing this? Why do we make <em>this</em>podcast?</li> <li><a href="https://www.youtube.com/watch?v=IvUU8joBb1Q">Wintergatan — Marble Machine</a> exists</li> <li>Oh, I forgot to add a link to <a href="https://arroost.com/">Arroost</a> earlier. You can also watch a pretty good video that is basically an <a href="https://www.youtube.com/watch?v=DNBKdU6XrLY">Arroost tutorial</a>, not much to it. There are also some nice examples of <a href="https://www.todepond.com/wikiblogarden/arroost/examples/">things people have made with Arroost</a>.</li> <li>The <a href="https://en.wikipedia.org/wiki/Rain_Room">Rain Room</a> looks <a href="https://www.youtube.com/watch?v=EkvazIZx-F0">pretty cool</a>. It's the exact inverse of <a href="https://www.polygon.com/23890979/starfield-rain-effects-how-its-made">how rain works in many video games</a>. YOU MUST PLAY <a href="https://www.youtube.com/watch?v=_0L-JzJhZbM">RAIN WORLD</a>.</li> <li>Here's a <a href="https://youtu.be/iRsSjh5TTqI?feature=shared&amp;t=188">beautiful demo of a microtonal guitar</a>, and speaking of using complex machines to make music that would be "easier" to make with a computer, here's a <a href="https://www.youtube.com/watch?v=zbbyikFthEc">microtonal guitar with mechanized frets that can change the tuning dynamically</a>. This entire YT channel is gold.</li> <li>Shane Crowley wrote <a href="https://edibotopic.com/blog/doing/leisure-sick/">a lovely blog post</a> about creating music with Arroost.</li> <li><a href="https://blank.page/">blank.page</a> is a fun experiment in writing with various frictions.</li> <li><a href="https://en.wikipedia.org/wiki/Super_Meat_Boy">Super Meat Boy</a> (the successor to Meat Boy, a Flash game) and <a href="https://en.wikipedia.org/wiki/Celeste_(video_game)">Celeste</a> are great examples of communicating tacit knowledge through the design of a simulation.</li> <li><a href="https://en.wikipedia.org/wiki/Newgrounds">Newgrounds</a> and <a href="https://en.wikipedia.org/wiki/EBaum%27s_World">eBaum's World</a> and <a href="https://en.wikipedia.org/wiki/Homestar_Runner">Homestar Runner</a> were early examples of (arguably) computer-native media.</li> <li>Hey, here's this episode's requisite link to the <a href="https://www.youtube.com/@T2TileProject">T2 Tile Project</a> and <a href="https://www.andrewwalpole.com/blog/an-introduction-to-robust-first-computation/">Robust-First Computing</a>. I should probably just create a hard-coded section of the episode page template linking to T2, The Witness, and Jack Rusher.</li> <li>The pun-proof <a href="https://en.wikipedia.org/wiki/Ivan_Sutherland">Ivan Sutherland</a> made <a href="https://en.wikipedia.org/wiki/Sketchpad">Sketchpad</a>. <a href="https://en.wikipedia.org/wiki/Planner_(programming_language)">Planner</a> exists.</li> <li>The <a href="https://en.wikipedia.org/wiki/PlayStation_3#Technical_specifications">PlayStation 3 Cell processor</a> was this weirdly parallel CPU that was a pain in the butt to program.</li> <li>The <a href="https://3dconnexion.com/ca/spacemouse/">SpaceMouse</a></li> </ul> <p>Put all metal back into the ground.</p> <p>Music featured in this episode:</p> <ul> <li>Fingers from <a href="https://ivanish.ca/this-score-is-butt-ugly/">This Score is Butt Ugly</a></li> <li><a href="https://www.youtube.com/watch?v=wE1NyYT31Tw">The Sailor's Chorus</a> from Wagner's The Flying Dutchman.</li> </ul> <p>! Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, share your ideas in the <a href="https://futureofcoding.org/community">Slack</a>, and catch us at these normal places:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="https://ivanish.ca/">Website</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Lu: <a href="https://mas.to/@TodePond">Mastodon</a> • <a href="https://www.todepond.com/">Website</a></li> </ul> <p>See you in the future!</p> <p><a href="https://futureofcoding.org/episodes/71">https://futureofcoding.org/episodes/71</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/9b17e6be-f925-4bb1-9e63-b159000a9d75/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/elephant-in-the-room/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">9b17e6be-f925-4bb1-9e63-b159000a9d75</guid>
      <omny:clipId>9b17e6be-f925-4bb1-9e63-b159000a9d75</omny:clipId>
      <pubDate>Sun, 21 Apr 2024 04:07:22 +0000</pubDate>
      <itunes:duration>10562</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/9b17e6be-f925-4bb1-9e63-b159000a9d75/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="169016006" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/elephant-in-the-room</link>
      <itunes:explicit>yes</itunes:explicit>
    </item>
    <item>
      <title>Beyond Efficiency by Dave Ackley</title>
      <itunes:title>Beyond Efficiency by Dave Ackley</itunes:title>
      <description><![CDATA[<p><a href="https://www.cs.unm.edu/~ackley/">Dave Ackley</a>'s paper <a href="https://www.cs.unm.edu/~ackley/be-201301131528.pdf">Beyond Efficiency</a> is three pages long. With just these three pages, he mounts a compelling argument against the conventional way we engineer software. Instead of inflexibly insisting upon correctness, maybe allow a lil slop? Instead of chasing peak performance with cache and clever tricks, maybe measure many times before you cut. So in this episode, we're putting every CEO in the guillotine… (oh, that stands for "correctness and efficiency only", don't put us on a list)… and considering when, where, and how to do the robust thing.</p> <p><strong>Links</strong></p> <p>$ <a href="https://www.patreon.com/futureofcoding">patreon.com/futureofcoding</a> — The most recent bonus episode is a discussion with Stefan Lesser about new "laws of physics" we can invent inside the computer.</p> <p><em>Don't destroy the earth, then make sure your thing can't be destroyed, then don't destroy your data, and finally, do your damn job, AAAAAAAAAAAAAAAAAAAAAAAAAAA.</em></p> <ul> <li><a href="https://johnwhiles.com/posts/programming-as-theory">A Software Epiphany</a>, and the accompanying <a href="https://news.ycombinator.com/item?id=38324486">HN discussion</a> — giga viral, so sick</li> <li><a href="https://www.partykit.io/">PartyKit</a>? Nice!</li> <li>What started as a <a href="https://mastodon.social/@TodePond@mas.to/111402970410628418">simple todo list</a> turned into an <a href="https://twitter.com/tldraw/status/1724892287304646868">ocean of tech boy milk</a> and, ultimately, the <a href="https://news.ycombinator.com/item?id=38309611">AI apocalypse</a>.</li> <li><a href="https://jepsen.io/">Jepsen</a> is a rough, rugged, deeply thoughtful and fantastically cool approach to distributed systems testing, by <a href="https://aphyr.com/">Kyle Kingsbury</a>. Also, we didn't talk about it, but his <a href="https://aphyr.com/posts/340-reversing-the-technical-interview">reversing</a> / <a href="https://aphyr.com/posts/341-hexing-the-technical-interview">hexing</a> / <a href="https://aphyr.com/posts/342-typing-the-technical-interview">typing</a> / <a href="https://aphyr.com/posts/353-rewriting-the-technical-interview">rewriting</a> / <a href="https://aphyr.com/posts/354-unifying-the-technical-interview">unifying</a> technical interview series is essential reading.</li> <li>Ivan's examples of robustness vs efficiency were <a href="https://en.wikipedia.org/wiki/RAID">RAID</a>, the <a href="https://en.wikipedia.org/wiki/CAP_theorem">CAP theorem</a>, <a href="https://automerge.org/">Automerge</a>, <a href="https://www.youtube.com/watch?v=4fFDFbi3toc">the engineering of FoundationDB</a>, and <a href="https://en.wikipedia.org/wiki/Byzantine_fault">Byzantine fault tolerance</a>— all of which stake out interesting territory in the efficiency/robustness tradeoff spectrum, all of which are about distributed systems.</li> <li><a href="https://dl.acm.org/doi/10.1145/359576.359579">Can programming be liberated from the von Neumann style?</a>, a paper by <a href="https://en.wikipedia.org/wiki/John_Backus">John Backus</a>.</li> <li><a href="https://www.youtube.com/watch?v=HB5TrK7A4pI">We Don't Really Know How to Compute!</a>, a talk by <a href="https://en.wikipedia.org/wiki/Gerald_Jay_Sussman">Gerald Sussman</a>.</li> <li>The <a href="https://andrewwalpole.com/blog/an-introduction-to-robust-first-computation/">Robust-First Computing Creed</a> is rock solid.</li> <li>The Wikipedia article on <a href="https://en.wikipedia.org/wiki/Von_Neumann_architecture">von Neumann architecture</a> did not come through with the goods.</li> <li>Ivan works with <a href="https://alexwarth.github.io/">Alex Warth</a> now, and thus may fairly speak in half-truths like "I've been working with constraints recently…"</li> <li>The <a href="https://www.youtube.com/watch?v=helScS3coAE">Demon Hoard Sort</a></li> <li><a href="https://en.wikipedia.org/wiki/Bogosort">Bogosort</a> is never coming to <a href="https://github.com/TodePond/DreamBerd">Dreamberd</a></li> <li><a href="https://en.wikipedia.org/wiki/The_Witness_(2016_video_game)">The Witness</a> was made by <a href="https://en.wikipedia.org/wiki/Jonathan_Blow">Jonathan Blow</a>, who has <a href="https://en.wikipedia.org/wiki/Aphantasia">Aphantasia</a>, but he also made a game called <a href="https://en.wikipedia.org/wiki/Braid_(video_game)">Braid</a>, and Braid is good.</li> <li><a href="https://en.wikipedia.org/wiki/Compression_artifact#Artistic_use">Datamosh</a> is a creative misuse of the lack of robustness that comes from storing diffs instead of full state snapshots. Here's a <a href="https://eyecannndy.com/technique/glitch#datamosh">lovely gallery</a> of examples.</li> <li><a href="https://xkcd.com/676/">Abstraction</a> by xkcd</li> <li><a href="https://berthub.eu/articles/posts/reverse-engineering-source-code-of-the-biontech-pfizer-vaccine/">Reverse Engineering the source code of the BioNTech/Pfizer SARS-CoV-2 Vaccine</a></li> <li>Can't let Lu get through the above without derailing onto <a href="https://en.wikipedia.org/wiki/Fiverr">Fiverr</a>, <a href="https://en.wikipedia.org/wiki/Phencyclidine">PCP</a>, <a href="https://en.wikipedia.org/wiki/Fight_Club">Fight Club</a>, and the <a href="https://en.wikipedia.org/wiki/Dust_Brothers">Dust Brothers</a>.</li> <li><a href="https://en.wikipedia.org/wiki/Randy_Newman">Randy Newman</a> was nearly quoted in Ackley's <a href="https://cdn.aaai.org/ojs/9802/9802-13-13330-1-2-20201228.pdf">Indefinite Scalability for Living Computation</a> — god help you if you read our show notes and don't listen to the episode.</li> <li><a href="https://www.goodreads.com/quotes/21810-it-is-difficult-to-get-a-man-to-understand-something">"It is difficult"</a>, says <a href="https://en.wikipedia.org/wiki/Upton_Sinclair">Upton Sinclair</a> when asked about Jimmy Miller being Jimmy Miller, and how we all ought to approach our own sense of Jimmy Miller.</li> </ul> <p>Music featured in this episode:</p> <ul> <li><a href="https://ivanish.ca/hawker-news">Hawker News</a> by <a href="https://news.ycombinator.com/user?id=spiralganglion">user: spiralganglion</a></li> <li><a href="https://www.youtube.com/watch?v=dAtX4PjUXrM">Corporate World</a> by the <a href="https://en.wikipedia.org/wiki/Dust_Brothers">Dust Brothers</a></li> </ul> <p>No more jokes! Find us at these normal places:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="https://ivanish.ca/">Website</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Lu: <a href="https://mas.to/@TodePond">Mastodon</a> • <a href="https://www.todepond.com/">Website</a></li> <li>Dave: <a href="https://hachyderm.io/@livcomp">Mastodon</a> • <a href="https://www.cs.unm.edu/~ackley/">Website</a></li> </ul> <p>Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, share your ideas in our <a href="https://futureofcoding.org/community">Slack</a>, and support the show on <a href="http://patreon.com/futureofcoding">Patreon</a>. Yes, do all three please.</p> <p>http://futureofcoding.org/episodes/70</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><a href="https://www.cs.unm.edu/~ackley/">Dave Ackley</a>'s paper <a href="https://www.cs.unm.edu/~ackley/be-201301131528.pdf">Beyond Efficiency</a> is three pages long. With just these three pages, he mounts a compelling argument against the conventional way we engineer software. Instead of inflexibly insisting upon correctness, maybe allow a lil slop? Instead of chasing peak performance with cache and clever tricks, maybe measure many times before you cut. So in this episode, we're putting every CEO in the guillotine… (oh, that stands for "correctness and efficiency only", don't put us on a list)… and considering when, where, and how to do the robust thing.</p> <p><strong>Links</strong></p> <p>$ <a href="https://www.patreon.com/futureofcoding">patreon.com/futureofcoding</a> — The most recent bonus episode is a discussion with Stefan Lesser about new "laws of physics" we can invent inside the computer.</p> <p><em>Don't destroy the earth, then make sure your thing can't be destroyed, then don't destroy your data, and finally, do your damn job, AAAAAAAAAAAAAAAAAAAAAAAAAAA.</em></p> <ul> <li><a href="https://johnwhiles.com/posts/programming-as-theory">A Software Epiphany</a>, and the accompanying <a href="https://news.ycombinator.com/item?id=38324486">HN discussion</a> — giga viral, so sick</li> <li><a href="https://www.partykit.io/">PartyKit</a>? Nice!</li> <li>What started as a <a href="https://mastodon.social/@TodePond@mas.to/111402970410628418">simple todo list</a> turned into an <a href="https://twitter.com/tldraw/status/1724892287304646868">ocean of tech boy milk</a> and, ultimately, the <a href="https://news.ycombinator.com/item?id=38309611">AI apocalypse</a>.</li> <li><a href="https://jepsen.io/">Jepsen</a> is a rough, rugged, deeply thoughtful and fantastically cool approach to distributed systems testing, by <a href="https://aphyr.com/">Kyle Kingsbury</a>. Also, we didn't talk about it, but his <a href="https://aphyr.com/posts/340-reversing-the-technical-interview">reversing</a> / <a href="https://aphyr.com/posts/341-hexing-the-technical-interview">hexing</a> / <a href="https://aphyr.com/posts/342-typing-the-technical-interview">typing</a> / <a href="https://aphyr.com/posts/353-rewriting-the-technical-interview">rewriting</a> / <a href="https://aphyr.com/posts/354-unifying-the-technical-interview">unifying</a> technical interview series is essential reading.</li> <li>Ivan's examples of robustness vs efficiency were <a href="https://en.wikipedia.org/wiki/RAID">RAID</a>, the <a href="https://en.wikipedia.org/wiki/CAP_theorem">CAP theorem</a>, <a href="https://automerge.org/">Automerge</a>, <a href="https://www.youtube.com/watch?v=4fFDFbi3toc">the engineering of FoundationDB</a>, and <a href="https://en.wikipedia.org/wiki/Byzantine_fault">Byzantine fault tolerance</a>— all of which stake out interesting territory in the efficiency/robustness tradeoff spectrum, all of which are about distributed systems.</li> <li><a href="https://dl.acm.org/doi/10.1145/359576.359579">Can programming be liberated from the von Neumann style?</a>, a paper by <a href="https://en.wikipedia.org/wiki/John_Backus">John Backus</a>.</li> <li><a href="https://www.youtube.com/watch?v=HB5TrK7A4pI">We Don't Really Know How to Compute!</a>, a talk by <a href="https://en.wikipedia.org/wiki/Gerald_Jay_Sussman">Gerald Sussman</a>.</li> <li>The <a href="https://andrewwalpole.com/blog/an-introduction-to-robust-first-computation/">Robust-First Computing Creed</a> is rock solid.</li> <li>The Wikipedia article on <a href="https://en.wikipedia.org/wiki/Von_Neumann_architecture">von Neumann architecture</a> did not come through with the goods.</li> <li>Ivan works with <a href="https://alexwarth.github.io/">Alex Warth</a> now, and thus may fairly speak in half-truths like "I've been working with constraints recently…"</li> <li>The <a href="https://www.youtube.com/watch?v=helScS3coAE">Demon Hoard Sort</a></li> <li><a href="https://en.wikipedia.org/wiki/Bogosort">Bogosort</a> is never coming to <a href="https://github.com/TodePond/DreamBerd">Dreamberd</a></li> <li><a href="https://en.wikipedia.org/wiki/The_Witness_(2016_video_game)">The Witness</a> was made by <a href="https://en.wikipedia.org/wiki/Jonathan_Blow">Jonathan Blow</a>, who has <a href="https://en.wikipedia.org/wiki/Aphantasia">Aphantasia</a>, but he also made a game called <a href="https://en.wikipedia.org/wiki/Braid_(video_game)">Braid</a>, and Braid is good.</li> <li><a href="https://en.wikipedia.org/wiki/Compression_artifact#Artistic_use">Datamosh</a> is a creative misuse of the lack of robustness that comes from storing diffs instead of full state snapshots. Here's a <a href="https://eyecannndy.com/technique/glitch#datamosh">lovely gallery</a> of examples.</li> <li><a href="https://xkcd.com/676/">Abstraction</a> by xkcd</li> <li><a href="https://berthub.eu/articles/posts/reverse-engineering-source-code-of-the-biontech-pfizer-vaccine/">Reverse Engineering the source code of the BioNTech/Pfizer SARS-CoV-2 Vaccine</a></li> <li>Can't let Lu get through the above without derailing onto <a href="https://en.wikipedia.org/wiki/Fiverr">Fiverr</a>, <a href="https://en.wikipedia.org/wiki/Phencyclidine">PCP</a>, <a href="https://en.wikipedia.org/wiki/Fight_Club">Fight Club</a>, and the <a href="https://en.wikipedia.org/wiki/Dust_Brothers">Dust Brothers</a>.</li> <li><a href="https://en.wikipedia.org/wiki/Randy_Newman">Randy Newman</a> was nearly quoted in Ackley's <a href="https://cdn.aaai.org/ojs/9802/9802-13-13330-1-2-20201228.pdf">Indefinite Scalability for Living Computation</a> — god help you if you read our show notes and don't listen to the episode.</li> <li><a href="https://www.goodreads.com/quotes/21810-it-is-difficult-to-get-a-man-to-understand-something">"It is difficult"</a>, says <a href="https://en.wikipedia.org/wiki/Upton_Sinclair">Upton Sinclair</a> when asked about Jimmy Miller being Jimmy Miller, and how we all ought to approach our own sense of Jimmy Miller.</li> </ul> <p>Music featured in this episode:</p> <ul> <li><a href="https://ivanish.ca/hawker-news">Hawker News</a> by <a href="https://news.ycombinator.com/user?id=spiralganglion">user: spiralganglion</a></li> <li><a href="https://www.youtube.com/watch?v=dAtX4PjUXrM">Corporate World</a> by the <a href="https://en.wikipedia.org/wiki/Dust_Brothers">Dust Brothers</a></li> </ul> <p>No more jokes! Find us at these normal places:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="https://ivanish.ca/">Website</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://jimmyhmiller.github.io/">Website</a></li> <li>Lu: <a href="https://mas.to/@TodePond">Mastodon</a> • <a href="https://www.todepond.com/">Website</a></li> <li>Dave: <a href="https://hachyderm.io/@livcomp">Mastodon</a> • <a href="https://www.cs.unm.edu/~ackley/">Website</a></li> </ul> <p>Send us <a href="mailto:admin@futureofcoding.org?subject=Email%20from%20a%20listener">email</a>, share your ideas in our <a href="https://futureofcoding.org/community">Slack</a>, and support the show on <a href="http://patreon.com/futureofcoding">Patreon</a>. Yes, do all three please.</p> <p>http://futureofcoding.org/episodes/70</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/260aea71-7606-40b2-b12c-b129002cfdef/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/beyond-efficiency-by-dave-ackley/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">260aea71-7606-40b2-b12c-b129002cfdef</guid>
      <omny:clipId>260aea71-7606-40b2-b12c-b129002cfdef</omny:clipId>
      <pubDate>Mon, 04 Mar 2024 02:53:57 +0000</pubDate>
      <itunes:duration>6247</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/260aea71-7606-40b2-b12c-b129002cfdef/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="99980028" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/beyond-efficiency-by-dave-ackley</link>
    </item>
    <item>
      <title>Myths &amp; Mythconceptions by Mary Shaw</title>
      <itunes:title>Myths &amp; Mythconceptions by Mary Shaw</itunes:title>
      <description><![CDATA[<p>In the spirit of clearly communicating what you're signing up for, this podcast episode is nearly three hours long, and among other things it contains a discussion of a paper by author Mary Shaw titled <a href="https://dl.acm.org/doi/pdf/10.1145/3480947">Myths &amp; Mythconceptions</a> which takes as an organizing principle a collection of myths that are widely believed by programmers, largely unacknowledged, which shape our views on the nature of programming <em>as an activity</em> and the needs of programmers <em>as people</em> and the sort of work that we do <em>as a sort of work</em>, and where by acknowledging these myths the three of us (Mary Shaw primarily, and by extension Jimmy and I, those three people, that's it, no other people appear on this podcast) are able to more vividly grip the image of programming with our mind's eye (or <a href="https://aphantasia.com/">somesuch</a>) and conceive of a different formulation for programming, and in addition to these myths this paper also incudes a number of excellent lists that I take great pleasure in reading, beyond which I should also note that the paper does a job of explaining itself and that hopefully you'll find I've done a similar job, that's the spirit, please enjoy.</p> <p>Links</p> <p>$ <a href="https://www.patreon.com/futureofcoding">patreon.com/futureofcoding</a> — I've recently changed it so that there's only 1 instance of the INTERCAL tier available, so if you're interested in those perks you'd better hop on it quick before nobody else does!</p> <ul> <li>There's also a <a href="https://www.pldi21.org/prerecorded_hopl.K1.html">video</a>, though I haven't watched it.</li> <li><a href="https://en.wikipedia.org/wiki/Claude_Shannon">Claude Shannon</a> would have something to say about revealing information.</li> <li><a href="https://en.wikipedia.org/wiki/Top_10_Hits_of_the_End_of_the_World">Top 10 Hits of the End of the World</a> is an album by Prince Rama. Listen to it as loudly as you can on <a href="https://princerama.bandcamp.com/album/top-ten-hits-of-the-end-of-the-world">Bandcamp</a>, <a href="https://open.spotify.com/album/2pbvIz40L97L87KGFnFnme?si=zbzT8JHKTCGJkObmh4qN1g">Spotify</a>, or <a href="https://music.apple.com/ca/album/top-ten-hits-of-the-end-of-the-world/1583505277">Apple Music</a>.</li> <li><a href="https://www.val.town/">Val Town</a> is the new startup by Future of Coding community founder <a href="https://stevekrouse.com/">Steve Krouse</a></li> <li>Ivan recently took a job at <a href="https://www.inkandswitch.com/">Ink &amp; Switch</a> on the "Ink" research track.</li> <li><a href="https://daily.jstor.org/how-computer-science-became-a-boys-club/">Programmer Bums</a>, or, rather, <a href="https://www.jstor.org/stable/10.1086/682955?mag=how-computer-science-became-a-boys-club">Computer Bums</a></li> <li><a href="https://www.youtube.com/watch?v=GceNsojnMf0">Limmy's Wa</a></li> <li><a href="https://retool.com/">Retool</a></li> <li><a href="https://en.wikipedia.org/wiki/MythBusters">MythBusters</a></li> <li><a href="https://en.wikipedia.org/wiki/The_Flop_House">The Flop House</a>'s <a href="https://flophousepodcast.fandom.com/wiki/Final_Judgments">Final Judgements: Good-Bad, Bad-Bad, Kinda-Like</a></li> <li><a href="https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type">CRDT</a></li> <li><a href="https://en.wikipedia.org/wiki/Data_(Star_Trek)">Data</a></li> <li><a href="https://andrewwalpole.com/blog/an-introduction-to-robust-first-computation/">Robust-First Computing</a> is an approach championed by the hero <a href="https://hachyderm.io/@livcomp">Dave Ackley</a>, and I have a well-informed hunch that you'll be hearing a lot more about it in future episodes.</li> <li><a href="https://www.youtube.com/watch?v=jreRFxN6wuM">The T2 Tile Project</a> is another Ackley joint that, perhaps, works as a wild example of what Mary Shaw means when she talks about an "execution ecosystem".</li> <li><a href="https://xxiivv.com/">Devine</a>'s talk at Strange Loop: <a href="https://www.youtube.com/watch?v=T3u7bGgVspM">An approach to computing and sustainability inspired from permaculture</a></li> <li><a href="https://en.wikipedia.org/wiki/MUMPS">MUMPS</a> (the medical thing, not to be confused with <a href="https://en.wikipedia.org/wiki/Mumps">mumps</a> the medical thing) is used by <a href="https://en.wikipedia.org/wiki/Epic_Systems">Epic</a> (the software company, not to be confused with <a href="https://en.wikipedia.org/wiki/Epic_Games">Epic</a> the software company).</li> <li>The <a href="https://www.glasscannonnetwork.com/">Glass Cannon</a> podcast network.</li> <li>Lu's SPLASH talk <a href="https://www.youtube.com/watch?v=cBYudbaqHAk&amp;t=6704s">Cellpond: Spatial Programming without Escape</a></li> <li>The <a href="https://en.wikipedia.org/wiki/Turing_tarpit">Turing tarpit</a></li> <li><a href="https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.125">Functional Programming with Bananas, Lenses, Envelopes and Barbed Wire</a> by Erik Meijer, Maarten Fokkinga, Ross Paterson.</li> <li><a href="https://en.wikipedia.org/wiki/Aphex_Twin">Richard D. James</a> is the same person as <a href="https://en.wikipedia.org/wiki/Richard_P._Gabriel">Richard P. (Peter) Gabriel</a>, right?</li> <li>Similarly, see <a href="https://en.wikipedia.org/wiki/Neil_Armstrong">Neil Armstrong</a>'s work on <a href="https://en.wikipedia.org/wiki/Erlang_(unit)">Erlang</a> (which is popular in telephony, right?).</li> <li><a href="https://en.wikipedia.org/wiki/The_Witness_(2016_video_game)">The Witness</a> is not going to appear in our show notes.</li> <li><a href="https://jackrusher.com/">Jack Rusher</a>. <a href="https://berlin.social/@jack">Jack Rusher</a>? <a href="https://futureofcoding.org/episodes/041">Jack Rusher</a>!</li> <li><a href="https://www.youtube.com/watch?v=9qVT0URkkGE">TrainJam</a></li> <li><a href="https://www.destroyallsoftware.com/">Gary Bernhardt</a>'s talk <a href="https://www.destroyallsoftware.com/talks/ideology">Ideology</a></li> </ul> <p>Nobody remarked on these silly links last time, so this time I'm drawing more attention to them:</p> <ul> <li>Tode: <a href="https://mas.to/@todepond">Neopets</a> • <a href="https://www.patreon.com/todepond">MySpace</a></li> <li>Berd: <a href="https://mas.to/@todepond">Angelfire</a> • <a href="https://www.patreon.com/todepond">Orkut</a></li> <li>Bot: <a href="https://mas.to/@todepond">Geocities</a> • <a href="https://www.patreon.com/todepond">Friendster</a></li> </ul> <p><a href="https://futureofcoding.org/episodes/069">https://futureofcoding.org/episodes/069</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>In the spirit of clearly communicating what you're signing up for, this podcast episode is nearly three hours long, and among other things it contains a discussion of a paper by author Mary Shaw titled <a href="https://dl.acm.org/doi/pdf/10.1145/3480947">Myths &amp; Mythconceptions</a> which takes as an organizing principle a collection of myths that are widely believed by programmers, largely unacknowledged, which shape our views on the nature of programming <em>as an activity</em> and the needs of programmers <em>as people</em> and the sort of work that we do <em>as a sort of work</em>, and where by acknowledging these myths the three of us (Mary Shaw primarily, and by extension Jimmy and I, those three people, that's it, no other people appear on this podcast) are able to more vividly grip the image of programming with our mind's eye (or <a href="https://aphantasia.com/">somesuch</a>) and conceive of a different formulation for programming, and in addition to these myths this paper also incudes a number of excellent lists that I take great pleasure in reading, beyond which I should also note that the paper does a job of explaining itself and that hopefully you'll find I've done a similar job, that's the spirit, please enjoy.</p> <p>Links</p> <p>$ <a href="https://www.patreon.com/futureofcoding">patreon.com/futureofcoding</a> — I've recently changed it so that there's only 1 instance of the INTERCAL tier available, so if you're interested in those perks you'd better hop on it quick before nobody else does!</p> <ul> <li>There's also a <a href="https://www.pldi21.org/prerecorded_hopl.K1.html">video</a>, though I haven't watched it.</li> <li><a href="https://en.wikipedia.org/wiki/Claude_Shannon">Claude Shannon</a> would have something to say about revealing information.</li> <li><a href="https://en.wikipedia.org/wiki/Top_10_Hits_of_the_End_of_the_World">Top 10 Hits of the End of the World</a> is an album by Prince Rama. Listen to it as loudly as you can on <a href="https://princerama.bandcamp.com/album/top-ten-hits-of-the-end-of-the-world">Bandcamp</a>, <a href="https://open.spotify.com/album/2pbvIz40L97L87KGFnFnme?si=zbzT8JHKTCGJkObmh4qN1g">Spotify</a>, or <a href="https://music.apple.com/ca/album/top-ten-hits-of-the-end-of-the-world/1583505277">Apple Music</a>.</li> <li><a href="https://www.val.town/">Val Town</a> is the new startup by Future of Coding community founder <a href="https://stevekrouse.com/">Steve Krouse</a></li> <li>Ivan recently took a job at <a href="https://www.inkandswitch.com/">Ink &amp; Switch</a> on the "Ink" research track.</li> <li><a href="https://daily.jstor.org/how-computer-science-became-a-boys-club/">Programmer Bums</a>, or, rather, <a href="https://www.jstor.org/stable/10.1086/682955?mag=how-computer-science-became-a-boys-club">Computer Bums</a></li> <li><a href="https://www.youtube.com/watch?v=GceNsojnMf0">Limmy's Wa</a></li> <li><a href="https://retool.com/">Retool</a></li> <li><a href="https://en.wikipedia.org/wiki/MythBusters">MythBusters</a></li> <li><a href="https://en.wikipedia.org/wiki/The_Flop_House">The Flop House</a>'s <a href="https://flophousepodcast.fandom.com/wiki/Final_Judgments">Final Judgements: Good-Bad, Bad-Bad, Kinda-Like</a></li> <li><a href="https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type">CRDT</a></li> <li><a href="https://en.wikipedia.org/wiki/Data_(Star_Trek)">Data</a></li> <li><a href="https://andrewwalpole.com/blog/an-introduction-to-robust-first-computation/">Robust-First Computing</a> is an approach championed by the hero <a href="https://hachyderm.io/@livcomp">Dave Ackley</a>, and I have a well-informed hunch that you'll be hearing a lot more about it in future episodes.</li> <li><a href="https://www.youtube.com/watch?v=jreRFxN6wuM">The T2 Tile Project</a> is another Ackley joint that, perhaps, works as a wild example of what Mary Shaw means when she talks about an "execution ecosystem".</li> <li><a href="https://xxiivv.com/">Devine</a>'s talk at Strange Loop: <a href="https://www.youtube.com/watch?v=T3u7bGgVspM">An approach to computing and sustainability inspired from permaculture</a></li> <li><a href="https://en.wikipedia.org/wiki/MUMPS">MUMPS</a> (the medical thing, not to be confused with <a href="https://en.wikipedia.org/wiki/Mumps">mumps</a> the medical thing) is used by <a href="https://en.wikipedia.org/wiki/Epic_Systems">Epic</a> (the software company, not to be confused with <a href="https://en.wikipedia.org/wiki/Epic_Games">Epic</a> the software company).</li> <li>The <a href="https://www.glasscannonnetwork.com/">Glass Cannon</a> podcast network.</li> <li>Lu's SPLASH talk <a href="https://www.youtube.com/watch?v=cBYudbaqHAk&amp;t=6704s">Cellpond: Spatial Programming without Escape</a></li> <li>The <a href="https://en.wikipedia.org/wiki/Turing_tarpit">Turing tarpit</a></li> <li><a href="https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.41.125">Functional Programming with Bananas, Lenses, Envelopes and Barbed Wire</a> by Erik Meijer, Maarten Fokkinga, Ross Paterson.</li> <li><a href="https://en.wikipedia.org/wiki/Aphex_Twin">Richard D. James</a> is the same person as <a href="https://en.wikipedia.org/wiki/Richard_P._Gabriel">Richard P. (Peter) Gabriel</a>, right?</li> <li>Similarly, see <a href="https://en.wikipedia.org/wiki/Neil_Armstrong">Neil Armstrong</a>'s work on <a href="https://en.wikipedia.org/wiki/Erlang_(unit)">Erlang</a> (which is popular in telephony, right?).</li> <li><a href="https://en.wikipedia.org/wiki/The_Witness_(2016_video_game)">The Witness</a> is not going to appear in our show notes.</li> <li><a href="https://jackrusher.com/">Jack Rusher</a>. <a href="https://berlin.social/@jack">Jack Rusher</a>? <a href="https://futureofcoding.org/episodes/041">Jack Rusher</a>!</li> <li><a href="https://www.youtube.com/watch?v=9qVT0URkkGE">TrainJam</a></li> <li><a href="https://www.destroyallsoftware.com/">Gary Bernhardt</a>'s talk <a href="https://www.destroyallsoftware.com/talks/ideology">Ideology</a></li> </ul> <p>Nobody remarked on these silly links last time, so this time I'm drawing more attention to them:</p> <ul> <li>Tode: <a href="https://mas.to/@todepond">Neopets</a> • <a href="https://www.patreon.com/todepond">MySpace</a></li> <li>Berd: <a href="https://mas.to/@todepond">Angelfire</a> • <a href="https://www.patreon.com/todepond">Orkut</a></li> <li>Bot: <a href="https://mas.to/@todepond">Geocities</a> • <a href="https://www.patreon.com/todepond">Friendster</a></li> </ul> <p><a href="https://futureofcoding.org/episodes/069">https://futureofcoding.org/episodes/069</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/87225902-a37f-4155-bf09-b0e60189f0a2/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/myths-and-mythconceptions-by-mary-shaw/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">87225902-a37f-4155-bf09-b0e60189f0a2</guid>
      <omny:clipId>87225902-a37f-4155-bf09-b0e60189f0a2</omny:clipId>
      <pubDate>Fri, 29 Dec 2023 00:10:58 +0000</pubDate>
      <itunes:duration>10728</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/87225902-a37f-4155-bf09-b0e60189f0a2/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="171661286" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/myths-and-mythconceptions-by-mary-shaw</link>
    </item>
    <item>
      <title>Propositions as Types by Philip Wadler</title>
      <itunes:title>Propositions as Types by Philip Wadler</itunes:title>
      <description><![CDATA[<p>The subject of this episode's paper — <a href="https://homepages.inf.ed.ac.uk/wadler/papers/propositions-as-types/propositions-as-types.pdf">Propositions as Types</a> by <a href="https://en.wikipedia.org/wiki/Philip_Wadler">Philip Wadler</a> — is one of those grand ideas that makes you want to go stargazing. To stare out into space and just disassociate from your body and become one with the heavens. <em>Everything — life, space, time, existence — all of it is a joke!</em> A cosmic ribbing delivered by the laws of the universe or some higher power or, perhaps, higher order. Humanity waited two thousand years, from the time of the ancient Greeks through until the 1930s, for a means to answer questions of calculability, when three suddenly arrived all at once:</p> <ul> <li><strong>General recursive functions</strong> by Gödel in 1934, with functions of sets of natural numbers.</li> <li><strong>Lambda calculus</strong> by Alonzo Church in 1936, with anonymous single-variable functions.</li> <li><strong>Turing machines</strong> by Alan Turing in 1937, with a process for evaluating symbols on a tape.</li> </ul> <p>Then it was discovered that these three models of computation were, in fact, perfectly equivalent. That any statement made in one could be made in the others. A striking coincidence, sure, but not <a href="https://en.wikipedia.org/wiki/Multiple_discovery">without precedent</a>. But <em>then</em> it was quietly determined (in 1934, again in 1969, and finally published in 1980) that computation itself is in a direct correspondence with logic. That every proposition in a given logic corresponds with a type in a given programming language, every proof corresponds with a program, and the simplification of the proof corresponds with the evaluation of the program.</p> <p>The implications boggle the mind. <em>How could this be so?</em> Well, how could it be any other way? Why did it take so long to discover? What other discoveries like this are perched on the precipice of revelation?</p> <p>Philip Wadler is here to walk us through this bit of history, suggest answers to some of these questions, and point us in a direction to search for more.</p> <p>And <em>we</em> are here, dear listener, to level with you that a lot of this stuff is miserably hard to approach, presented with the symbols and language of formal logic that is so often inscrutable to outsiders. By walking you through Wadler's paper (and the much more approachable <a href="https://www.youtube.com/watch?v=IOiZatlZtGU">Strange Loop talk</a>), and tying it in with the cultural context of modern functional programming, we hope you'll gain an appreciation for this remarkable, divine <em><strong>pun</strong></em> that sits beneath all of computation.</p> <p>Links</p> <p>=&gt; <a href="https://www.patreon.com/futureofcoding">patreon.com/futureofcoding</a> — but only if you back the Visual Programming tier!! I'm warning you!</p> <ul> <li>Wadler's Strange Loop talk <a href="https://www.youtube.com/watch?v=IOiZatlZtGU">Propositions as Types</a></li> <li><a href="https://www.cocoongame.com/">Cocoon</a> is good. It's not, like, <a href="https://playdead.com/games/inside/">Inside</a> or <a href="https://playdead.com/games/limbo/">Limbo</a> good, but it's good. Actually, just play Inside. Do that ASAP.</li> <li><a href="https://www.hollowknight.com/">Hollow Knight</a>, also extremely good. Can't wait for <a href="https://hollowknightsilksong.com/">Silksong</a>. But seriously, if you're reading this and have haven't played Inside, just skip this episode of the podcast and go play Inside. It's like 3 hours long and it's, like, transformatively great.</li> <li><a href="https://www.convivial.tools/">Chris Martens</a> has done some cool work (eg) bringing together linear logic and games.</li> <li>Meh: <a href="https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach">Gödel, Escher, Bach</a> by Douglas Hofstadter</li> <li>Yeh: <a href="https://en.wikipedia.org/wiki/Infinity_and_the_Mind">Infinity and the Mind</a> by Rudy Rucker</li> <li>Heh: <a href="https://en.wikipedia.org/wiki/To_Mock_a_Mockingbird">To Mock a MockingBird</a> by Raymond Smullyan.</li> <li>The <a href="https://en.wikipedia.org/wiki/Automata_theory">hierarchy of automata</a></li> <li><a href="https://www.goodreads.com/book/show/48765399-games">Games: Agency as Art</a></li> <li><a href="http://incredible.pm/">The Incredible Proof Machine</a> is what some would call a "visual programming language" because proofs are programs. But it's actually really cool and fun to play with. Approach it like a puzzle game, and give it 10 minutes or so to get its hooks into you.</li> <li>"Stop Doing Logic" is part of the <a href="https://knowyourmeme.com/memes/stop-doing-math">Stop Doing Math</a> meme. Unrelated: Ivan's song <a href="https://ivanish.ca/dont-do-math/">Don't Do Math</a>.</li> <li><a href="https://www.youtube.com/watch?v=utyBNDj7s2w">Bidirectional Type Checking</a>, a talk by <a href="https://davidchristiansen.dk/">David Christiansen</a></li> <li><a href="https://stevelosh.com/blog/2013/03/list-out-of-lambda/">List Out of Lambda</a>, a blog post by <a href="https://stevelosh.com/">Steve Losh</a></li> </ul> <p>Nobody noticed that these links were silly last time, so this time I'm drawing more attention to it:</p> <ul> <li>Ivan: <a href="https://mas.to/@todepond">Mastodon</a> • <a href="https://www.patreon.com/todepond">Email</a></li> <li>Jimmy: <a href="https://mas.to/@todepond">Mastodon</a> • <a href="https://www.patreon.com/todepond">Twitter</a></li> </ul> <p>This link is legit:</p> <ul> <li>DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a></li> </ul> <p><a href="https://futureofcoding.org/episodes/068">https://futureofcoding.org/episodes/068</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>The subject of this episode's paper — <a href="https://homepages.inf.ed.ac.uk/wadler/papers/propositions-as-types/propositions-as-types.pdf">Propositions as Types</a> by <a href="https://en.wikipedia.org/wiki/Philip_Wadler">Philip Wadler</a> — is one of those grand ideas that makes you want to go stargazing. To stare out into space and just disassociate from your body and become one with the heavens. <em>Everything — life, space, time, existence — all of it is a joke!</em> A cosmic ribbing delivered by the laws of the universe or some higher power or, perhaps, higher order. Humanity waited two thousand years, from the time of the ancient Greeks through until the 1930s, for a means to answer questions of calculability, when three suddenly arrived all at once:</p> <ul> <li><strong>General recursive functions</strong> by Gödel in 1934, with functions of sets of natural numbers.</li> <li><strong>Lambda calculus</strong> by Alonzo Church in 1936, with anonymous single-variable functions.</li> <li><strong>Turing machines</strong> by Alan Turing in 1937, with a process for evaluating symbols on a tape.</li> </ul> <p>Then it was discovered that these three models of computation were, in fact, perfectly equivalent. That any statement made in one could be made in the others. A striking coincidence, sure, but not <a href="https://en.wikipedia.org/wiki/Multiple_discovery">without precedent</a>. But <em>then</em> it was quietly determined (in 1934, again in 1969, and finally published in 1980) that computation itself is in a direct correspondence with logic. That every proposition in a given logic corresponds with a type in a given programming language, every proof corresponds with a program, and the simplification of the proof corresponds with the evaluation of the program.</p> <p>The implications boggle the mind. <em>How could this be so?</em> Well, how could it be any other way? Why did it take so long to discover? What other discoveries like this are perched on the precipice of revelation?</p> <p>Philip Wadler is here to walk us through this bit of history, suggest answers to some of these questions, and point us in a direction to search for more.</p> <p>And <em>we</em> are here, dear listener, to level with you that a lot of this stuff is miserably hard to approach, presented with the symbols and language of formal logic that is so often inscrutable to outsiders. By walking you through Wadler's paper (and the much more approachable <a href="https://www.youtube.com/watch?v=IOiZatlZtGU">Strange Loop talk</a>), and tying it in with the cultural context of modern functional programming, we hope you'll gain an appreciation for this remarkable, divine <em><strong>pun</strong></em> that sits beneath all of computation.</p> <p>Links</p> <p>=&gt; <a href="https://www.patreon.com/futureofcoding">patreon.com/futureofcoding</a> — but only if you back the Visual Programming tier!! I'm warning you!</p> <ul> <li>Wadler's Strange Loop talk <a href="https://www.youtube.com/watch?v=IOiZatlZtGU">Propositions as Types</a></li> <li><a href="https://www.cocoongame.com/">Cocoon</a> is good. It's not, like, <a href="https://playdead.com/games/inside/">Inside</a> or <a href="https://playdead.com/games/limbo/">Limbo</a> good, but it's good. Actually, just play Inside. Do that ASAP.</li> <li><a href="https://www.hollowknight.com/">Hollow Knight</a>, also extremely good. Can't wait for <a href="https://hollowknightsilksong.com/">Silksong</a>. But seriously, if you're reading this and have haven't played Inside, just skip this episode of the podcast and go play Inside. It's like 3 hours long and it's, like, transformatively great.</li> <li><a href="https://www.convivial.tools/">Chris Martens</a> has done some cool work (eg) bringing together linear logic and games.</li> <li>Meh: <a href="https://en.wikipedia.org/wiki/G%C3%B6del,_Escher,_Bach">Gödel, Escher, Bach</a> by Douglas Hofstadter</li> <li>Yeh: <a href="https://en.wikipedia.org/wiki/Infinity_and_the_Mind">Infinity and the Mind</a> by Rudy Rucker</li> <li>Heh: <a href="https://en.wikipedia.org/wiki/To_Mock_a_Mockingbird">To Mock a MockingBird</a> by Raymond Smullyan.</li> <li>The <a href="https://en.wikipedia.org/wiki/Automata_theory">hierarchy of automata</a></li> <li><a href="https://www.goodreads.com/book/show/48765399-games">Games: Agency as Art</a></li> <li><a href="http://incredible.pm/">The Incredible Proof Machine</a> is what some would call a "visual programming language" because proofs are programs. But it's actually really cool and fun to play with. Approach it like a puzzle game, and give it 10 minutes or so to get its hooks into you.</li> <li>"Stop Doing Logic" is part of the <a href="https://knowyourmeme.com/memes/stop-doing-math">Stop Doing Math</a> meme. Unrelated: Ivan's song <a href="https://ivanish.ca/dont-do-math/">Don't Do Math</a>.</li> <li><a href="https://www.youtube.com/watch?v=utyBNDj7s2w">Bidirectional Type Checking</a>, a talk by <a href="https://davidchristiansen.dk/">David Christiansen</a></li> <li><a href="https://stevelosh.com/blog/2013/03/list-out-of-lambda/">List Out of Lambda</a>, a blog post by <a href="https://stevelosh.com/">Steve Losh</a></li> </ul> <p>Nobody noticed that these links were silly last time, so this time I'm drawing more attention to it:</p> <ul> <li>Ivan: <a href="https://mas.to/@todepond">Mastodon</a> • <a href="https://www.patreon.com/todepond">Email</a></li> <li>Jimmy: <a href="https://mas.to/@todepond">Mastodon</a> • <a href="https://www.patreon.com/todepond">Twitter</a></li> </ul> <p>This link is legit:</p> <ul> <li>DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a></li> </ul> <p><a href="https://futureofcoding.org/episodes/068">https://futureofcoding.org/episodes/068</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/edef95ce-dcae-4a71-8309-b0bf003a932b/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/propositions-as-types-by-philip-wadler/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">edef95ce-dcae-4a71-8309-b0bf003a932b</guid>
      <omny:clipId>edef95ce-dcae-4a71-8309-b0bf003a932b</omny:clipId>
      <pubDate>Sun, 19 Nov 2023 03:56:31 +0000</pubDate>
      <itunes:duration>7475</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/edef95ce-dcae-4a71-8309-b0bf003a932b/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="119628295" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/propositions-as-types-by-philip-wadler</link>
    </item>
    <item>
      <title>Considered Harmful</title>
      <itunes:title>Considered Harmful</itunes:title>
      <description><![CDATA[<p><a href="https://dl.acm.org/doi/pdf/10.1145/362929.362947">Go To Statement Considered Harmful</a> is a solid classic entry in the <a href="https://en.wikipedia.org/wiki/Considered_harmful">X Considered Harmful</a> metafiction genre, authored by renowned computer scientist and idiosyncratic grump, <a href="https://en.wikipedia.org/wiki/Edsger_W._Dijkstra">Edsger Wybe Dijkstra</a>. Surprisingly (given the impact it's had) this is a minuscule speck of a paper, lasting only 1-ish pages, and it even digresses several times from the main point. Fear not! Jimmy and I spend the entirety of these two podcast hours thoroughly analyzing the paper, wringing every last drop of insight from it, speaking directly to how programming ought to be reimagined from the molten venture capital core on up. Yes indeed, this is another episode in the fine tradition of Future of Coding where we stay faithfully close to the text, we leave the second-order implications alone, and there's nothing more than that. Nothing portended, nothing changed.</p> <p>Links</p> <p>=&gt; <a href="https://www.patreon.com/futureofcoding">patreon.com/futureofcoding</a></p> <ul> <li><a href="https://ivanish.ca/hest-time-travel/">Hest</a>, which Jimmy is convinced that I refuse to call by name, or even talk about. He's clearly mistaken — and yet, I feel his philosophical force on my hand even now. Conundrum considered harmful.</li> <li><a href="https://en.wikipedia.org/wiki/Epimenides_paradox">"All Cretans are liars"</a> doesn't have quite the ring of "dipping their breasts into the ripper", and is considered harmful.</li> <li>Dijkstra's <a href="https://www.cs.utexas.edu/~EWD/transcriptions/EWD03xx/EWD340.html">The Humble Programmer</a> considered harmful.</li> <li>Hoare's <a href="http://worrydream.com/refs/Hoare%20-%20The%20Emperors%20Old%20Clothes.pdf">The Emperor's Old Clothes</a> considered harmful.</li> <li><a href="https://en.wikipedia.org/wiki/Fortran#Humor">Letter O Considered Harmful</a> considered harmful.</li> <li><a href="https://meyerweb.com/eric/comment/chech.html">“Considered Harmful” Essays Considered Harmful</a> considered harmful! Scolds!</li> <li><a href="https://en.wikipedia.org/wiki/James_while_John_had_had_had_had_had_had_had_had_had_had_had_a_better_effect_on_the_teacher">James while John had had had had had had had had had had had a better effect on the teacher</a> considered considered considered considered considered considered considered considered harmful.</li> <li>Proximity to <a href="https://en.wikipedia.org/wiki/Noam_Chomsky">Chomsky</a> considered harmful.</li> <li><a href="https://en.wikipedia.org/wiki/Interlisp">Interlisp</a>, an early lisp featuring the ] super paren, considered harmful.</li> <li>The opening segment of the <a href="https://verybadwizards.com/episode/episode-266-i-want-to-half-believe">"I Want to Half-Believe" episode of Very Bad Wizards</a> considered harmful.</li> <li><a href="https://store.steampowered.com/app/1985690/The_Looker/">The Witness</a> considered harmful to our show notes.</li> <li><a href="https://en.wikipedia.org/wiki/Delimited_continuation">Delimited Continuations</a> considered harmful.</li> <li><a href="https://www.eecg.toronto.edu/~jzhu/csc326/readings/iverson.pdf">Notation as a Tool of Thought</a> by "Kenneth E. Iverson considered harmful."</li> <li><a href="https://en.wikipedia.org/wiki/Zen_of_Python">The Zen of Python</a> considered a great honking idea.</li> <li><a href="https://en.wikipedia.org/wiki/Why%27s_(poignant)_Guide_to_Ruby">Chunky Bacon</a> considered harmful.</li> <li><a href="https://github.com/features/copilot">Copilot</a> considered harmful.</li> <li><a href="https://en.wikipedia.org/wiki/Charles_Babbage">Charles Babbage</a>'s <a href="https://en.wikipedia.org/wiki/Bridgewater_Treatises">Bridgewater Treatises</a> considered harmful.</li> <li>North &amp; Whitehead's <a href="https://en.wikipedia.org/wiki/Principia_Mathematica">Principia Mathematica</a> considered harmful.</li> <li><a href="https://www.youtube.com/watch?v=wE1NyYT31Tw">The Sailor's Chorus</a> from Wagner's The Flying Dutchman considered harmful.</li> <li><a href="https://pep8.org/">PEP 8</a> considered harmful.</li> <li><a href="https://www.youtube.com/watch?v=lKie-vgUGdI">There are dozens of us considered harmful.</a></li> <li><a href="https://tc39.es/">TC39</a> actually considered harmful.</li> <li><a href="https://wiki.haskell.org/Typeclassopedia#Bifunctor">Bifunctors</a> considered harmful.</li> <li><a href="https://www.chocolate.wiki/">Chocolate</a></li> <li><a href="https://www.radiolab.org/">Radiolab</a> considered one of the only good radio shows, because it's pushing hard against the norms of its medium.</li> <li><a href="https://en.wikipedia.org/wiki/Universal_basic_income">UBI</a> — consider it!</li> <li><a href="https://en.wikipedia.org/wiki/Fork_(chess)">Forking</a> The Queen considered harmful.</li> <li><a href="https://citeseerx.ist.psu.edu/document?doi=ca25ecf69726cde7e4e735fbc9a6805daa4ca9df">The Semantics of Graphical Languages</a>, the paper about a visual formalism for visual programs, considered harmful.</li> </ul> <p>Music featured in this episode:</p> <ul> <li>Lemon</li> <li>Wagner</li> <li>Lu, Devine, William, Alex and Alex, Justin, Marcel, Peter, Matt, Blaine, Kevin, Nicki, Mae, Kate, Steve, Mitja, Philippa, Max, and everyone else who secretly said it like a swearword.</li> </ul> <p>Get in touch, ask questions, don't ask questions:</p> <ul> <li>Ivan: <a href="https://mas.to/@todepond">Mastodon</a> • <a href="https://www.patreon.com/todepond">Email</a></li> <li>Jimmy: <a href="https://mas.to/@todepond">Mastodon</a> • <a href="https://www.patreon.com/todepond">Twitter</a></li> <li>DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a></li> <li>Support the show on <a href="http://patreon.com/futureofcoding">Patreon</a></li> </ul> <p><a href="https://futureofcoding.org/episodes/067">https://futureofcoding.org/episodes/067</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><a href="https://dl.acm.org/doi/pdf/10.1145/362929.362947">Go To Statement Considered Harmful</a> is a solid classic entry in the <a href="https://en.wikipedia.org/wiki/Considered_harmful">X Considered Harmful</a> metafiction genre, authored by renowned computer scientist and idiosyncratic grump, <a href="https://en.wikipedia.org/wiki/Edsger_W._Dijkstra">Edsger Wybe Dijkstra</a>. Surprisingly (given the impact it's had) this is a minuscule speck of a paper, lasting only 1-ish pages, and it even digresses several times from the main point. Fear not! Jimmy and I spend the entirety of these two podcast hours thoroughly analyzing the paper, wringing every last drop of insight from it, speaking directly to how programming ought to be reimagined from the molten venture capital core on up. Yes indeed, this is another episode in the fine tradition of Future of Coding where we stay faithfully close to the text, we leave the second-order implications alone, and there's nothing more than that. Nothing portended, nothing changed.</p> <p>Links</p> <p>=&gt; <a href="https://www.patreon.com/futureofcoding">patreon.com/futureofcoding</a></p> <ul> <li><a href="https://ivanish.ca/hest-time-travel/">Hest</a>, which Jimmy is convinced that I refuse to call by name, or even talk about. He's clearly mistaken — and yet, I feel his philosophical force on my hand even now. Conundrum considered harmful.</li> <li><a href="https://en.wikipedia.org/wiki/Epimenides_paradox">"All Cretans are liars"</a> doesn't have quite the ring of "dipping their breasts into the ripper", and is considered harmful.</li> <li>Dijkstra's <a href="https://www.cs.utexas.edu/~EWD/transcriptions/EWD03xx/EWD340.html">The Humble Programmer</a> considered harmful.</li> <li>Hoare's <a href="http://worrydream.com/refs/Hoare%20-%20The%20Emperors%20Old%20Clothes.pdf">The Emperor's Old Clothes</a> considered harmful.</li> <li><a href="https://en.wikipedia.org/wiki/Fortran#Humor">Letter O Considered Harmful</a> considered harmful.</li> <li><a href="https://meyerweb.com/eric/comment/chech.html">“Considered Harmful” Essays Considered Harmful</a> considered harmful! Scolds!</li> <li><a href="https://en.wikipedia.org/wiki/James_while_John_had_had_had_had_had_had_had_had_had_had_had_a_better_effect_on_the_teacher">James while John had had had had had had had had had had had a better effect on the teacher</a> considered considered considered considered considered considered considered considered harmful.</li> <li>Proximity to <a href="https://en.wikipedia.org/wiki/Noam_Chomsky">Chomsky</a> considered harmful.</li> <li><a href="https://en.wikipedia.org/wiki/Interlisp">Interlisp</a>, an early lisp featuring the ] super paren, considered harmful.</li> <li>The opening segment of the <a href="https://verybadwizards.com/episode/episode-266-i-want-to-half-believe">"I Want to Half-Believe" episode of Very Bad Wizards</a> considered harmful.</li> <li><a href="https://store.steampowered.com/app/1985690/The_Looker/">The Witness</a> considered harmful to our show notes.</li> <li><a href="https://en.wikipedia.org/wiki/Delimited_continuation">Delimited Continuations</a> considered harmful.</li> <li><a href="https://www.eecg.toronto.edu/~jzhu/csc326/readings/iverson.pdf">Notation as a Tool of Thought</a> by "Kenneth E. Iverson considered harmful."</li> <li><a href="https://en.wikipedia.org/wiki/Zen_of_Python">The Zen of Python</a> considered a great honking idea.</li> <li><a href="https://en.wikipedia.org/wiki/Why%27s_(poignant)_Guide_to_Ruby">Chunky Bacon</a> considered harmful.</li> <li><a href="https://github.com/features/copilot">Copilot</a> considered harmful.</li> <li><a href="https://en.wikipedia.org/wiki/Charles_Babbage">Charles Babbage</a>'s <a href="https://en.wikipedia.org/wiki/Bridgewater_Treatises">Bridgewater Treatises</a> considered harmful.</li> <li>North &amp; Whitehead's <a href="https://en.wikipedia.org/wiki/Principia_Mathematica">Principia Mathematica</a> considered harmful.</li> <li><a href="https://www.youtube.com/watch?v=wE1NyYT31Tw">The Sailor's Chorus</a> from Wagner's The Flying Dutchman considered harmful.</li> <li><a href="https://pep8.org/">PEP 8</a> considered harmful.</li> <li><a href="https://www.youtube.com/watch?v=lKie-vgUGdI">There are dozens of us considered harmful.</a></li> <li><a href="https://tc39.es/">TC39</a> actually considered harmful.</li> <li><a href="https://wiki.haskell.org/Typeclassopedia#Bifunctor">Bifunctors</a> considered harmful.</li> <li><a href="https://www.chocolate.wiki/">Chocolate</a></li> <li><a href="https://www.radiolab.org/">Radiolab</a> considered one of the only good radio shows, because it's pushing hard against the norms of its medium.</li> <li><a href="https://en.wikipedia.org/wiki/Universal_basic_income">UBI</a> — consider it!</li> <li><a href="https://en.wikipedia.org/wiki/Fork_(chess)">Forking</a> The Queen considered harmful.</li> <li><a href="https://citeseerx.ist.psu.edu/document?doi=ca25ecf69726cde7e4e735fbc9a6805daa4ca9df">The Semantics of Graphical Languages</a>, the paper about a visual formalism for visual programs, considered harmful.</li> </ul> <p>Music featured in this episode:</p> <ul> <li>Lemon</li> <li>Wagner</li> <li>Lu, Devine, William, Alex and Alex, Justin, Marcel, Peter, Matt, Blaine, Kevin, Nicki, Mae, Kate, Steve, Mitja, Philippa, Max, and everyone else who secretly said it like a swearword.</li> </ul> <p>Get in touch, ask questions, don't ask questions:</p> <ul> <li>Ivan: <a href="https://mas.to/@todepond">Mastodon</a> • <a href="https://www.patreon.com/todepond">Email</a></li> <li>Jimmy: <a href="https://mas.to/@todepond">Mastodon</a> • <a href="https://www.patreon.com/todepond">Twitter</a></li> <li>DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a></li> <li>Support the show on <a href="http://patreon.com/futureofcoding">Patreon</a></li> </ul> <p><a href="https://futureofcoding.org/episodes/067">https://futureofcoding.org/episodes/067</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/61bc709c-5a17-487d-91b2-b08c0175901f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/considered-harmful/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">61bc709c-5a17-487d-91b2-b08c0175901f</guid>
      <omny:clipId>61bc709c-5a17-487d-91b2-b08c0175901f</omny:clipId>
      <pubDate>Fri, 29 Sep 2023 23:23:45 +0000</pubDate>
      <itunes:duration>6322</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/61bc709c-5a17-487d-91b2-b08c0175901f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="101165346" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/considered-harmful</link>
    </item>
    <item>
      <title>A Small Matter of Programming by Bonnie Nardi</title>
      <itunes:title>A Small Matter of Programming by Bonnie Nardi</itunes:title>
      <description><![CDATA[<p>This community is a big tent. We welcome folks from all backgrounds, and all levels of experience with computers. Heck, on our last episode, we celebrated an article written by someone who is, rounding down, a lawyer! A constant question I ponder is: what's the best way to introduce someone to the world of FoC? If someone is a workaday programmer, or a non-programmer, what can we share with them to help them understand our area of interest?</p> <p>A personal favourite is the <a href="https://mitpress.mit.edu/9780262232272/">New Media Reader</a>, but it's long and dense. An obvious crowd-pleaser is <a href="https://www.youtube.com/watch?v=PUv66718DII">Inventing on Principle</a>.</p> <p><a href="https://en.wikipedia.org/wiki/Bonnie_Nardi">Bonnie Nardi</a>'s <a href="https://mitpress.mit.edu/9780262292368/a-small-matter-of-programming/">A Small Matter of Programming</a> deserves a place on the list, especially if the reader is already an avid programmer who doesn't yet understand the point of <em>end-user programming</em>. They might ask, "Why should typical computer users bother learning to program?" Well, that's the wrong question! Instead, we should start broader. Why do we use computers? What do we use them to do? What happens when they don't do what we want? Who controls what they do? Will this ever change? What change do we want? Nardi challenges us to explore these questions, and gives the reader a gentle but definitive push in a positive direction.</p> <p>Next time, we're… considered harmful?</p> <p><strong>#### $</strong></p> <p>We have launched a Patreon!</p> <p>=&gt; <a href="http://patreon.com/futureofcoding">patreon.com/futureofcoding</a></p> <p>If, with the warmth in your heart and the wind in your wallet, you so choose to support this show then please know that we are tremendously grateful.</p> <p>Producing this show takes a minor mountain of effort, and while the countless throngs of adoring fair-weather fans will surely arrive <em>eventually</em>, the small kilo-cadre of diehard listeners we've accrued so far makes each new episode a true joy to share. Through thick and thin (mostly thin since the sponsorship landscape turned barren) we're going to keep doing our darnedest to make something thought-provoking with an independent spirit. If that tickles you pink, throw some wood in our fireplace! (Yes, Ivan is writing this, how can you tell?)</p> <p>Also, it doesn't hurt that the 2nd bonus episode — "Inherently Spatial" — is one of the best episodes of the show yet. It defrags so hard; you'll love it.</p> <p><strong>#### Init</strong></p> <ul> <li>Bug report: <a href="https://store.steampowered.com/app/1194840/Frog_Fractions_Game_of_the_Decade_Edition/">Frog Fractions</a>. Oh the indignity!</li> <li>Hey, it's <a href="https://www.youtube.com/watch?v=T9AtV8FIzFI">The Witness</a> in our show notes again.</li> <li><a href="https://en.wikipedia.org/wiki/Getting_Over_It_with_Bennett_Foddy">Getting Over It with Bennett Foddy</a> is the better game, even if it spawned <a href="https://www.youtube.com/watch?v=EVHF-vSK3wY">Only Up</a> and other copycats that miss the point. <a href="https://www.youtube.com/watch?v=oWHEmg7f8Lw">The Looker gets the point.</a></li> <li><a href="https://youtu.be/DYjbCJXxWLg?t=473">Getting Over It is a triumph</a> that emerged from a genre of games that are hard to play: <a href="https://www.youtube.com/watch?v=QbjqsMqJZ6M&amp;t=14s">Octodad</a>, <a href="https://www.youtube.com/watch?v=EmcMG4uxiHk">QWOP</a>, <a href="https://youtu.be/RjJjUu0WjFg?t=77">I Am Bread</a></li> <li><a href="https://store.steampowered.com/app/26800/Braid/">Braid</a> arguably spawned the genre of high-minded &amp; heady puzzlers that all try to say something profound through their design.</li> <li><a href="https://orteil.dashnet.org/cookieclicker/">Cookie Clicker</a> and <a href="https://www.decisionproblem.com/paperclips/">Universal Paperclips</a> are good <a href="https://en.wikipedia.org/wiki/Incremental_game">incremental games</a>.</li> <li><a href="https://en.wikipedia.org/wiki/Jump_King">Jump King</a> and <a href="https://en.wikipedia.org/wiki/Only_Up!">Only Up</a> are intentionally bad. <a href="https://en.wikipedia.org/wiki/Flappy_Bird">Flappy Bird</a> was accidentally good. <a href="https://store.steampowered.com/app/233720/Surgeon_Simulator/">Surgeon Simulator</a> and <a href="https://store.steampowered.com/app/265930/Goat_Simulator/">Goat Simulator</a> are purely for the laughs. <a href="https://store.steampowered.com/app/1703340/The_Stanley_Parable_Ultra_Deluxe/">Stanley Parable</a>, like Getting Over It, brings in the voice of the creator to (say) invite rumination on the fourth wall, which is what make them transcendent.</li> <li>Here's the trailer for Bennett Foddy's new game, <a href="https://www.youtube.com/watch?v=XBaOE-FpIBw">Baby Steps</a>.</li> <li>So on the one hand we have all these "bad" and """bad""" and sometimes <em>bad</em>games, which actually end up doing quite well in advancing the culture. On the other hand we have The Witness, <a href="https://store.steampowered.com/app/257510/The_Talos_Principle/">The Talos Principal</a>, <a href="https://store.steampowered.com/app/231160/The_Swapper/">Swapper</a>, <a href="https://store.steampowered.com/app/219890/Antichamber/">Antichamber</a>, <a href="https://store.steampowered.com/app/1564220/QUBE_10th_Anniversary/">QUBE</a>, and all these high-minded puzzly games, which despite their best efforts to <em>say something</em> through their design… kinda don't.</li> <li>When comparing the "interactivity" of these games, it's tempting to talk about the <a href="https://en.wikipedia.org/wiki/MDA_framework">mechanics (or dynamics)</a>, but that formal definition feels a little too precise. We mean something looser — something closer to the colloquial meaning when "Gamers" talk about "game mechanics".</li> <li><a href="https://www.reddit.com/r/silentfootball/comments/rro8r2/the_rules_of_silent_football/">Silent Football</a> might be an example of "sports as art". <a href="https://en.wikipedia.org/wiki/Mao_(card_game)">Mao</a> is a card game where explaining the rules is forbidden.</li> </ul> <p><strong>#### Main</strong></p> <ul> <li>The <a href="https://partiallyexaminedlife.com/">Partially Examined Life</a> is one of Jimmy's favourite philosophy podcasts.</li> <li>Two essays from Scientific American's 1991 Special Issue <a href="https://archive.org/details/communicationsco0000unse_p4x1/page/n3/mode/2up">Communications, Computers and Networks</a> are referenced in the first chapter, one by <a href="https://en.wikipedia.org/wiki/Larry_Tesler">Larry Tesler</a> and one by <a href="https://en.wikipedia.org/wiki/Alan_Kay">Alan Kay</a>. The other essays in this issue are also quite <a href="https://futureofcoding.slack.com/archives/C5U3SEW6A/p1688074700726099">interesting to reflect on</a> from our position 30 years hence.</li> <li>Apple's <a href="https://www.youtube.com/watch?v=8mLqJNDWx-8">Knowledge Navigator</a> video, and HP's <a href="https://www.youtube.com/watch?v=pPKX5iuBvZg">1995</a> video, are <a href="http://worrydream.com/ABriefRantOnTheFutureOfInteractionDesign/">speculative fiction marketing</a> about <a href="https://en.wikipedia.org/wiki/Dialogue_system">conversational agents</a>.</li> <li><a href="https://www.rewind.ai/">Rewind.ai</a> is one of those "Computer, when did I last degauss the tachyon masticator?" tools. (Oh, <a href="http://cs-www.cs.yale.edu/homes/freeman/lifestreams.html">Lifestreams</a>…)</li> <li><a href="https://www.macstories.net/ios/introducing-s-gpt-a-shortcut-to-connect-openais-chatgpt-with-native-features-of-apples-operating-systems/">S-GPT</a> is <a href="http://ticci.org/">Federico Viticci</a>'s iOS/Mac Shortcut that strings together <a href="https://en.wikipedia.org/wiki/ChatGPT">ChatGPT</a> and various <a href="https://en.wikipedia.org/wiki/Shortcuts_(app)">Shortcuts</a> features, so that you can do some nifty automation stuff via a conversational interface. It feels like similar things could be built — heck, probably already have been built — with <a href="https://ifttt.com/">"If-Tuh-Tuh-Tuh"</a> or <a href="https://zapier.com/">Zapier</a>.</li> <li>When Ivan reaches for domain-specific terminology, <a href="https://en.wikipedia.org/wiki/3D_lookup_table">LUT</a>, <a href="https://en.wikipedia.org/wiki/Arri_Alexa">Arri Alexa</a>, and <a href="https://en.wikipedia.org/wiki/Red_Digital_Cinema">Red</a>come easily because, like, he wishes he had occasion to use them.</li> <li>To hear the story about the Secret Service busting down young Jimmy's door, listen to his episode on the <a href="https://www.codewithjason.com/podcast/13032809-186-jimmy-miller/">Code With Jason</a> podcast.</li> <li><a href="https://queue.acm.org/detail.cfm?id=3212479">C Is Not a Low-level Language</a> — a fantastic article about the illusion that our source code closely matches what actually happens during execution.</li> <li><a href="https://jimmyhmiller.github.io/empirical">What Follows from Empirical Software Research?</a> Not much, according to Jimmy in this delightful article.</li> <li>Jimmy likes to reference Minecraft's "redstone" which acts a bit like a programming system, so here, have a <a href="https://www.youtube.com/watch?v=ooL9nVQA6qU">video about redstone</a>.</li> <li>Ivan saw this video via Mastodon, about someone making a "real" camera in Blender, and… just… 🤯 — <a href="https://www.youtube.com/watch?v=YE9rEQAGpLw">https://www.youtube.com/watch?v=YE9rEQAGpLw</a></li> <li>Jimmy's orchestra struggled with an inappropriately formal approach to Coldplay's <a href="https://www.youtube.com/watch?v=dvgZkm1xWPE">Viva La Vida</a>.</li> <li><a href="https://en.wikipedia.org/wiki/Knuth%27s_up-arrow_notation">Knuth's up-arrow notation</a></li> </ul> <p>One meaning of "end-user programming" is about allowing people to build their own software. Another is about modifying existing software, and here are two interesting links related to this second meaning:</p> <ul> <li> <p><a href="https://sprout.place/">sprout.place</a> is a <em>lovely</em> website where you decorate a little virtual space together with some remote friends. It's like a MySpace page mashed-up with a Zoom hang, but better.</p> </li> <li> <p><a href="https://www.geoffreylitt.com/">Geoffrey Litt</a> is a researcher who has tackled both meanings of EUP, but his work on the second meaning is especially interesting. For instance: he worked on <a href="https://riffle.systems/essays/prelude/">Riffle</a>, which explored the consequences of putting the full state of an app inside a reactive database, which is especially interesting if you consider what can be done if this database is available to, rather than hidden from, the end user.</p> </li> <li> <p>To the best of our recollection, <a href="https://www.subtext-lang.org/AboutMe.htm">Jonathan Edwards</a> has advocated for "end-programmer programming" as a helpful step toward end-user programming.</p> </li> </ul> <p>Get in touch, ask us questions, please no more mp3s ahh I can still hear the bones yuck:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="mailto:admin@futureofcoding.org?subject=Question%20from%20an%20FoC%20Listener">Email</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://twitter.com/jimmyhmiller">Twitter</a></li> <li>DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a></li> <li>Support the show on <a href="https://www.patreon.com/futureofcoding">Patreon</a><a href="http://patreon.com/futureofcoding"></a></li> <li>lol stands for "lots of love"</li> </ul> <p><a href="https://futureofcoding.org/episodes/066">https://futureofcoding.org/episodes/066</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>This community is a big tent. We welcome folks from all backgrounds, and all levels of experience with computers. Heck, on our last episode, we celebrated an article written by someone who is, rounding down, a lawyer! A constant question I ponder is: what's the best way to introduce someone to the world of FoC? If someone is a workaday programmer, or a non-programmer, what can we share with them to help them understand our area of interest?</p> <p>A personal favourite is the <a href="https://mitpress.mit.edu/9780262232272/">New Media Reader</a>, but it's long and dense. An obvious crowd-pleaser is <a href="https://www.youtube.com/watch?v=PUv66718DII">Inventing on Principle</a>.</p> <p><a href="https://en.wikipedia.org/wiki/Bonnie_Nardi">Bonnie Nardi</a>'s <a href="https://mitpress.mit.edu/9780262292368/a-small-matter-of-programming/">A Small Matter of Programming</a> deserves a place on the list, especially if the reader is already an avid programmer who doesn't yet understand the point of <em>end-user programming</em>. They might ask, "Why should typical computer users bother learning to program?" Well, that's the wrong question! Instead, we should start broader. Why do we use computers? What do we use them to do? What happens when they don't do what we want? Who controls what they do? Will this ever change? What change do we want? Nardi challenges us to explore these questions, and gives the reader a gentle but definitive push in a positive direction.</p> <p>Next time, we're… considered harmful?</p> <p><strong>#### $</strong></p> <p>We have launched a Patreon!</p> <p>=&gt; <a href="http://patreon.com/futureofcoding">patreon.com/futureofcoding</a></p> <p>If, with the warmth in your heart and the wind in your wallet, you so choose to support this show then please know that we are tremendously grateful.</p> <p>Producing this show takes a minor mountain of effort, and while the countless throngs of adoring fair-weather fans will surely arrive <em>eventually</em>, the small kilo-cadre of diehard listeners we've accrued so far makes each new episode a true joy to share. Through thick and thin (mostly thin since the sponsorship landscape turned barren) we're going to keep doing our darnedest to make something thought-provoking with an independent spirit. If that tickles you pink, throw some wood in our fireplace! (Yes, Ivan is writing this, how can you tell?)</p> <p>Also, it doesn't hurt that the 2nd bonus episode — "Inherently Spatial" — is one of the best episodes of the show yet. It defrags so hard; you'll love it.</p> <p><strong>#### Init</strong></p> <ul> <li>Bug report: <a href="https://store.steampowered.com/app/1194840/Frog_Fractions_Game_of_the_Decade_Edition/">Frog Fractions</a>. Oh the indignity!</li> <li>Hey, it's <a href="https://www.youtube.com/watch?v=T9AtV8FIzFI">The Witness</a> in our show notes again.</li> <li><a href="https://en.wikipedia.org/wiki/Getting_Over_It_with_Bennett_Foddy">Getting Over It with Bennett Foddy</a> is the better game, even if it spawned <a href="https://www.youtube.com/watch?v=EVHF-vSK3wY">Only Up</a> and other copycats that miss the point. <a href="https://www.youtube.com/watch?v=oWHEmg7f8Lw">The Looker gets the point.</a></li> <li><a href="https://youtu.be/DYjbCJXxWLg?t=473">Getting Over It is a triumph</a> that emerged from a genre of games that are hard to play: <a href="https://www.youtube.com/watch?v=QbjqsMqJZ6M&amp;t=14s">Octodad</a>, <a href="https://www.youtube.com/watch?v=EmcMG4uxiHk">QWOP</a>, <a href="https://youtu.be/RjJjUu0WjFg?t=77">I Am Bread</a></li> <li><a href="https://store.steampowered.com/app/26800/Braid/">Braid</a> arguably spawned the genre of high-minded &amp; heady puzzlers that all try to say something profound through their design.</li> <li><a href="https://orteil.dashnet.org/cookieclicker/">Cookie Clicker</a> and <a href="https://www.decisionproblem.com/paperclips/">Universal Paperclips</a> are good <a href="https://en.wikipedia.org/wiki/Incremental_game">incremental games</a>.</li> <li><a href="https://en.wikipedia.org/wiki/Jump_King">Jump King</a> and <a href="https://en.wikipedia.org/wiki/Only_Up!">Only Up</a> are intentionally bad. <a href="https://en.wikipedia.org/wiki/Flappy_Bird">Flappy Bird</a> was accidentally good. <a href="https://store.steampowered.com/app/233720/Surgeon_Simulator/">Surgeon Simulator</a> and <a href="https://store.steampowered.com/app/265930/Goat_Simulator/">Goat Simulator</a> are purely for the laughs. <a href="https://store.steampowered.com/app/1703340/The_Stanley_Parable_Ultra_Deluxe/">Stanley Parable</a>, like Getting Over It, brings in the voice of the creator to (say) invite rumination on the fourth wall, which is what make them transcendent.</li> <li>Here's the trailer for Bennett Foddy's new game, <a href="https://www.youtube.com/watch?v=XBaOE-FpIBw">Baby Steps</a>.</li> <li>So on the one hand we have all these "bad" and """bad""" and sometimes <em>bad</em>games, which actually end up doing quite well in advancing the culture. On the other hand we have The Witness, <a href="https://store.steampowered.com/app/257510/The_Talos_Principle/">The Talos Principal</a>, <a href="https://store.steampowered.com/app/231160/The_Swapper/">Swapper</a>, <a href="https://store.steampowered.com/app/219890/Antichamber/">Antichamber</a>, <a href="https://store.steampowered.com/app/1564220/QUBE_10th_Anniversary/">QUBE</a>, and all these high-minded puzzly games, which despite their best efforts to <em>say something</em> through their design… kinda don't.</li> <li>When comparing the "interactivity" of these games, it's tempting to talk about the <a href="https://en.wikipedia.org/wiki/MDA_framework">mechanics (or dynamics)</a>, but that formal definition feels a little too precise. We mean something looser — something closer to the colloquial meaning when "Gamers" talk about "game mechanics".</li> <li><a href="https://www.reddit.com/r/silentfootball/comments/rro8r2/the_rules_of_silent_football/">Silent Football</a> might be an example of "sports as art". <a href="https://en.wikipedia.org/wiki/Mao_(card_game)">Mao</a> is a card game where explaining the rules is forbidden.</li> </ul> <p><strong>#### Main</strong></p> <ul> <li>The <a href="https://partiallyexaminedlife.com/">Partially Examined Life</a> is one of Jimmy's favourite philosophy podcasts.</li> <li>Two essays from Scientific American's 1991 Special Issue <a href="https://archive.org/details/communicationsco0000unse_p4x1/page/n3/mode/2up">Communications, Computers and Networks</a> are referenced in the first chapter, one by <a href="https://en.wikipedia.org/wiki/Larry_Tesler">Larry Tesler</a> and one by <a href="https://en.wikipedia.org/wiki/Alan_Kay">Alan Kay</a>. The other essays in this issue are also quite <a href="https://futureofcoding.slack.com/archives/C5U3SEW6A/p1688074700726099">interesting to reflect on</a> from our position 30 years hence.</li> <li>Apple's <a href="https://www.youtube.com/watch?v=8mLqJNDWx-8">Knowledge Navigator</a> video, and HP's <a href="https://www.youtube.com/watch?v=pPKX5iuBvZg">1995</a> video, are <a href="http://worrydream.com/ABriefRantOnTheFutureOfInteractionDesign/">speculative fiction marketing</a> about <a href="https://en.wikipedia.org/wiki/Dialogue_system">conversational agents</a>.</li> <li><a href="https://www.rewind.ai/">Rewind.ai</a> is one of those "Computer, when did I last degauss the tachyon masticator?" tools. (Oh, <a href="http://cs-www.cs.yale.edu/homes/freeman/lifestreams.html">Lifestreams</a>…)</li> <li><a href="https://www.macstories.net/ios/introducing-s-gpt-a-shortcut-to-connect-openais-chatgpt-with-native-features-of-apples-operating-systems/">S-GPT</a> is <a href="http://ticci.org/">Federico Viticci</a>'s iOS/Mac Shortcut that strings together <a href="https://en.wikipedia.org/wiki/ChatGPT">ChatGPT</a> and various <a href="https://en.wikipedia.org/wiki/Shortcuts_(app)">Shortcuts</a> features, so that you can do some nifty automation stuff via a conversational interface. It feels like similar things could be built — heck, probably already have been built — with <a href="https://ifttt.com/">"If-Tuh-Tuh-Tuh"</a> or <a href="https://zapier.com/">Zapier</a>.</li> <li>When Ivan reaches for domain-specific terminology, <a href="https://en.wikipedia.org/wiki/3D_lookup_table">LUT</a>, <a href="https://en.wikipedia.org/wiki/Arri_Alexa">Arri Alexa</a>, and <a href="https://en.wikipedia.org/wiki/Red_Digital_Cinema">Red</a>come easily because, like, he wishes he had occasion to use them.</li> <li>To hear the story about the Secret Service busting down young Jimmy's door, listen to his episode on the <a href="https://www.codewithjason.com/podcast/13032809-186-jimmy-miller/">Code With Jason</a> podcast.</li> <li><a href="https://queue.acm.org/detail.cfm?id=3212479">C Is Not a Low-level Language</a> — a fantastic article about the illusion that our source code closely matches what actually happens during execution.</li> <li><a href="https://jimmyhmiller.github.io/empirical">What Follows from Empirical Software Research?</a> Not much, according to Jimmy in this delightful article.</li> <li>Jimmy likes to reference Minecraft's "redstone" which acts a bit like a programming system, so here, have a <a href="https://www.youtube.com/watch?v=ooL9nVQA6qU">video about redstone</a>.</li> <li>Ivan saw this video via Mastodon, about someone making a "real" camera in Blender, and… just… 🤯 — <a href="https://www.youtube.com/watch?v=YE9rEQAGpLw">https://www.youtube.com/watch?v=YE9rEQAGpLw</a></li> <li>Jimmy's orchestra struggled with an inappropriately formal approach to Coldplay's <a href="https://www.youtube.com/watch?v=dvgZkm1xWPE">Viva La Vida</a>.</li> <li><a href="https://en.wikipedia.org/wiki/Knuth%27s_up-arrow_notation">Knuth's up-arrow notation</a></li> </ul> <p>One meaning of "end-user programming" is about allowing people to build their own software. Another is about modifying existing software, and here are two interesting links related to this second meaning:</p> <ul> <li> <p><a href="https://sprout.place/">sprout.place</a> is a <em>lovely</em> website where you decorate a little virtual space together with some remote friends. It's like a MySpace page mashed-up with a Zoom hang, but better.</p> </li> <li> <p><a href="https://www.geoffreylitt.com/">Geoffrey Litt</a> is a researcher who has tackled both meanings of EUP, but his work on the second meaning is especially interesting. For instance: he worked on <a href="https://riffle.systems/essays/prelude/">Riffle</a>, which explored the consequences of putting the full state of an app inside a reactive database, which is especially interesting if you consider what can be done if this database is available to, rather than hidden from, the end user.</p> </li> <li> <p>To the best of our recollection, <a href="https://www.subtext-lang.org/AboutMe.htm">Jonathan Edwards</a> has advocated for "end-programmer programming" as a helpful step toward end-user programming.</p> </li> </ul> <p>Get in touch, ask us questions, please no more mp3s ahh I can still hear the bones yuck:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="mailto:admin@futureofcoding.org?subject=Question%20from%20an%20FoC%20Listener">Email</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://twitter.com/jimmyhmiller">Twitter</a></li> <li>DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a></li> <li>Support the show on <a href="https://www.patreon.com/futureofcoding">Patreon</a><a href="http://patreon.com/futureofcoding"></a></li> <li>lol stands for "lots of love"</li> </ul> <p><a href="https://futureofcoding.org/episodes/066">https://futureofcoding.org/episodes/066</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/24e65e5c-f9b0-43d3-b10e-b0670028fc62/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/a-small-matter-of-programming-by-bonnie-nardi/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">24e65e5c-f9b0-43d3-b10e-b0670028fc62</guid>
      <omny:clipId>24e65e5c-f9b0-43d3-b10e-b0670028fc62</omny:clipId>
      <pubDate>Wed, 23 Aug 2023 02:47:39 +0000</pubDate>
      <itunes:duration>9290</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/24e65e5c-f9b0-43d3-b10e-b0670028fc62/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="148662255" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/a-small-matter-of-programming-by-bonnie-nardi</link>
    </item>
    <item>
      <title>Interpreting the Rule(s) of Code by Laurence Diver</title>
      <itunes:title>Interpreting the Rule(s) of Code by Laurence Diver</itunes:title>
      <description><![CDATA[<p>The execution of code, by its very nature, creates the conditions of a "strong legalism" in which you must unquestioningly obey laws produced without your say, invisibly, with no chance for appeal. This is a wild idea; today's essay is packed with them. In drawing parallels between law and computing, it gives us a new skepticism about software and the effect it has on the world. It's also full of challenges and benchmarks and ideas for ways that code can be reimagined. The conclusion of the essay is flush with inspiration, and the references are stellar. So while it might not look it at first, this is one of the most powerful works of FoC we've read: <a href="https://law.mit.edu/pub/interpretingtherulesofcode/">Interpreting the Rule(s) of Code: Performance, Performativity, and Production</a> by Laurence Diver, 2001.</p> <p>Next episode, we're having an open-ended discussion about end-user programming. The reading is Bonnie Nardi's 1993 classic, <a href="https://www.penguinrandomhouse.com/books/655143/a-small-matter-of-programming-by-bonnie-a-nardi/">A Small Matter of Programming</a>, with the referenced articles from the 1991 Scientific American special issue <a href="https://archive.org/details/communicationsco0000unse_p4x1/page/n3">Communications, Computers and Networks</a> as extra background.</p> <p>Links</p> <ul> <li><a href="https://nova.app/">Nova</a> is the new code editor from <a href="https://panic.com/">Panic</a>. Ivan is using it now that his beloved Atom has hit <a href="https://github.blog/2022-06-08-sunsetting-atom/">end-of-life</a>.</li> <li>Ira Glass spoke about <a href="https://vimeo.com/85040589">The Gap</a></li> <li>Ivan's <a href="https://twitter.com/spiralganglion/status/1557200879287095296">unicorn-puke GUI</a></li> <li>Jimmy tried recreating the grainy effect used by The Browser Company's <a href="https://arc.net/">Arc</a></li> <li>Chris Granger's <a href="https://chris-granger.com/lighttable/">Light Table</a> was an early Kickstarter success.</li> <li><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/ia.net/presenter">iA Presenter</a> has a clichéd <a href="https://www.youtube.com/watch?v=Ppuf6TCfSvo">video teaser</a>. <a href="https://mimestream.com/">Mimestream</a>, a great native Mac client for Gmail, also made <a href="https://www.youtube.com/watch?v=LmtKeKRd5kk">one of these</a>. Ivan first saw this style of video over a decade ago with <a href="https://vimeo.com/32852176">Sparrow</a> — and at least this one has a narrative. Occasionally, someone does a playful tweak on the formula, like <a href="https://www.youtube.com/watch?v=YEXRx5wZ-cw">this video that keeps getting interrupted</a> for Dark Noise. But in general, this format is worn out, and it was never great to begin with.</li> <li>Here's the classic <a href="https://www.youtube.com/watch?v=Y7aEiVwBAdk">Atom 1.0 announcement video</a></li> <li><a href="https://verybadwizards.com/">Very Bad Wizards</a> and <a href="https://www.patreon.com/IfBooksPod">If Books Could Kill</a> are podcasts that talk through a work from beginning to end sprinkling in reflections as they go, rather than jumping around randomly or separating recap from reflection.</li> <li><a href="https://en.wikipedia.org/wiki/Speech_act">Speech act</a> has a philosophy corner within the philosophy corner. <a href="http://www-formal.stanford.edu/jmc/elephant.pdf">Elephant 2000</a> by Lisp creator John McCarthy, and <a href="https://dynamicland.org/">Dynamicland</a>, both make use of speech acts.</li> <li><a href="https://sci-hub.ru/10.1016/0167-6423(91)90036-w">On The Expressive Power of Programming Languages</a> by Matthias Felleisen</li> <li>The <a href="https://en.wikipedia.org/wiki/Linguistic_relativity">Sapir-Whorf hypothesis</a></li> <li><a href="http://www.is.ocha.ac.jp/~asai/Black/">Black</a>, a reflective Scheme by Kenichi Asai.</li> <li><a href="https://en.wikipedia.org/wiki/Hollow_Knight">Hollow Knight</a> is a great game for a 4-year old, and a 40-year old. It's just a great game. Maybe the greatest? <a href="https://en.wikipedia.org/wiki/Doom_Eternal">Doom Eternal</a>, not so much — but <a href="https://www.youtube.com/watch?v=U4FNBMZsqrY">the inventive soundtrack</a> absolutely slays.</li> <li><a href="https://www.inkandswitch.com/local-first/">Local-first software</a></li> <li>Tony Gilroy's <a href="https://en.wikipedia.org/wiki/Andor_(TV_series)">Andor</a> and Terry Gilliam's <a href="https://en.wikipedia.org/wiki/Brazil_(1985_film)">Brazil</a>. In hindsight, I'm surprised we made it all the way to the final minutes of the show before mentioning Brazil.</li> </ul> <p>Get in touch, ask us questions, DON'T send us the sound of your knuckles cracking:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="mailto:admin@futureofcoding.org?subject=Question%20from%20an%20FoC%20Listener">Email</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://twitter.com/jimmyhmiller">Twitter</a></li> <li>Join the <a href="https://futureofcoding.org/community">Future of Coding Slack</a></li> </ul> <p><a href="https://futureofcoding.org/episodes/065">https://futureofcoding.org/episodes/065</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>The execution of code, by its very nature, creates the conditions of a "strong legalism" in which you must unquestioningly obey laws produced without your say, invisibly, with no chance for appeal. This is a wild idea; today's essay is packed with them. In drawing parallels between law and computing, it gives us a new skepticism about software and the effect it has on the world. It's also full of challenges and benchmarks and ideas for ways that code can be reimagined. The conclusion of the essay is flush with inspiration, and the references are stellar. So while it might not look it at first, this is one of the most powerful works of FoC we've read: <a href="https://law.mit.edu/pub/interpretingtherulesofcode/">Interpreting the Rule(s) of Code: Performance, Performativity, and Production</a> by Laurence Diver, 2001.</p> <p>Next episode, we're having an open-ended discussion about end-user programming. The reading is Bonnie Nardi's 1993 classic, <a href="https://www.penguinrandomhouse.com/books/655143/a-small-matter-of-programming-by-bonnie-a-nardi/">A Small Matter of Programming</a>, with the referenced articles from the 1991 Scientific American special issue <a href="https://archive.org/details/communicationsco0000unse_p4x1/page/n3">Communications, Computers and Networks</a> as extra background.</p> <p>Links</p> <ul> <li><a href="https://nova.app/">Nova</a> is the new code editor from <a href="https://panic.com/">Panic</a>. Ivan is using it now that his beloved Atom has hit <a href="https://github.blog/2022-06-08-sunsetting-atom/">end-of-life</a>.</li> <li>Ira Glass spoke about <a href="https://vimeo.com/85040589">The Gap</a></li> <li>Ivan's <a href="https://twitter.com/spiralganglion/status/1557200879287095296">unicorn-puke GUI</a></li> <li>Jimmy tried recreating the grainy effect used by The Browser Company's <a href="https://arc.net/">Arc</a></li> <li>Chris Granger's <a href="https://chris-granger.com/lighttable/">Light Table</a> was an early Kickstarter success.</li> <li><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/ia.net/presenter">iA Presenter</a> has a clichéd <a href="https://www.youtube.com/watch?v=Ppuf6TCfSvo">video teaser</a>. <a href="https://mimestream.com/">Mimestream</a>, a great native Mac client for Gmail, also made <a href="https://www.youtube.com/watch?v=LmtKeKRd5kk">one of these</a>. Ivan first saw this style of video over a decade ago with <a href="https://vimeo.com/32852176">Sparrow</a> — and at least this one has a narrative. Occasionally, someone does a playful tweak on the formula, like <a href="https://www.youtube.com/watch?v=YEXRx5wZ-cw">this video that keeps getting interrupted</a> for Dark Noise. But in general, this format is worn out, and it was never great to begin with.</li> <li>Here's the classic <a href="https://www.youtube.com/watch?v=Y7aEiVwBAdk">Atom 1.0 announcement video</a></li> <li><a href="https://verybadwizards.com/">Very Bad Wizards</a> and <a href="https://www.patreon.com/IfBooksPod">If Books Could Kill</a> are podcasts that talk through a work from beginning to end sprinkling in reflections as they go, rather than jumping around randomly or separating recap from reflection.</li> <li><a href="https://en.wikipedia.org/wiki/Speech_act">Speech act</a> has a philosophy corner within the philosophy corner. <a href="http://www-formal.stanford.edu/jmc/elephant.pdf">Elephant 2000</a> by Lisp creator John McCarthy, and <a href="https://dynamicland.org/">Dynamicland</a>, both make use of speech acts.</li> <li><a href="https://sci-hub.ru/10.1016/0167-6423(91)90036-w">On The Expressive Power of Programming Languages</a> by Matthias Felleisen</li> <li>The <a href="https://en.wikipedia.org/wiki/Linguistic_relativity">Sapir-Whorf hypothesis</a></li> <li><a href="http://www.is.ocha.ac.jp/~asai/Black/">Black</a>, a reflective Scheme by Kenichi Asai.</li> <li><a href="https://en.wikipedia.org/wiki/Hollow_Knight">Hollow Knight</a> is a great game for a 4-year old, and a 40-year old. It's just a great game. Maybe the greatest? <a href="https://en.wikipedia.org/wiki/Doom_Eternal">Doom Eternal</a>, not so much — but <a href="https://www.youtube.com/watch?v=U4FNBMZsqrY">the inventive soundtrack</a> absolutely slays.</li> <li><a href="https://www.inkandswitch.com/local-first/">Local-first software</a></li> <li>Tony Gilroy's <a href="https://en.wikipedia.org/wiki/Andor_(TV_series)">Andor</a> and Terry Gilliam's <a href="https://en.wikipedia.org/wiki/Brazil_(1985_film)">Brazil</a>. In hindsight, I'm surprised we made it all the way to the final minutes of the show before mentioning Brazil.</li> </ul> <p>Get in touch, ask us questions, DON'T send us the sound of your knuckles cracking:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="mailto:admin@futureofcoding.org?subject=Question%20from%20an%20FoC%20Listener">Email</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://twitter.com/jimmyhmiller">Twitter</a></li> <li>Join the <a href="https://futureofcoding.org/community">Future of Coding Slack</a></li> </ul> <p><a href="https://futureofcoding.org/episodes/065">https://futureofcoding.org/episodes/065</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/1f560040-86c5-41d1-8898-b03401106749/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/interpreting-the-rules-of-code/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">1f560040-86c5-41d1-8898-b03401106749</guid>
      <omny:clipId>1f560040-86c5-41d1-8898-b03401106749</omny:clipId>
      <pubDate>Mon, 03 Jul 2023 16:40:26 +0000</pubDate>
      <itunes:duration>10900</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/1f560040-86c5-41d1-8898-b03401106749/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="174424428" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/interpreting-the-rules-of-code</link>
    </item>
    <item>
      <title>INTERCAL by Donald Woods &amp; James Lyon</title>
      <itunes:title>INTERCAL by Donald Woods &amp; James Lyon</itunes:title>
      <description><![CDATA[<p>This is a normal episode of a podcast called Future of Coding. We talk about <a href="https://en.wikipedia.org/wiki/INTERCAL">INTERCAL</a>, a real tool for computer programming. [Do I need to say more? Will this sell it? Most people won’t have heard of INTERCAL, but I think the fake out “normal” is enough to draw their attention. Also, I find “computer programming” funny. Not sure why I put that in quotes.]</p> <p>Links [at least, the ones I remembered to jot down]<a href="https://futureofcoding.org/episodes/064#links-at-least-the-ones-i-remembered-to-jot-down" aria-label="Anchor" data-anchorjs-icon=""></a></p> <ul> <li> <p>The final <a href="https://thestrangeloop.com/">Strange Loop</a> is coming up this September. Ivan and Jimmy will both be there, though—late breaking news—neither of them will be giving a talk. (“Rocket Rules” apply, if you know what that is.) [Will anyone actually know what “Rocket Rules” is? Will they search for it? That would be sort of embarrassing for me.]</p> </li> <li> <p>If Ivan were to give a programming talk, getting some <a href="https://ivanish.ca/a-d/">flood-contaminated gear</a> from <a href="https://en.wikipedia.org/wiki/Digital_Equipment_Corporation">DEC</a> or a <a href="https://en.wikipedia.org/wiki/PDP-11">PDP-11</a> to use as <a href="https://en.wikipedia.org/wiki/Staging_(theatre,_film,_television)">staging / set dressing</a> might be a challenge. [Yay, another retread of my personal history. Maybe instead of dredging up my past I should be the sort of person who makes new things, like, ever.]</p> </li> <li> <p><a href="https://www.youtube.com/watch?v=HJRjomY6xyc">Meowmeowbeenz</a> [Gah this show hasn’t aged well. At least I’m sticking to the whole “high-brow + low-brow” personal identity by including the reference to it. [Is “meta” low-brow at this point?]]</p> </li> <li> <p>There’s lots of talk about esolangs (esoteric programming languages), so it’s worth linking the <a href="https://esolangs.org/">Esolang Wiki</a>. [I worry that we spent too much time focusing on surface syntax. Jimmy tried to get us to talk about the beautifully-weird semantics within INTERCAL, but we never fully went there. I’m sure some people will complain about this lack of depth. Not looking forward to that.]</p> </li> <li> <p>In particular, <a href="https://en.wikipedia.org/wiki/Brainfuck">Brainfuck</a>, which Jimmy adorably refers to as “BF” because he’s a polite gentleman and Ivan is 2% South Park. [Laughing at my own joke.]</p> </li> <li> <p>Also, <a href="https://esolangs.org/wiki/Shakespeare">Shakespeare</a> and Shakespeare: <a href="https://archive.org/details/macbethtragedy00shak_0/page/42/mode/2up?ref=ol&amp;view=theater&amp;q=vaulting">vaulting ambition</a>, <a href="https://archive.org/details/macbethtragedy00shak_0/page/114/mode/2up?ref=ol&amp;view=theater&amp;q=%22Out%2C+damned+fpot%3B+out%2C+I+fay%22">Out, damned spot</a>, both from the Scottish play (you don’t know where I am, don’t @ me). [Why are these in the show notes? Am I trying to signal some sort of theatre-literacy? Who cares?]</p> </li> <li> <p>“<a href="https://en.wikipedia.org/wiki/COMEFROM">COMEFROM</a> was eventually implemented in the C-INTERCAL variant of the esoteric programming language INTERCAL” [Considering that this was such a non-element in the original paper, it’s weird that it became such a cornerstone of the episode. “What if we recreated the spirit of the paper in the podcast itself” is a tall order, so I guess we did what we could with what we had. Also, I bet someone is going to object that the paper and language aren’t actually very <em>meta</em>, especially not multiple layers deep, to which I’ll reply: we all bring the flavour of our mouth to the soup we taste.]</p> </li> <li> <p><a href="http://www.zachtronics.com/exapunks/">Exapunks</a>… <a href="https://futureofcoding.org/episodes/056">Yeah!</a> [Speaking of things that haven’t aged well… woof. I like our newer episodes better. Especially this one. THAT’S JUST BAIT FOR THE PEOPLE WHO WILL COMPLAIN THAT THIS SHOW HAS GONE OFF THE RAILS, PLEASE DO CONTINUE TO LISTEN TO THE SHOW.]</p> </li> <li> <p>Our tier list was created in <a href="https://www.tldraw.com/">tldraw</a>, because it’s the best. [I wish someone applied Steve-and-co’s eye for detail to a visual programming tool. I wish I had time.]</p> </li> <li> <p>The excellent <a href="https://adventofcomputing.com/">Advent of Computing</a> podcast did an <a href="https://adventofcomputing.com/?guid=5d5dc806-ddd9-4f99-aae3-76cadca1ad9f">episode on INTERCAL</a>. (Aside: the AoC website seems a bit busted in non-Chrome browsers, so here’s a backup <a href="https://www.youtube.com/watch?v=dCIF44AqkEA">YouTube link</a>, but you can also just search for Advent of Computing in your podcast player of choice.) [AoC is the exception that proves the rule: there are no high-quality programming podcasts. They all seem so low-effort, made by people who don’t respect the listener’s time and attention. Or they’re aping the high-budget NPR style, with no personality. Also, audio quality is all over the map. Also, just the worst garbage ads and theme music, all of them! I wonder if it’s just a cost-benefit time/energy tradeoff, or maybe people don’t know <em>how</em> to do better? I wonder what we could do to help raise the bar, without opening ourselves up to a bunch of “well I don’t like your podcast either” presumed competitiveness.]</p> </li> <li> <p>The video <a href="https://www.youtube.com/watch?v=Q4OIcwt8vcE">Screens in Screens in Screens</a> is fantastic, and the sort of thing that <a href="https://www.patreon.com/todepond">deserves our support</a>. Also, Lu Wilson (the human behind TodePond) has their own <em>programming language that will not be named on podcasts</em>, <a href="https://github.com/TodePond/DreamBerd">DreamBerd</a>, which uses the ! to great effect. [Meta-commentary intentionally left blank.]</p> </li> </ul> <p>Some of the music featured in this episode:</p> <ul> <li><a href="https://www.youtube.com/watch?v=gSJeHDlhYls">All Caps</a> by MF DOOM and Madlib [I don’t even like it when other podcasts include music clips, but then away I go needle-dropping like I’ve got something to prove.]</li> <li>Various songs from Ivan’s old albums. [I need to update my website. I need to tweak my static site generator. I need to redesign all the CSS. I need to consider putting all my projects into a database so I can generate nicer indexes. I also need to make some new projects — especially music.]</li> </ul> <p>Get in touch, ask us questions, send us the sound of your knuckles cracking:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="mailto:admin@futureofcoding.org?subject=Question%20from%20an%20FoC%20Listener">Email</a> [If you don’t have something nice to say, know that I’m very sensitive and nurse wounds for a long time. Also, Nurse With Wound is great.]</li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://twitter.com/jimmyhmiller">Twitter</a> [Jimmy doesn’t write these notes so I don’t know what he’s thinking, but I can imagine: a horse galloping in the wind, Jimmy riding shirtless on the horse, Jimmy holding a gigantic tome of philosophical wisdom in one hand, the other outstretched before him, words of revelation flowing from his mouth like honey, “Ivan, the setup to this joke was lame”]</li> <li>Or just DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a>. [&lt;3]</li> </ul> <p><a href="https://futureofcoding.org/episodes/064">https://futureofcoding.org/episodes/064</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>This is a normal episode of a podcast called Future of Coding. We talk about <a href="https://en.wikipedia.org/wiki/INTERCAL">INTERCAL</a>, a real tool for computer programming. [Do I need to say more? Will this sell it? Most people won’t have heard of INTERCAL, but I think the fake out “normal” is enough to draw their attention. Also, I find “computer programming” funny. Not sure why I put that in quotes.]</p> <p>Links [at least, the ones I remembered to jot down]<a href="https://futureofcoding.org/episodes/064#links-at-least-the-ones-i-remembered-to-jot-down" aria-label="Anchor" data-anchorjs-icon=""></a></p> <ul> <li> <p>The final <a href="https://thestrangeloop.com/">Strange Loop</a> is coming up this September. Ivan and Jimmy will both be there, though—late breaking news—neither of them will be giving a talk. (“Rocket Rules” apply, if you know what that is.) [Will anyone actually know what “Rocket Rules” is? Will they search for it? That would be sort of embarrassing for me.]</p> </li> <li> <p>If Ivan were to give a programming talk, getting some <a href="https://ivanish.ca/a-d/">flood-contaminated gear</a> from <a href="https://en.wikipedia.org/wiki/Digital_Equipment_Corporation">DEC</a> or a <a href="https://en.wikipedia.org/wiki/PDP-11">PDP-11</a> to use as <a href="https://en.wikipedia.org/wiki/Staging_(theatre,_film,_television)">staging / set dressing</a> might be a challenge. [Yay, another retread of my personal history. Maybe instead of dredging up my past I should be the sort of person who makes new things, like, ever.]</p> </li> <li> <p><a href="https://www.youtube.com/watch?v=HJRjomY6xyc">Meowmeowbeenz</a> [Gah this show hasn’t aged well. At least I’m sticking to the whole “high-brow + low-brow” personal identity by including the reference to it. [Is “meta” low-brow at this point?]]</p> </li> <li> <p>There’s lots of talk about esolangs (esoteric programming languages), so it’s worth linking the <a href="https://esolangs.org/">Esolang Wiki</a>. [I worry that we spent too much time focusing on surface syntax. Jimmy tried to get us to talk about the beautifully-weird semantics within INTERCAL, but we never fully went there. I’m sure some people will complain about this lack of depth. Not looking forward to that.]</p> </li> <li> <p>In particular, <a href="https://en.wikipedia.org/wiki/Brainfuck">Brainfuck</a>, which Jimmy adorably refers to as “BF” because he’s a polite gentleman and Ivan is 2% South Park. [Laughing at my own joke.]</p> </li> <li> <p>Also, <a href="https://esolangs.org/wiki/Shakespeare">Shakespeare</a> and Shakespeare: <a href="https://archive.org/details/macbethtragedy00shak_0/page/42/mode/2up?ref=ol&amp;view=theater&amp;q=vaulting">vaulting ambition</a>, <a href="https://archive.org/details/macbethtragedy00shak_0/page/114/mode/2up?ref=ol&amp;view=theater&amp;q=%22Out%2C+damned+fpot%3B+out%2C+I+fay%22">Out, damned spot</a>, both from the Scottish play (you don’t know where I am, don’t @ me). [Why are these in the show notes? Am I trying to signal some sort of theatre-literacy? Who cares?]</p> </li> <li> <p>“<a href="https://en.wikipedia.org/wiki/COMEFROM">COMEFROM</a> was eventually implemented in the C-INTERCAL variant of the esoteric programming language INTERCAL” [Considering that this was such a non-element in the original paper, it’s weird that it became such a cornerstone of the episode. “What if we recreated the spirit of the paper in the podcast itself” is a tall order, so I guess we did what we could with what we had. Also, I bet someone is going to object that the paper and language aren’t actually very <em>meta</em>, especially not multiple layers deep, to which I’ll reply: we all bring the flavour of our mouth to the soup we taste.]</p> </li> <li> <p><a href="http://www.zachtronics.com/exapunks/">Exapunks</a>… <a href="https://futureofcoding.org/episodes/056">Yeah!</a> [Speaking of things that haven’t aged well… woof. I like our newer episodes better. Especially this one. THAT’S JUST BAIT FOR THE PEOPLE WHO WILL COMPLAIN THAT THIS SHOW HAS GONE OFF THE RAILS, PLEASE DO CONTINUE TO LISTEN TO THE SHOW.]</p> </li> <li> <p>Our tier list was created in <a href="https://www.tldraw.com/">tldraw</a>, because it’s the best. [I wish someone applied Steve-and-co’s eye for detail to a visual programming tool. I wish I had time.]</p> </li> <li> <p>The excellent <a href="https://adventofcomputing.com/">Advent of Computing</a> podcast did an <a href="https://adventofcomputing.com/?guid=5d5dc806-ddd9-4f99-aae3-76cadca1ad9f">episode on INTERCAL</a>. (Aside: the AoC website seems a bit busted in non-Chrome browsers, so here’s a backup <a href="https://www.youtube.com/watch?v=dCIF44AqkEA">YouTube link</a>, but you can also just search for Advent of Computing in your podcast player of choice.) [AoC is the exception that proves the rule: there are no high-quality programming podcasts. They all seem so low-effort, made by people who don’t respect the listener’s time and attention. Or they’re aping the high-budget NPR style, with no personality. Also, audio quality is all over the map. Also, just the worst garbage ads and theme music, all of them! I wonder if it’s just a cost-benefit time/energy tradeoff, or maybe people don’t know <em>how</em> to do better? I wonder what we could do to help raise the bar, without opening ourselves up to a bunch of “well I don’t like your podcast either” presumed competitiveness.]</p> </li> <li> <p>The video <a href="https://www.youtube.com/watch?v=Q4OIcwt8vcE">Screens in Screens in Screens</a> is fantastic, and the sort of thing that <a href="https://www.patreon.com/todepond">deserves our support</a>. Also, Lu Wilson (the human behind TodePond) has their own <em>programming language that will not be named on podcasts</em>, <a href="https://github.com/TodePond/DreamBerd">DreamBerd</a>, which uses the ! to great effect. [Meta-commentary intentionally left blank.]</p> </li> </ul> <p>Some of the music featured in this episode:</p> <ul> <li><a href="https://www.youtube.com/watch?v=gSJeHDlhYls">All Caps</a> by MF DOOM and Madlib [I don’t even like it when other podcasts include music clips, but then away I go needle-dropping like I’ve got something to prove.]</li> <li>Various songs from Ivan’s old albums. [I need to update my website. I need to tweak my static site generator. I need to redesign all the CSS. I need to consider putting all my projects into a database so I can generate nicer indexes. I also need to make some new projects — especially music.]</li> </ul> <p>Get in touch, ask us questions, send us the sound of your knuckles cracking:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="mailto:admin@futureofcoding.org?subject=Question%20from%20an%20FoC%20Listener">Email</a> [If you don’t have something nice to say, know that I’m very sensitive and nurse wounds for a long time. Also, Nurse With Wound is great.]</li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://twitter.com/jimmyhmiller">Twitter</a> [Jimmy doesn’t write these notes so I don’t know what he’s thinking, but I can imagine: a horse galloping in the wind, Jimmy riding shirtless on the horse, Jimmy holding a gigantic tome of philosophical wisdom in one hand, the other outstretched before him, words of revelation flowing from his mouth like honey, “Ivan, the setup to this joke was lame”]</li> <li>Or just DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a>. [&lt;3]</li> </ul> <p><a href="https://futureofcoding.org/episodes/064">https://futureofcoding.org/episodes/064</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/e0a4eef1-97d4-49ef-922f-b014002e1313/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/intercal-by-donald-woods-and-james-lyon/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">e0a4eef1-97d4-49ef-922f-b014002e1313</guid>
      <omny:clipId>e0a4eef1-97d4-49ef-922f-b014002e1313</omny:clipId>
      <pubDate>Thu, 01 Jun 2023 03:08:26 +0000</pubDate>
      <itunes:duration>6854</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/e0a4eef1-97d4-49ef-922f-b014002e1313/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="109687971" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/intercal-by-donald-woods-and-james-lyon</link>
    </item>
    <item>
      <title>Out of the Tar Pit by Ben Moseley &amp; Peter Marks</title>
      <itunes:title>Out of the Tar Pit by Ben Moseley &amp; Peter Marks</itunes:title>
      <description><![CDATA[<p><a href="https://moss.cs.iit.edu/cs100/papers/out-of-the-tar-pit.pdf">Out of the Tar Pit</a> is in the grand pantheon of great papers, beloved the world over, with just <em>so much influence</em>. The resurgence of Functional Programming over the past decade owes its very existence to the Tar Pit’s snarling takedown of mutable state, championed by Hickey &amp; The Cloj-Co. Many a budding computational philosophizer — both of yours truly counted among them — have been led onward to the late great <a href="https://futureofcoding.org/episodes/062">Bro86</a> by this paper’s borrow of his <em>essence</em> and <em>accident</em>. But is the paper <em>actually</em> good? Like, really — is it <em>that</em> good? Does it hold up to the blinding light of hindsight that 2023 offers? Is this episode actually an April Fools joke, or is it a serious episode that Ivan just delayed by a few weeks because of life circumstances and his own incoherent sense of humour? I can’t tell.</p> <p>Apologies in advance. Next time, we’re going back to our usual format to discuss <a href="https://en.wikipedia.org/wiki/INTERCAL">Intercal</a>.</p> <p>Links<a href="https://futureofcoding.org/episodes/063#links" aria-label="Anchor" data-anchorjs-icon=""></a></p> <ul> <li> <p>Before anything else, we need to link to <a href="https://www.youtube.com/watch?v=SxdOUGdseq4">Simple Made Easy</a>. If you don’t know, now you know! It’s a talk by <a href="https://en.wikipedia.org/wiki/Rich_Hickey">Rich Hickey</a> (creator of <a href="https://en.wikipedia.org/wiki/Clojure">Clojure</a>) that, as best as I can tell, widely popularized discussion of simplicity and complexity in programming, using Hickey’s own definitions that built upon the Tar Pit paper. Ignited by this talk, with flames fanned by a <a href="https://www.youtube.com/watch?v=Cym4TZwTCNU">few others</a>, as functional programming flared in popularity through the 2010s, the words “simple”, “easy”, “complex”, and “reason about” became absolutely raging memes.</p> </li> <li> <p>We also frequently reference Fred Brooks and his No Silver Bullet. <a href="https://futureofcoding.org/episodes/062">Our previous episode</a> has you covered.</p> </li> <li> <p>The two great languages of the early internet era: <a href="https://en.wikipedia.org/wiki/Perl">Perl</a> &amp; <a href="https://en.wikipedia.org/wiki/Tcl">TcL</a></p> </li> <li> <p>For more on Ivan’s “BLTC paradise-engineering wombat chocolate”, see our episode on <a href="https://futureofcoding.org/episodes/056">Augmenting Human Intellect</a>, if you dare.</p> </li> <li> <p>For more on Jimmy’s “Satoshi”, see <a href="https://en.wikipedia.org/wiki/Satoshi_Nakamoto">Satoshi Nakamoto</a>, of course.</p> </li> <li> <p>And for <a href="https://en.wikipedia.org/wiki/Anonymous_(hacker_group)">Anonymous</a>, go on.</p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Enemy_of_the_State_(film)">Enemy of the State</a> — This film slaps.</p> </li> <li> <p>“Some people prefer not to commingle the functional, lambda-calculus part of a language with the parts that do side effects. It seems they believe in the separation of Church and state.” — <a href="https://en.wikipedia.org/wiki/Guy_L._Steele_Jr.">Guy Steele</a></p> </li> <li> <p><a href="https://www.youtube.com/watch?v=xDAsABdkWSc">“my tempo”</a></p> </li> <li> <p>FoC Challenge: Brooks claimed 4 evils lay at the heart of programming — Complexity, Conformity, Changeability, and Invisibility. Could you design <em>a programming</em> that had a different set of four evils at the heart of it? (Bonus: one of which could encompass the others and become the ur-evil)</p> </li> <li> <p>The paper introduces something called Functional Relational Programming, abbreviated FRP. Note well, and do not be confused, that there is a much more important and common term that also abbreviates to FRP: <a href="https://en.wikipedia.org/wiki/Family_resource_program">Family Resource Program</a>. Slightly less common, but yet more important and relevant to our interests as computer scientists, is the <a href="https://en.wikipedia.org/wiki/Fluorescence_recovery_protein">Fluorescence Recovery Protein</a> in cyanobacteria. Less abundant, but again more relevant, is <a href="https://en.wikipedia.org/wiki/Role-playing_game">Fantasy Role-Playing</a>, a technology with which we’ve all surely developed a high degree of expertise. For fans of international standards, see ISO 639-3 — the <a href="https://en.wikipedia.org/wiki/Franco-Proven%C3%A7al">Franco-Provençal</a> language, represented by language code frp. As we approach the finality of this paragraph, I’ll crucially point out that “FRP”, when spoken aloud all at once at though it were a word, sounds quite like the word <em>frp</em>, which isn’t actually a word — you’ve fallen right into my trap. Least importantly of all, and also most obscurely, and with only minor interest or relevance to listeners of the podcast and readers of this paragraph, we have the <a href="https://en.wikipedia.org/wiki/Functional_reactive_programming">Functional Reactive Programming</a> paradigm originally coined by <a href="https://futureofcoding.org/episodes/058">Conor Oberst</a> and then coopted by rapscallions who waste time down by the pier playing <a href="https://rxmarbles.com/">marbles</a>.</p> </li> <li> <p>FoC Challenge: Can you come up with <em>a programming</em> where informal reasoning doesn’t help? Where you are lost, you are without hope, and you need to get some kind of help <em>other than reasoning</em> to get through it?</p> </li> <li><a href="https://en.wikipedia.org/wiki/Linear_B">Linear B</a></li> <li><a href="https://linearb.io/">LinearB</a></li> <li><a href="https://en.wikipedia.org/wiki/INTERCAL">Intercal</a></li> <li> <p><a href="https://esolangs.org/wiki/Main_Page">Esolangs</a></p> </li> <li>FoC Challenge: Can you come up with <em>a kind of testing</em> where using a particular set of inputs does tell you something about the system/component when it is given a different set of inputs?</li> </ul> <ul> <li> <p>It was <em>not</em> <a href="https://en.wikipedia.org/wiki/Epimenides">Epimenides</a> who said “You can’t dip your little toesies into the same stream” two times — presumably because he only said it once.</p> </li> <li> <p><a href="https://ziglang.org/">Zig</a> has a nicely explicit approach to memory allocation.</p> </li> <li> <p>FoC Challenge: A programming where more things are explicit — building on the example of Zig’s explicit allocators.</p> </li> <li> <p>Non-ergonomic, Non-von Neumann, <a href="https://www.youtube.com/watch?v=9p_Si21ig7c">Nonagon Infinity</a></p> </li> <li>One of Ivan’s favourite musical acts of the 00s is the ever-shapeshifting <a href="https://en.wikipedia.org/wiki/Animal_Collective">Animal Collective</a> — <em>of course 🙄</em>. If you’ve never heard of them, the best album to start with is probably the avant-pop <a href="https://en.wikipedia.org/wiki/Feels_(album)">Feels</a>, though their near-breakthrough was the loop-centric <a href="https://en.wikipedia.org/wiki/Merriweather_Post_Pavilion_(album)">Merriweather Post Pavilion</a>, and Ivan’s personal favourite is, as of this writing, the tender psychedelic folk of <a href="https://en.wikipedia.org/wiki/Prospect_Hummer">Prospect Hummer</a>.</li> </ul> <p>Jimmy’s Philosophy Corner</p> <ul> <li>To learn more about possible worlds (“not all possibilities are possible”), take a look at the SEP articles on <a href="https://plato.stanford.edu/entries/possible-worlds/">Possible Worlds</a>, <a href="https://plato.stanford.edu/entries/logic-modal/">Modal Logic</a>, <a href="https://plato.stanford.edu/entries/modality-varieties/">Varieties of Modality</a>, and the book <a href="https://www.amazon.com/Naming-Necessity-Saul-Kripke/dp/0631128018">Naming and Necessity</a> by Saul Kripke.</li> <li> <p>For more on abstract objects (“do programs exist? do numbers exist?”), see the SEPs on <a href="https://plato.stanford.edu/entries/platonism/">Platonism in Metaphysics</a>, <a href="https://plato.stanford.edu/entries/nominalism-metaphysics/">Nominalism in Metaphysics</a>, and the paper titled <a href="https://andrewmbailey.com/pvi/Theory_of_Properties.pdf">A Theory of Properties</a> by Peter van Inwagen.</p> </li> </ul> <p>Music featured in this episode:</p> <ul> <li>Jimmy’s Philosophy Corner got a new stinger. No link, sorry. Why does this feel like a changelog?</li> </ul> <p>Get in touch, ask us questions, send us old family recipes:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="mailto:ivanreese@gmail.com?subject=Question%20from%20an%20FoC%20Listener">Email</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://twitter.com/jimmyhmiller">Twitter</a></li> <li>Or just DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a>.</li> </ul> <p><a href="https://futureofcoding.org/episodes/063">https://futureofcoding.org/episodes/063</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><a href="https://moss.cs.iit.edu/cs100/papers/out-of-the-tar-pit.pdf">Out of the Tar Pit</a> is in the grand pantheon of great papers, beloved the world over, with just <em>so much influence</em>. The resurgence of Functional Programming over the past decade owes its very existence to the Tar Pit’s snarling takedown of mutable state, championed by Hickey &amp; The Cloj-Co. Many a budding computational philosophizer — both of yours truly counted among them — have been led onward to the late great <a href="https://futureofcoding.org/episodes/062">Bro86</a> by this paper’s borrow of his <em>essence</em> and <em>accident</em>. But is the paper <em>actually</em> good? Like, really — is it <em>that</em> good? Does it hold up to the blinding light of hindsight that 2023 offers? Is this episode actually an April Fools joke, or is it a serious episode that Ivan just delayed by a few weeks because of life circumstances and his own incoherent sense of humour? I can’t tell.</p> <p>Apologies in advance. Next time, we’re going back to our usual format to discuss <a href="https://en.wikipedia.org/wiki/INTERCAL">Intercal</a>.</p> <p>Links<a href="https://futureofcoding.org/episodes/063#links" aria-label="Anchor" data-anchorjs-icon=""></a></p> <ul> <li> <p>Before anything else, we need to link to <a href="https://www.youtube.com/watch?v=SxdOUGdseq4">Simple Made Easy</a>. If you don’t know, now you know! It’s a talk by <a href="https://en.wikipedia.org/wiki/Rich_Hickey">Rich Hickey</a> (creator of <a href="https://en.wikipedia.org/wiki/Clojure">Clojure</a>) that, as best as I can tell, widely popularized discussion of simplicity and complexity in programming, using Hickey’s own definitions that built upon the Tar Pit paper. Ignited by this talk, with flames fanned by a <a href="https://www.youtube.com/watch?v=Cym4TZwTCNU">few others</a>, as functional programming flared in popularity through the 2010s, the words “simple”, “easy”, “complex”, and “reason about” became absolutely raging memes.</p> </li> <li> <p>We also frequently reference Fred Brooks and his No Silver Bullet. <a href="https://futureofcoding.org/episodes/062">Our previous episode</a> has you covered.</p> </li> <li> <p>The two great languages of the early internet era: <a href="https://en.wikipedia.org/wiki/Perl">Perl</a> &amp; <a href="https://en.wikipedia.org/wiki/Tcl">TcL</a></p> </li> <li> <p>For more on Ivan’s “BLTC paradise-engineering wombat chocolate”, see our episode on <a href="https://futureofcoding.org/episodes/056">Augmenting Human Intellect</a>, if you dare.</p> </li> <li> <p>For more on Jimmy’s “Satoshi”, see <a href="https://en.wikipedia.org/wiki/Satoshi_Nakamoto">Satoshi Nakamoto</a>, of course.</p> </li> <li> <p>And for <a href="https://en.wikipedia.org/wiki/Anonymous_(hacker_group)">Anonymous</a>, go on.</p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Enemy_of_the_State_(film)">Enemy of the State</a> — This film slaps.</p> </li> <li> <p>“Some people prefer not to commingle the functional, lambda-calculus part of a language with the parts that do side effects. It seems they believe in the separation of Church and state.” — <a href="https://en.wikipedia.org/wiki/Guy_L._Steele_Jr.">Guy Steele</a></p> </li> <li> <p><a href="https://www.youtube.com/watch?v=xDAsABdkWSc">“my tempo”</a></p> </li> <li> <p>FoC Challenge: Brooks claimed 4 evils lay at the heart of programming — Complexity, Conformity, Changeability, and Invisibility. Could you design <em>a programming</em> that had a different set of four evils at the heart of it? (Bonus: one of which could encompass the others and become the ur-evil)</p> </li> <li> <p>The paper introduces something called Functional Relational Programming, abbreviated FRP. Note well, and do not be confused, that there is a much more important and common term that also abbreviates to FRP: <a href="https://en.wikipedia.org/wiki/Family_resource_program">Family Resource Program</a>. Slightly less common, but yet more important and relevant to our interests as computer scientists, is the <a href="https://en.wikipedia.org/wiki/Fluorescence_recovery_protein">Fluorescence Recovery Protein</a> in cyanobacteria. Less abundant, but again more relevant, is <a href="https://en.wikipedia.org/wiki/Role-playing_game">Fantasy Role-Playing</a>, a technology with which we’ve all surely developed a high degree of expertise. For fans of international standards, see ISO 639-3 — the <a href="https://en.wikipedia.org/wiki/Franco-Proven%C3%A7al">Franco-Provençal</a> language, represented by language code frp. As we approach the finality of this paragraph, I’ll crucially point out that “FRP”, when spoken aloud all at once at though it were a word, sounds quite like the word <em>frp</em>, which isn’t actually a word — you’ve fallen right into my trap. Least importantly of all, and also most obscurely, and with only minor interest or relevance to listeners of the podcast and readers of this paragraph, we have the <a href="https://en.wikipedia.org/wiki/Functional_reactive_programming">Functional Reactive Programming</a> paradigm originally coined by <a href="https://futureofcoding.org/episodes/058">Conor Oberst</a> and then coopted by rapscallions who waste time down by the pier playing <a href="https://rxmarbles.com/">marbles</a>.</p> </li> <li> <p>FoC Challenge: Can you come up with <em>a programming</em> where informal reasoning doesn’t help? Where you are lost, you are without hope, and you need to get some kind of help <em>other than reasoning</em> to get through it?</p> </li> <li><a href="https://en.wikipedia.org/wiki/Linear_B">Linear B</a></li> <li><a href="https://linearb.io/">LinearB</a></li> <li><a href="https://en.wikipedia.org/wiki/INTERCAL">Intercal</a></li> <li> <p><a href="https://esolangs.org/wiki/Main_Page">Esolangs</a></p> </li> <li>FoC Challenge: Can you come up with <em>a kind of testing</em> where using a particular set of inputs does tell you something about the system/component when it is given a different set of inputs?</li> </ul> <ul> <li> <p>It was <em>not</em> <a href="https://en.wikipedia.org/wiki/Epimenides">Epimenides</a> who said “You can’t dip your little toesies into the same stream” two times — presumably because he only said it once.</p> </li> <li> <p><a href="https://ziglang.org/">Zig</a> has a nicely explicit approach to memory allocation.</p> </li> <li> <p>FoC Challenge: A programming where more things are explicit — building on the example of Zig’s explicit allocators.</p> </li> <li> <p>Non-ergonomic, Non-von Neumann, <a href="https://www.youtube.com/watch?v=9p_Si21ig7c">Nonagon Infinity</a></p> </li> <li>One of Ivan’s favourite musical acts of the 00s is the ever-shapeshifting <a href="https://en.wikipedia.org/wiki/Animal_Collective">Animal Collective</a> — <em>of course 🙄</em>. If you’ve never heard of them, the best album to start with is probably the avant-pop <a href="https://en.wikipedia.org/wiki/Feels_(album)">Feels</a>, though their near-breakthrough was the loop-centric <a href="https://en.wikipedia.org/wiki/Merriweather_Post_Pavilion_(album)">Merriweather Post Pavilion</a>, and Ivan’s personal favourite is, as of this writing, the tender psychedelic folk of <a href="https://en.wikipedia.org/wiki/Prospect_Hummer">Prospect Hummer</a>.</li> </ul> <p>Jimmy’s Philosophy Corner</p> <ul> <li>To learn more about possible worlds (“not all possibilities are possible”), take a look at the SEP articles on <a href="https://plato.stanford.edu/entries/possible-worlds/">Possible Worlds</a>, <a href="https://plato.stanford.edu/entries/logic-modal/">Modal Logic</a>, <a href="https://plato.stanford.edu/entries/modality-varieties/">Varieties of Modality</a>, and the book <a href="https://www.amazon.com/Naming-Necessity-Saul-Kripke/dp/0631128018">Naming and Necessity</a> by Saul Kripke.</li> <li> <p>For more on abstract objects (“do programs exist? do numbers exist?”), see the SEPs on <a href="https://plato.stanford.edu/entries/platonism/">Platonism in Metaphysics</a>, <a href="https://plato.stanford.edu/entries/nominalism-metaphysics/">Nominalism in Metaphysics</a>, and the paper titled <a href="https://andrewmbailey.com/pvi/Theory_of_Properties.pdf">A Theory of Properties</a> by Peter van Inwagen.</p> </li> </ul> <p>Music featured in this episode:</p> <ul> <li>Jimmy’s Philosophy Corner got a new stinger. No link, sorry. Why does this feel like a changelog?</li> </ul> <p>Get in touch, ask us questions, send us old family recipes:</p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="mailto:ivanreese@gmail.com?subject=Question%20from%20an%20FoC%20Listener">Email</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://twitter.com/jimmyhmiller">Twitter</a></li> <li>Or just DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a>.</li> </ul> <p><a href="https://futureofcoding.org/episodes/063">https://futureofcoding.org/episodes/063</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/8ffb57b9-5454-47fa-b20c-afd7011ee68f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/out-of-the-tar-pit-by-ben-moseley-and-peter-marks/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">8ffb57b9-5454-47fa-b20c-afd7011ee68f</guid>
      <omny:clipId>8ffb57b9-5454-47fa-b20c-afd7011ee68f</omny:clipId>
      <pubDate>Sat, 01 Apr 2023 17:36:04 +0000</pubDate>
      <itunes:duration>8386</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/8ffb57b9-5454-47fa-b20c-afd7011ee68f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="134189166" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/out-of-the-tar-pit-by-ben-moseley-and-peter-marks</link>
    </item>
    <item>
      <title>No Silver Bullet by Fred Brooks</title>
      <itunes:title>No Silver Bullet by Fred Brooks</itunes:title>
      <description><![CDATA[<p>Jimmy and I have each read <a href="https://en.wikipedia.org/wiki/No_Silver_Bullet">this paper</a> a handful of times, and each time our impressions have flip-flopped between "hate it so much" and "damn that's good". There really are two sides to this one. Two reads, both fair, both worth discussing: one of them within "the frame", and one of them outside "the frame". So given that larger-than-normal surface for discursive traversal, it's no surprise that this episode is, just, like, <em>intimidatingly</em> long. This one is <em>so, so </em>long, friends. See these withered muscles and pale skin? That's how much time I spent in Ableton Live this month. I just want to see my family.</p> <p>No matter how you feel about Brooks, our thorough deconstruction down to the nuts and bolts of this seminal classic will leave you holding a ziplock bag full of cool air and wondering to yourself, "Wait, <em>this</em> is philosophy? And <em>this </em>is the future we were promised? Well, I guess I'd better go program a computer now before it's too late and I never exist."</p> <p>For the next episode, we're reading <a href="https://moss.cs.iit.edu/cs100/papers/out-of-the-tar-pit.pdf">a fish wearing a bathrobe</a>.</p> <p>Sorry, it's late and I'm sick, and I have to write <em>something</em>, you know?</p> <p><strong>Links:</strong></p> <ul> <li> <p>Fred Brooks also wrote the <a href="https://en.wikipedia.org/wiki/The_Mythical_Man-Month">Mythical Man-Month</a>, which we considered also discussing on this episode but <em>thank goodness</em> we didn't.</p> </li> <li> <p>Also, Fred Brooks passed away recently. We didn't mention it on the show, but it's worth remarking upon. RIP, and thanks for fighting the good fight, Fred. I still think you're wrong about spatial programming, but Jimmy agrees with you, so you can probably rest easy since between the two of us he's definitely the more in touch with the meaning of life.</p> </li> <li> <p>The <a href="https://oxide.computer/podcasts/oxide-and-friends">Oxide and Friends</a> podcast recorded an <a href="https://oxide.computer/podcasts/oxide-and-friends/1166714">episode of predictions</a>.</p> </li> <li> <p>Jimmy’s <a href="https://en.wikipedia.org/wiki/Aphantasia">Aphantasia</a> motivates some of his desire for FoC tools.</p> </li> <li> <p>Don’t miss the <a href="/episodes/061">previous episode</a> on Peter Naur’s Programming as Theory Building, since Ivan references it whilst digging his own grave.</p> </li> <li> <p>Jimmy uses <a href="https://museapp.com/">Muse</a> for his notes, so he can highlight important things in two colors — yes, two colors at the same time. Living in the future.</p> </li> <li> <p>For the Shadow of the Colossus link, here’s an <a href="https://www.youtube.com/watch?app=desktop&amp;v=2aLZH4ti-Hc">incredible speedrun</a> of the game. Skip to <a href="https://www.youtube.com/watch?v=2aLZH4ti-Hc&amp;t=620s">10:20</a>-ish for a great <em>programming is like standing on the shoulders of a trembling giant</em> moment.</p> </li> <li> <p><a href="https://github.com/akkartik/mu">Mu</a> is a project by <a href="http://akkartik.name/">Kartik Agaram</a>, in which he strips computing down to the studs and rebuilds it with a more intentional design. “Running the code you want to run, and nothing else.”</p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/The_Flop_House">“Is it a good-bad movie, a bad-bad movie, or a movie you kinda liked?”</a></p> </li> <li> <p>Ivan did some <a href="https://plato.stanford.edu/entries/essential-accidental/">research</a>. Really wish Marco and Casey didn't let him.</p> </li> <li> <p>Jimmy did an <a href="https://en.wikipedia.org/wiki/Pathfinder_Roleplaying_Game">attack action</a> so as to be rid of Brook’s awful invisibility nonsense. Awful.</p> </li> <li> <p>As promised, <a href="https://www.youtube.com/watch?v=TM9h89Vo_Qo">here’s a link</a> in <a href="/episodes/062">the show notes</a> to something something Brian Cantrill, Moore’s Law, <a href="https://youtu.be/U8JUueSakiA?t=128">Bryan Adams</a>, something something.</p> </li> <li> <p><a href="https://dynamicland.org/">Dynamicland</a>, baby!</p> </li> <li> <p>Here’s <a href="https://twitter.com/spiantado/status/1599462375887114240">just one example of the racist, sexist results</a> that current AI tools produce when you train them on <em>the internet</em>. Garbage in, garbage out — a real tar pit. AI tools aren’t for deciding <em>what</em> to say; at best, they’ll help with <em>how</em> to say it.</p> </li> <li> <p><a href="https://www.graycrawford.com/">Gray Crawford</a> is one of the first people I saw posting ML prompts what feels like an eternity ago, back when the results all looked like blurry goop but like… blurry goop <em>with potential</em>.</p> </li> <li> <p>Not sure of a good link for Jimmy’s reference that Age of Empires II used expert systems for the AI, but <a href="https://www.youtube.com/watch?v=-S1CkfzEHSU">here’s a video</a> that talks about the AI in the game and even shows some Lisp code.</p> </li> <li> <p><a href="https://www.idris-lang.org/">Idris</a> is a language that has a bit of an “automatic programming” feel.</p> </li> <li> <p><a href="https://ivanish.ca/hest-podcast/">The visual programming that shall not be named.</a></p> </li> <li> <p>When people started putting massive numbers of transistors into a single chip (eg: CPU, RAM, etc) they called that process <a href="https://en.wikipedia.org/wiki/Very_Large_Scale_Integration">Very Large Scale Integration (VLSI)</a>. Also, remember that scene in the first episode of <a href="https://en.wikipedia.org/wiki/Halt_and_Catch_Fire_(TV_series)">Halt and Catch Fire</a> when the hunky Steve Jobs-looking guy said <a href="https://youtu.be/A1390o5FgHU?t=21">"VLSI"</a> to impress the girl from <a href="https://www.polygon.com/2016/10/28/13452942/black-mirror-season-3-san-junipero-ending">the only good episode</a> of Black Mirror? I'm still cringing.</p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Sally_Haslanger">Sally Haslanger</a> is a modern day philosopher and feminist who works with accident and essence despite their problematic past.</p> </li> </ul> <p><strong>Music featured in this episode:</strong></p> <ul> <li><a href="https://ivanish.ca/never">Never</a>, a song I wrote and recorded on Tuesday after finally cleaning my disgusting wind organ. It was like <a href="https://i.ytimg.com/vi/ox6D7yUszcc/maxresdefault.jpg">Hollow Knight</a> in there.</li> </ul> <p><strong>Get in touch, ask us questions, send us old family recipes:</strong></p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="mailto:ivanreese@gmail.com?subject=Question%20from%20an%20FoC%20Listener">Email</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://twitter.com/jimmyhmiller">Twitter</a></li> <li>Or just DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a>.</li> </ul> <p><a href="https://futureofcoding.org/episodes/062">futureofcoding.org/episodes/062</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Jimmy and I have each read <a href="https://en.wikipedia.org/wiki/No_Silver_Bullet">this paper</a> a handful of times, and each time our impressions have flip-flopped between "hate it so much" and "damn that's good". There really are two sides to this one. Two reads, both fair, both worth discussing: one of them within "the frame", and one of them outside "the frame". So given that larger-than-normal surface for discursive traversal, it's no surprise that this episode is, just, like, <em>intimidatingly</em> long. This one is <em>so, so </em>long, friends. See these withered muscles and pale skin? That's how much time I spent in Ableton Live this month. I just want to see my family.</p> <p>No matter how you feel about Brooks, our thorough deconstruction down to the nuts and bolts of this seminal classic will leave you holding a ziplock bag full of cool air and wondering to yourself, "Wait, <em>this</em> is philosophy? And <em>this </em>is the future we were promised? Well, I guess I'd better go program a computer now before it's too late and I never exist."</p> <p>For the next episode, we're reading <a href="https://moss.cs.iit.edu/cs100/papers/out-of-the-tar-pit.pdf">a fish wearing a bathrobe</a>.</p> <p>Sorry, it's late and I'm sick, and I have to write <em>something</em>, you know?</p> <p><strong>Links:</strong></p> <ul> <li> <p>Fred Brooks also wrote the <a href="https://en.wikipedia.org/wiki/The_Mythical_Man-Month">Mythical Man-Month</a>, which we considered also discussing on this episode but <em>thank goodness</em> we didn't.</p> </li> <li> <p>Also, Fred Brooks passed away recently. We didn't mention it on the show, but it's worth remarking upon. RIP, and thanks for fighting the good fight, Fred. I still think you're wrong about spatial programming, but Jimmy agrees with you, so you can probably rest easy since between the two of us he's definitely the more in touch with the meaning of life.</p> </li> <li> <p>The <a href="https://oxide.computer/podcasts/oxide-and-friends">Oxide and Friends</a> podcast recorded an <a href="https://oxide.computer/podcasts/oxide-and-friends/1166714">episode of predictions</a>.</p> </li> <li> <p>Jimmy’s <a href="https://en.wikipedia.org/wiki/Aphantasia">Aphantasia</a> motivates some of his desire for FoC tools.</p> </li> <li> <p>Don’t miss the <a href="/episodes/061">previous episode</a> on Peter Naur’s Programming as Theory Building, since Ivan references it whilst digging his own grave.</p> </li> <li> <p>Jimmy uses <a href="https://museapp.com/">Muse</a> for his notes, so he can highlight important things in two colors — yes, two colors at the same time. Living in the future.</p> </li> <li> <p>For the Shadow of the Colossus link, here’s an <a href="https://www.youtube.com/watch?app=desktop&amp;v=2aLZH4ti-Hc">incredible speedrun</a> of the game. Skip to <a href="https://www.youtube.com/watch?v=2aLZH4ti-Hc&amp;t=620s">10:20</a>-ish for a great <em>programming is like standing on the shoulders of a trembling giant</em> moment.</p> </li> <li> <p><a href="https://github.com/akkartik/mu">Mu</a> is a project by <a href="http://akkartik.name/">Kartik Agaram</a>, in which he strips computing down to the studs and rebuilds it with a more intentional design. “Running the code you want to run, and nothing else.”</p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/The_Flop_House">“Is it a good-bad movie, a bad-bad movie, or a movie you kinda liked?”</a></p> </li> <li> <p>Ivan did some <a href="https://plato.stanford.edu/entries/essential-accidental/">research</a>. Really wish Marco and Casey didn't let him.</p> </li> <li> <p>Jimmy did an <a href="https://en.wikipedia.org/wiki/Pathfinder_Roleplaying_Game">attack action</a> so as to be rid of Brook’s awful invisibility nonsense. Awful.</p> </li> <li> <p>As promised, <a href="https://www.youtube.com/watch?v=TM9h89Vo_Qo">here’s a link</a> in <a href="/episodes/062">the show notes</a> to something something Brian Cantrill, Moore’s Law, <a href="https://youtu.be/U8JUueSakiA?t=128">Bryan Adams</a>, something something.</p> </li> <li> <p><a href="https://dynamicland.org/">Dynamicland</a>, baby!</p> </li> <li> <p>Here’s <a href="https://twitter.com/spiantado/status/1599462375887114240">just one example of the racist, sexist results</a> that current AI tools produce when you train them on <em>the internet</em>. Garbage in, garbage out — a real tar pit. AI tools aren’t for deciding <em>what</em> to say; at best, they’ll help with <em>how</em> to say it.</p> </li> <li> <p><a href="https://www.graycrawford.com/">Gray Crawford</a> is one of the first people I saw posting ML prompts what feels like an eternity ago, back when the results all looked like blurry goop but like… blurry goop <em>with potential</em>.</p> </li> <li> <p>Not sure of a good link for Jimmy’s reference that Age of Empires II used expert systems for the AI, but <a href="https://www.youtube.com/watch?v=-S1CkfzEHSU">here’s a video</a> that talks about the AI in the game and even shows some Lisp code.</p> </li> <li> <p><a href="https://www.idris-lang.org/">Idris</a> is a language that has a bit of an “automatic programming” feel.</p> </li> <li> <p><a href="https://ivanish.ca/hest-podcast/">The visual programming that shall not be named.</a></p> </li> <li> <p>When people started putting massive numbers of transistors into a single chip (eg: CPU, RAM, etc) they called that process <a href="https://en.wikipedia.org/wiki/Very_Large_Scale_Integration">Very Large Scale Integration (VLSI)</a>. Also, remember that scene in the first episode of <a href="https://en.wikipedia.org/wiki/Halt_and_Catch_Fire_(TV_series)">Halt and Catch Fire</a> when the hunky Steve Jobs-looking guy said <a href="https://youtu.be/A1390o5FgHU?t=21">"VLSI"</a> to impress the girl from <a href="https://www.polygon.com/2016/10/28/13452942/black-mirror-season-3-san-junipero-ending">the only good episode</a> of Black Mirror? I'm still cringing.</p> </li> <li> <p><a href="https://en.wikipedia.org/wiki/Sally_Haslanger">Sally Haslanger</a> is a modern day philosopher and feminist who works with accident and essence despite their problematic past.</p> </li> </ul> <p><strong>Music featured in this episode:</strong></p> <ul> <li><a href="https://ivanish.ca/never">Never</a>, a song I wrote and recorded on Tuesday after finally cleaning my disgusting wind organ. It was like <a href="https://i.ytimg.com/vi/ox6D7yUszcc/maxresdefault.jpg">Hollow Knight</a> in there.</li> </ul> <p><strong>Get in touch, ask us questions, send us old family recipes:</strong></p> <ul> <li>Ivan: <a href="https://mastodon.social/@spiralganglion">Mastodon</a> • <a href="mailto:ivanreese@gmail.com?subject=Question%20from%20an%20FoC%20Listener">Email</a></li> <li>Jimmy: <a href="https://hachyderm.io/@jimmyhmiller">Mastodon</a> • <a href="https://twitter.com/jimmyhmiller">Twitter</a></li> <li>Or just DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a>.</li> </ul> <p><a href="https://futureofcoding.org/episodes/062">futureofcoding.org/episodes/062</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/c1492f9a-db61-4db4-b9b8-afa60060918d/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/no-silver-bullet-by-fred-brooks/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">c1492f9a-db61-4db4-b9b8-afa60060918d</guid>
      <omny:clipId>c1492f9a-db61-4db4-b9b8-afa60060918d</omny:clipId>
      <pubDate>Sat, 11 Feb 2023 21:19:04 +0000</pubDate>
      <itunes:duration>10817</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/c1492f9a-db61-4db4-b9b8-afa60060918d/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="173089029" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/no-silver-bullet-by-fred-brooks</link>
    </item>
    <item>
      <title>Programming as Theory Building by Peter Naur</title>
      <itunes:title>Programming as Theory Building by Peter Naur</itunes:title>
      <description><![CDATA[<p>This is Jimmy’s favourite paper! Here’s a <a href="https://gist.github.com/onlurking/fc5c81d18cfce9ff81bc968a7f342fb1">copy</a> someone posted on HitBug. Is it as good as the original? Likely not! Ivan also enjoyed this Theory Building business immensely; don’t be fooled by the liberal use of the “blonk” censor-tone to cover the galleon-hold of swearwords he let slip, those mostly pertain to the <a href="https://en.wikipedia.org/wiki/The_Concept_of_Mind">Ryle</a>.</p> <p>For the next episode, we’re reading <a href="https://en.wikipedia.org/wiki/No_Silver_Bullet">No Silver Bullet</a> by Fred Brooks.</p> <p><strong>Links</strong><a href="https://futureofcoding.org/episodes/061#links" aria-label="Anchor" data-anchorjs-icon=""></a></p> <p><a href="http://the-witness.net/">The Witness</a>, again!</p> <p><a href="https://medium.com/@wm/the-generation-ship-model-of-software-development-5ef89a74854b">The Generation Ship Model of Software Development</a></p> <p>The <a href="https://suckless.org/philosophy/">philosophy</a> of suckless.org</p> <p><a href="https://jackrusher.com/strange-loop-2022/">Stop Writing Dead Programs</a>, a talk by Jack Rusher, gets a whole new meaning!</p> <p>Someone <a href="https://www.youtube.com/watch?v=t_rzYnXEQlE">rewrote Super Mario 64’s code</a> to run faster and better on original N64 hardware.</p> <p>Music featured in this episode:</p> <ul> <li><a href="https://www.youtube.com/watch?v=KLk45tpMnU0">Speed x Distance = Time</a> by Blonde Redhead from the album <a href="https://en.wikipedia.org/wiki/In_an_Expression_of_the_Inexpressible">In an Expression of the Inexpressible</a> which, upon reflection, is actually not Ivan’s favourite. That’d be <a href="https://en.wikipedia.org/wiki/Melody_of_Certain_Damaged_Lemons">Melody of Certain Damaged Lemons</a>.</li> </ul> <p>Hey listener! Send us questions so we can answer them on the show. Like, “How do you turn your worms?” Or, “What’s so great about prepromorphisms anyway?” We’ll answer them, honest! Send them here:</p> <ul> <li><a href="mailto:ivanreese@gmail.com?subject=Question%20from%20an%20FoC%20Listener">Ivan</a></li> <li><a href="http://twitter.com/jimmyhmiller">Jimmy</a></li> <li>Or just DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a>.</li> </ul> <p><a href="https://futureofcoding.org/episodes/061">futureofcoding.org/episodes/061</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>This is Jimmy’s favourite paper! Here’s a <a href="https://gist.github.com/onlurking/fc5c81d18cfce9ff81bc968a7f342fb1">copy</a> someone posted on HitBug. Is it as good as the original? Likely not! Ivan also enjoyed this Theory Building business immensely; don’t be fooled by the liberal use of the “blonk” censor-tone to cover the galleon-hold of swearwords he let slip, those mostly pertain to the <a href="https://en.wikipedia.org/wiki/The_Concept_of_Mind">Ryle</a>.</p> <p>For the next episode, we’re reading <a href="https://en.wikipedia.org/wiki/No_Silver_Bullet">No Silver Bullet</a> by Fred Brooks.</p> <p><strong>Links</strong><a href="https://futureofcoding.org/episodes/061#links" aria-label="Anchor" data-anchorjs-icon=""></a></p> <p><a href="http://the-witness.net/">The Witness</a>, again!</p> <p><a href="https://medium.com/@wm/the-generation-ship-model-of-software-development-5ef89a74854b">The Generation Ship Model of Software Development</a></p> <p>The <a href="https://suckless.org/philosophy/">philosophy</a> of suckless.org</p> <p><a href="https://jackrusher.com/strange-loop-2022/">Stop Writing Dead Programs</a>, a talk by Jack Rusher, gets a whole new meaning!</p> <p>Someone <a href="https://www.youtube.com/watch?v=t_rzYnXEQlE">rewrote Super Mario 64’s code</a> to run faster and better on original N64 hardware.</p> <p>Music featured in this episode:</p> <ul> <li><a href="https://www.youtube.com/watch?v=KLk45tpMnU0">Speed x Distance = Time</a> by Blonde Redhead from the album <a href="https://en.wikipedia.org/wiki/In_an_Expression_of_the_Inexpressible">In an Expression of the Inexpressible</a> which, upon reflection, is actually not Ivan’s favourite. That’d be <a href="https://en.wikipedia.org/wiki/Melody_of_Certain_Damaged_Lemons">Melody of Certain Damaged Lemons</a>.</li> </ul> <p>Hey listener! Send us questions so we can answer them on the show. Like, “How do you turn your worms?” Or, “What’s so great about prepromorphisms anyway?” We’ll answer them, honest! Send them here:</p> <ul> <li><a href="mailto:ivanreese@gmail.com?subject=Question%20from%20an%20FoC%20Listener">Ivan</a></li> <li><a href="http://twitter.com/jimmyhmiller">Jimmy</a></li> <li>Or just DM us in the <a href="https://futureofcoding.org/community">FoC Slack</a>.</li> </ul> <p><a href="https://futureofcoding.org/episodes/061">futureofcoding.org/episodes/061</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/4394b675-d3d6-4431-a51c-af820161f0a7/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/programming-as-theory-building-by-peter-naur/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">4394b675-d3d6-4431-a51c-af820161f0a7</guid>
      <omny:clipId>4394b675-d3d6-4431-a51c-af820161f0a7</omny:clipId>
      <pubDate>Fri, 06 Jan 2023 21:50:02 +0000</pubDate>
      <itunes:duration>6905</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/4394b675-d3d6-4431-a51c-af820161f0a7/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="110494588" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/programming-as-theory-building-by-peter-naur</link>
    </item>
    <item>
      <title>Magic Ink by Bret Victor</title>
      <itunes:title>Magic Ink by Bret Victor</itunes:title>
      <description><![CDATA[<p>Before the time-travelling talks, the programmable rooms, the ladders and rocket launchers, we had the first real Bret Victor essay: <a href="http://worrydream.com/MagicInk/">Magic Ink</a>. It set the stage for Bret's later explorations, breaking down the very idea of "software" into a few key pieces and interrogating them with his distinct focus, then clearly demoing a way we could all just <em>do it better</em>. All of Bret's works feel simultaneously like an anguished cry and a call to arms, and this essay is no exception.</p> <p>For the next episode, we're reading <em>Programming as Theory Building</em> by Peter Naur, with a little bit of Gilbert Ryle's <em>The Concept of Mind</em> thrown in for good measure.</p> <p><strong>Links</strong></p> <p>Four Hundred of the most Chart-Topping Thoughts of All Time:</p> <ul> <li><a href="https://www.youtube.com/watch?v=EGqwXt90ZqA">Inventing On Principal</a></li> <li><a href="https://vimeo.com/64895205">Stop Drawing Dead Fish</a></li> <li><a href="https://vimeo.com/66085662">Drawing Dynamic Visualizations</a></li> <li><a href="https://dynamicland.org/">Dynamicland</a></li> </ul> <p><a href="https://paperprograms.org/">Paper Programs</a> by JP Posma was inspired by Dynamicland.</p> <p><a href="https://www.youtube.com/watch?v=QeY_5n75zPM">"Computers aren't <em>the thing</em>. They're the thing that gets us to <em>the thing</em>."</a> from <a href="https://en.wikipedia.org/wiki/Halt_and_Catch_Fire_(TV_series)">Halt and Catch Fire</a></p> <p><a href="https://charticulator.com/">Charticulator</a> is Microsoft Research's take on a _Drawing Dynamic Visualizations_-esq tool.</p> <p>Jimmy's Fender Jazz bass <a href="https://www.fender.com/en-US/electric-basses/jazz-bass/player-jazz-bass/0149902506.html">looks like this</a>, but red, but like a decade older, but like $600 at the time.</p> <p>We could probably post parts of this episode as <a href="https://www.youtube.com/results?search_query=boyfriend+roleplay">Boyfriend Roleplay</a> on YouTube.</p> <p><a href="https://en.wikipedia.org/wiki/Fitts's_law">Fitts's Law</a> is but one thing we've learned about the industrial design aspect of building good software.</p> <p><a href="http://the-witness.net/">The Witness</a> is a game where communicating ideas through (essentially) graphic design is the <em>whole entire point</em> of the game. If you haven't played it, know that it comes highly recommended by plenty of folks in the community.</p> <p>A "red letter Bible" is a Bible in which the words spoken by Jesus are colored red, to make them easier to identify.</p> <p>Toph Tucker has a pretty cool <a href="https://www.tophtucker.com/">personal website</a>. It's rare to see these sorts of sites nowadays, and they're always made by adventuresome programmers, trendy design agencies, or their clients. In the Flash era, it felt like <em>everyone</em> had a website like this, for better and for worse.</p> <p><a href="https://github.com/tldraw/tldraw">tldraw</a> is a beautiful little browser-based <a href="http://tldraw.com/">drawing tool</a> by <a href="https://www.steveruiz.me/">Steve Ruiz</a>. What few things it does, it does exceptionally well.</p> <p><a href="https://en.wikipedia.org/wiki/James_while_John_had_had_had_had_had_had_had_had_had_had_had_a_better_effect_on_the_teacher">John while Henry had had had had had had had had had been my preference</a>.</p> <p><a href="https://futureofcoding.slack.com/archives/C03RR0W5DGC">#devlog-together</a> is the channel on our Future of Coding slack community where members post small, frequent updates about what they're working on.</p> <p>The <a href="https://www.andy.works/">(Not Boring)</a> apps are arguably a counterpoint to Bret's theses about information apps and harmful interaction, where the interaction and graphic design are balanced against being maximally-informative, toward being silly and superfluous, to great effect.</p> <p>Did you know there's a <a href="https://en.wikipedia.org/wiki/Hobby_horse_(toy)">hobby horse</a>, but also a <a href="https://en.wikipedia.org/wiki/Hobby_horse">hobby horse</a>? I didn't!</p> <p>There are a few examples of folks doing FoC work that, in Ivan's view, align well with the values Bret outlines in Magic Ink:</p> <ul> <li><a href="https://szymonkaliski.com/">Szymon Kaliski</a>'s projects for <a href="https://www.inkandswitch.com/">Ink &amp; Switch</a>, summarized in his Strange Loop talk, <a href="https://www.youtube.com/watch?v=ifYuvgXZ108">Programmable Ink</a>.</li> <li><a href="https://mockmechanics.com/">Mock Mechanics</a> is an environment for building mechanisms by <a href="https://github.com/felipereigosa">Felipe Reigosa</a>.</li> <li><a href="https://joshuahhh.com/projects/pane/">PANE</a> by <a href="https://joshuahhh.com/">Josh Horowitz</a> inverts the usual node-wire programming pattern by putting data in the nodes and data transformation in the wires.</li> </ul> <p><a href="https://en.wikipedia.org/wiki/Robot_Odyssey">Robot Odyssey</a> was a 1984 game for the Apple II (and some other, lesser systems) in which players would go inside various robots to reprogram them.</p> <p>Music featured in this episode:</p> <ul> <li>Wash Machine, from the <a href="https://ivanish.ca/sneaky-dances/">unfinished</a> 2014 album <a href="https://spiralganglion.bandcamp.com/album/sneaky-dances">Sneaky Dances</a></li> <li><a href="http://ivanish.ca/shauns-amaj-rebirth">Shaun's Amaj Rebirth</a>, created in November 2022 for a friend named — you guessed it — Shaun.</li> </ul> <p>Hey! Send us questions we can answer on the show. Like, "How do you keep bread warm?" Or, "What's so great about concatenative languages?" We'll answer them. Send them here:</p> <ul> <li><a href="http://twitter.com/jimmyhmiller">Jimmy</a></li> <li><a href="http://twitter.com/spiralganglion">Ivan</a></li> <li>Or just DM one of us in the <a href="https://futureofcoding.org/community">FoC Slack</a>.</li> </ul> <p><a href="https://futureofcoding.org/episodes/060">futureofcoding.org/episodes/060</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Before the time-travelling talks, the programmable rooms, the ladders and rocket launchers, we had the first real Bret Victor essay: <a href="http://worrydream.com/MagicInk/">Magic Ink</a>. It set the stage for Bret's later explorations, breaking down the very idea of "software" into a few key pieces and interrogating them with his distinct focus, then clearly demoing a way we could all just <em>do it better</em>. All of Bret's works feel simultaneously like an anguished cry and a call to arms, and this essay is no exception.</p> <p>For the next episode, we're reading <em>Programming as Theory Building</em> by Peter Naur, with a little bit of Gilbert Ryle's <em>The Concept of Mind</em> thrown in for good measure.</p> <p><strong>Links</strong></p> <p>Four Hundred of the most Chart-Topping Thoughts of All Time:</p> <ul> <li><a href="https://www.youtube.com/watch?v=EGqwXt90ZqA">Inventing On Principal</a></li> <li><a href="https://vimeo.com/64895205">Stop Drawing Dead Fish</a></li> <li><a href="https://vimeo.com/66085662">Drawing Dynamic Visualizations</a></li> <li><a href="https://dynamicland.org/">Dynamicland</a></li> </ul> <p><a href="https://paperprograms.org/">Paper Programs</a> by JP Posma was inspired by Dynamicland.</p> <p><a href="https://www.youtube.com/watch?v=QeY_5n75zPM">"Computers aren't <em>the thing</em>. They're the thing that gets us to <em>the thing</em>."</a> from <a href="https://en.wikipedia.org/wiki/Halt_and_Catch_Fire_(TV_series)">Halt and Catch Fire</a></p> <p><a href="https://charticulator.com/">Charticulator</a> is Microsoft Research's take on a _Drawing Dynamic Visualizations_-esq tool.</p> <p>Jimmy's Fender Jazz bass <a href="https://www.fender.com/en-US/electric-basses/jazz-bass/player-jazz-bass/0149902506.html">looks like this</a>, but red, but like a decade older, but like $600 at the time.</p> <p>We could probably post parts of this episode as <a href="https://www.youtube.com/results?search_query=boyfriend+roleplay">Boyfriend Roleplay</a> on YouTube.</p> <p><a href="https://en.wikipedia.org/wiki/Fitts's_law">Fitts's Law</a> is but one thing we've learned about the industrial design aspect of building good software.</p> <p><a href="http://the-witness.net/">The Witness</a> is a game where communicating ideas through (essentially) graphic design is the <em>whole entire point</em> of the game. If you haven't played it, know that it comes highly recommended by plenty of folks in the community.</p> <p>A "red letter Bible" is a Bible in which the words spoken by Jesus are colored red, to make them easier to identify.</p> <p>Toph Tucker has a pretty cool <a href="https://www.tophtucker.com/">personal website</a>. It's rare to see these sorts of sites nowadays, and they're always made by adventuresome programmers, trendy design agencies, or their clients. In the Flash era, it felt like <em>everyone</em> had a website like this, for better and for worse.</p> <p><a href="https://github.com/tldraw/tldraw">tldraw</a> is a beautiful little browser-based <a href="http://tldraw.com/">drawing tool</a> by <a href="https://www.steveruiz.me/">Steve Ruiz</a>. What few things it does, it does exceptionally well.</p> <p><a href="https://en.wikipedia.org/wiki/James_while_John_had_had_had_had_had_had_had_had_had_had_had_a_better_effect_on_the_teacher">John while Henry had had had had had had had had had been my preference</a>.</p> <p><a href="https://futureofcoding.slack.com/archives/C03RR0W5DGC">#devlog-together</a> is the channel on our Future of Coding slack community where members post small, frequent updates about what they're working on.</p> <p>The <a href="https://www.andy.works/">(Not Boring)</a> apps are arguably a counterpoint to Bret's theses about information apps and harmful interaction, where the interaction and graphic design are balanced against being maximally-informative, toward being silly and superfluous, to great effect.</p> <p>Did you know there's a <a href="https://en.wikipedia.org/wiki/Hobby_horse_(toy)">hobby horse</a>, but also a <a href="https://en.wikipedia.org/wiki/Hobby_horse">hobby horse</a>? I didn't!</p> <p>There are a few examples of folks doing FoC work that, in Ivan's view, align well with the values Bret outlines in Magic Ink:</p> <ul> <li><a href="https://szymonkaliski.com/">Szymon Kaliski</a>'s projects for <a href="https://www.inkandswitch.com/">Ink &amp; Switch</a>, summarized in his Strange Loop talk, <a href="https://www.youtube.com/watch?v=ifYuvgXZ108">Programmable Ink</a>.</li> <li><a href="https://mockmechanics.com/">Mock Mechanics</a> is an environment for building mechanisms by <a href="https://github.com/felipereigosa">Felipe Reigosa</a>.</li> <li><a href="https://joshuahhh.com/projects/pane/">PANE</a> by <a href="https://joshuahhh.com/">Josh Horowitz</a> inverts the usual node-wire programming pattern by putting data in the nodes and data transformation in the wires.</li> </ul> <p><a href="https://en.wikipedia.org/wiki/Robot_Odyssey">Robot Odyssey</a> was a 1984 game for the Apple II (and some other, lesser systems) in which players would go inside various robots to reprogram them.</p> <p>Music featured in this episode:</p> <ul> <li>Wash Machine, from the <a href="https://ivanish.ca/sneaky-dances/">unfinished</a> 2014 album <a href="https://spiralganglion.bandcamp.com/album/sneaky-dances">Sneaky Dances</a></li> <li><a href="http://ivanish.ca/shauns-amaj-rebirth">Shaun's Amaj Rebirth</a>, created in November 2022 for a friend named — you guessed it — Shaun.</li> </ul> <p>Hey! Send us questions we can answer on the show. Like, "How do you keep bread warm?" Or, "What's so great about concatenative languages?" We'll answer them. Send them here:</p> <ul> <li><a href="http://twitter.com/jimmyhmiller">Jimmy</a></li> <li><a href="http://twitter.com/spiralganglion">Ivan</a></li> <li>Or just DM one of us in the <a href="https://futureofcoding.org/community">FoC Slack</a>.</li> </ul> <p><a href="https://futureofcoding.org/episodes/060">futureofcoding.org/episodes/060</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/fe4f7043-8366-4c83-a403-af650157994d/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/magic-ink-by-bret-victor/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">fe4f7043-8366-4c83-a403-af650157994d</guid>
      <omny:clipId>fe4f7043-8366-4c83-a403-af650157994d</omny:clipId>
      <pubDate>Thu, 08 Dec 2022 21:38:19 +0000</pubDate>
      <itunes:duration>8407</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/fe4f7043-8366-4c83-a403-af650157994d/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="134533124" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/magic-ink-by-bret-victor</link>
    </item>
    <item>
      <title>Worse is Better by Richard P. Gabriel</title>
      <itunes:title>Worse is Better by Richard P. Gabriel</itunes:title>
      <description><![CDATA[<p>Following our <a href="https://futureofcoding.org/episodes/058">previous episode</a> on Richard P. Gabriel's <em>Incommensurability</em> paper, we're back for round two with an analysis of what we've dubbed the <em>Worse is Better family of thought products:</em></p> <ol> <li><a href="https://dreamsongs.com/RiseOfWorseIsBetter.html">The Rise of Worse Is Better</a> by Richard P. Gabriel</li> <li><a href="https://www.dreamsongs.com/Files/worse-is-worse.pdf">Worse is Better is Worse</a> by Nickieben Bourbaki</li> <li><a href="https://www.dreamsongs.com/Files/IsWorseReallyBetter.pdf">Is Worse Really Better?</a> by Richard P. Gabriel</li> </ol> <p>Next episode, we've got a recent work by a real up-and-comer in the field. While you may not have heard of him yet, he's a promising young lad who's sure to become a household name.</p> <ul> <li><a href="http://worrydream.com/MagicInk/">Magic Ink</a> by Bret Victor</li> </ul> <p><strong>Links</strong></p> <ul> <li> <p>The <a href="https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_security_cs_allow-jit">JIT entitlement</a> on iOS is a thing that exists now.</p> </li> <li> <p>Please, call me Nickieben — <a href="https://en.wikipedia.org/wiki/Nicolas_Bourbaki">Mr. Bourbaki</a> is my father.</p> </li> <li> <p>A <a href="https://en.wikipedia.org/wiki/Pony">pony</a> is a small <a href="https://en.wikipedia.org/wiki/Horse">horse</a>. Also, horses have one toe.</p> </li> <li> <p><a href="https://www.electronjs.org/">Electron</a> lets you build cross-platform apps using web technologies. The apps you build in it are, arguably, doing a bit of "worse is better" when compared to equivalent native apps.</p> </li> <li> <p><a href="https://bun.sh/">Bun</a> is a new JS runner that competes somewhat with NodeJS and Deno, and is arguably an example of "worse is better".</p> </li> <li> <p><a href="https://esbuild.github.io/">esbuild</a> and <a href="https://swc.rs/">swc</a> are JS build tools, and are compared to the earlier <a href="https://babeljs.io/">Babel</a>.</p> </li> <li> <p>The graphs showing the relative lack of churn in Clojure's source code came from Rich Hickey's <a href="https://www.youtube.com/watch?v=nD-QHbRWcoM">A History of Clojure</a> talk. To see those graphs, head over to the FoC website for the <a href="https://futureofcoding.org/episodes/059">expanded version of these show notes</a>.</p> </li> <li>Some thoughts about <a href="https://futureofcoding.slack.com/channels/wormholes">wormholes</a>.</li> </ul> <p><a href="https://futureofcoding.org/episodes/059">futureofcoding.org/episodes/059</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Following our <a href="https://futureofcoding.org/episodes/058">previous episode</a> on Richard P. Gabriel's <em>Incommensurability</em> paper, we're back for round two with an analysis of what we've dubbed the <em>Worse is Better family of thought products:</em></p> <ol> <li><a href="https://dreamsongs.com/RiseOfWorseIsBetter.html">The Rise of Worse Is Better</a> by Richard P. Gabriel</li> <li><a href="https://www.dreamsongs.com/Files/worse-is-worse.pdf">Worse is Better is Worse</a> by Nickieben Bourbaki</li> <li><a href="https://www.dreamsongs.com/Files/IsWorseReallyBetter.pdf">Is Worse Really Better?</a> by Richard P. Gabriel</li> </ol> <p>Next episode, we've got a recent work by a real up-and-comer in the field. While you may not have heard of him yet, he's a promising young lad who's sure to become a household name.</p> <ul> <li><a href="http://worrydream.com/MagicInk/">Magic Ink</a> by Bret Victor</li> </ul> <p><strong>Links</strong></p> <ul> <li> <p>The <a href="https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_security_cs_allow-jit">JIT entitlement</a> on iOS is a thing that exists now.</p> </li> <li> <p>Please, call me Nickieben — <a href="https://en.wikipedia.org/wiki/Nicolas_Bourbaki">Mr. Bourbaki</a> is my father.</p> </li> <li> <p>A <a href="https://en.wikipedia.org/wiki/Pony">pony</a> is a small <a href="https://en.wikipedia.org/wiki/Horse">horse</a>. Also, horses have one toe.</p> </li> <li> <p><a href="https://www.electronjs.org/">Electron</a> lets you build cross-platform apps using web technologies. The apps you build in it are, arguably, doing a bit of "worse is better" when compared to equivalent native apps.</p> </li> <li> <p><a href="https://bun.sh/">Bun</a> is a new JS runner that competes somewhat with NodeJS and Deno, and is arguably an example of "worse is better".</p> </li> <li> <p><a href="https://esbuild.github.io/">esbuild</a> and <a href="https://swc.rs/">swc</a> are JS build tools, and are compared to the earlier <a href="https://babeljs.io/">Babel</a>.</p> </li> <li> <p>The graphs showing the relative lack of churn in Clojure's source code came from Rich Hickey's <a href="https://www.youtube.com/watch?v=nD-QHbRWcoM">A History of Clojure</a> talk. To see those graphs, head over to the FoC website for the <a href="https://futureofcoding.org/episodes/059">expanded version of these show notes</a>.</p> </li> <li>Some thoughts about <a href="https://futureofcoding.slack.com/channels/wormholes">wormholes</a>.</li> </ul> <p><a href="https://futureofcoding.org/episodes/059">futureofcoding.org/episodes/059</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ae0f5f60-7ad6-4695-806f-af3e001ead8b/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/worse-is-better-by-richard-p-gabriel/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">ae0f5f60-7ad6-4695-806f-af3e001ead8b</guid>
      <omny:clipId>ae0f5f60-7ad6-4695-806f-af3e001ead8b</omny:clipId>
      <pubDate>Sun, 30 Oct 2022 01:59:01 +0000</pubDate>
      <itunes:duration>4396</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ae0f5f60-7ad6-4695-806f-af3e001ead8b/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="70353200" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/worse-is-better-by-richard-p-gabriel</link>
      <itunes:explicit>clean</itunes:explicit>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Worse is Better by Richard P. Gabriel" />
        <psc:chapter start="01:09:00" title="Wormhole" />
      </psc:chapters>
    </item>
    <item>
      <title>Structure of a Programming Language Revolution by Richard P. Gabriel</title>
      <itunes:title>Structure of a Programming Language Revolution by Richard P. Gabriel</itunes:title>
      <description><![CDATA[<p>Today we're discussing the so-called "incommensurability" paper: <a href="https://dreamsongs.com/Files/Incommensurability.pdf">The Structure of a Programming Language Revolution</a> by <a href="https://dreamsongs.com/">Richard P. Gabriel</a>.</p> <p>In the pre-show, Jimmy demands that Ivan come right out and explain himself, and so he does, to a certain extent at least. In the post-show, Jimmy draws such a thick line between programming and philosophy that it wouldn't even look out of place on Groucho Marx's face.</p> <p>Next episode, we will be covering the <em>Worse is Better family of thought products</em>, so take 15 minutes to read these three absolute bangers if you'd like to be ahead of the game:</p> <ul> <li><a href="https://dreamsongs.com/RiseOfWorseIsBetter.html">The Rise of Worse is Better</a> by Richard P. Gabriel</li> <li><a href="https://www.dreamsongs.com/Files/worse-is-worse.pdf">Worse is Better is Worse</a>, definitely not by Richard P. Gabriel</li> <li><a href="https://www.dreamsongs.com/Files/IsWorseReallyBetter.pdf">Is Worse Really Better?</a> by Richard P. Gabriel</li> </ul> <p><strong>Links</strong></p> <ul> <li><a href="https://en.wikipedia.org/wiki/Phlogiston_theory">Phlogiston Theory</a></li> <li><a href="https://phlogiston.bandcamp.com/">Phlogiston</a> the excellent chiptune musician.</li> <li><a href="https://www.youtube.com/watch?v=xUBYzpCNQ1I">Bright Eyes - First Day of My Life</a>, by <a href="https://en.wikipedia.org/wiki/Conor_Oberst">Conor Oberst</a>.</li> <li>Not to be confused with <a href="http://conal.net/">Conal Elliott</a>, who introduced the original meaning of functional reactive programming in his work on <a href="http://conal.net/papers/icfp97/icfp97.pdf">Fran</a>.</li> <li><a href="https://www.youtube.com/watch?v=3xZmlUV8muY">Peter Gabriel - Games Without Frontiers</a></li> <li><a href="https://dspace.mit.edu/bitstream/handle/1721.1/6905/AITR-221.pdf">Pilot: A Step Toward Man-Computer Symbiosis</a></li> <li>Jimmy's talk <a href="https://www.youtube.com/watch?v=TkPy7aLTtAw">Paradigms Without Progress: Kuhnian Reflections on Programming Practice</a></li> <li>There's some sporadic discussion of Philip Wadler (who Ivan playfully calls "Phil"), specifically his claim that <a href="https://youtu.be/IOiZatlZtGU?t=1660">programming languages have some bits that are invented and some bits that are discovered</a>. While we're here, make sure you've seen <a href="https://youtu.be/IOiZatlZtGU?t=2012">the best 15 seconds in Strange Loop history</a>.</li> <li><a href="https://pages.cs.wisc.edu/~remzi/Naur.pdf">Peter Naur's Programming as Theory Building</a></li> </ul> <p><strong>Sponsors</strong></p> <p>CarrotGrid — They don't have a web presence (weird, hey?) but they're working on an interesting problem at the intersection of data, so listen to the short ad in the episode to find out more.</p> <p><a href="https://tiltify.com/@futureofcoding/future-of-coding">St. Jude Children's Research Hospital</a> — Instead of running our usual sponsors today, we'd like to direct your attention to this humanitarian cause. September is Childhood Cancer Awareness Month, and our friends (can we call them that?) at <a href="https://relay.fm/">Relay.fm</a> are running a pledge drive. If you have any spare coins in your couch cushions, or a few million left over from your last exit, you'd be hard pressed to find a more deserving way to invest them. <a href="https://tiltify.com/@futureofcoding/future-of-coding">Donate here.</a></p> <p>Show notes for this episode can be found at <a href="https://futureofcoding.org/episodes/58">futureofcoding.org/episodes/58</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Today we're discussing the so-called "incommensurability" paper: <a href="https://dreamsongs.com/Files/Incommensurability.pdf">The Structure of a Programming Language Revolution</a> by <a href="https://dreamsongs.com/">Richard P. Gabriel</a>.</p> <p>In the pre-show, Jimmy demands that Ivan come right out and explain himself, and so he does, to a certain extent at least. In the post-show, Jimmy draws such a thick line between programming and philosophy that it wouldn't even look out of place on Groucho Marx's face.</p> <p>Next episode, we will be covering the <em>Worse is Better family of thought products</em>, so take 15 minutes to read these three absolute bangers if you'd like to be ahead of the game:</p> <ul> <li><a href="https://dreamsongs.com/RiseOfWorseIsBetter.html">The Rise of Worse is Better</a> by Richard P. Gabriel</li> <li><a href="https://www.dreamsongs.com/Files/worse-is-worse.pdf">Worse is Better is Worse</a>, definitely not by Richard P. Gabriel</li> <li><a href="https://www.dreamsongs.com/Files/IsWorseReallyBetter.pdf">Is Worse Really Better?</a> by Richard P. Gabriel</li> </ul> <p><strong>Links</strong></p> <ul> <li><a href="https://en.wikipedia.org/wiki/Phlogiston_theory">Phlogiston Theory</a></li> <li><a href="https://phlogiston.bandcamp.com/">Phlogiston</a> the excellent chiptune musician.</li> <li><a href="https://www.youtube.com/watch?v=xUBYzpCNQ1I">Bright Eyes - First Day of My Life</a>, by <a href="https://en.wikipedia.org/wiki/Conor_Oberst">Conor Oberst</a>.</li> <li>Not to be confused with <a href="http://conal.net/">Conal Elliott</a>, who introduced the original meaning of functional reactive programming in his work on <a href="http://conal.net/papers/icfp97/icfp97.pdf">Fran</a>.</li> <li><a href="https://www.youtube.com/watch?v=3xZmlUV8muY">Peter Gabriel - Games Without Frontiers</a></li> <li><a href="https://dspace.mit.edu/bitstream/handle/1721.1/6905/AITR-221.pdf">Pilot: A Step Toward Man-Computer Symbiosis</a></li> <li>Jimmy's talk <a href="https://www.youtube.com/watch?v=TkPy7aLTtAw">Paradigms Without Progress: Kuhnian Reflections on Programming Practice</a></li> <li>There's some sporadic discussion of Philip Wadler (who Ivan playfully calls "Phil"), specifically his claim that <a href="https://youtu.be/IOiZatlZtGU?t=1660">programming languages have some bits that are invented and some bits that are discovered</a>. While we're here, make sure you've seen <a href="https://youtu.be/IOiZatlZtGU?t=2012">the best 15 seconds in Strange Loop history</a>.</li> <li><a href="https://pages.cs.wisc.edu/~remzi/Naur.pdf">Peter Naur's Programming as Theory Building</a></li> </ul> <p><strong>Sponsors</strong></p> <p>CarrotGrid — They don't have a web presence (weird, hey?) but they're working on an interesting problem at the intersection of data, so listen to the short ad in the episode to find out more.</p> <p><a href="https://tiltify.com/@futureofcoding/future-of-coding">St. Jude Children's Research Hospital</a> — Instead of running our usual sponsors today, we'd like to direct your attention to this humanitarian cause. September is Childhood Cancer Awareness Month, and our friends (can we call them that?) at <a href="https://relay.fm/">Relay.fm</a> are running a pledge drive. If you have any spare coins in your couch cushions, or a few million left over from your last exit, you'd be hard pressed to find a more deserving way to invest them. <a href="https://tiltify.com/@futureofcoding/future-of-coding">Donate here.</a></p> <p>Show notes for this episode can be found at <a href="https://futureofcoding.org/episodes/58">futureofcoding.org/episodes/58</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/4dbc74e8-523d-4781-b0ea-af1600f86eeb/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/structure-of-a-programming-language-revolution-by-richard-p-gabriel/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">4dbc74e8-523d-4781-b0ea-af1600f86eeb</guid>
      <omny:clipId>4dbc74e8-523d-4781-b0ea-af1600f86eeb</omny:clipId>
      <pubDate>Tue, 20 Sep 2022 15:15:37 +0000</pubDate>
      <itunes:duration>7087</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/4dbc74e8-523d-4781-b0ea-af1600f86eeb/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="113413237" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/structure-of-a-programming-language-revolution-by-richard-p-gabriel</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Intro" />
        <psc:chapter start="00:05:45" title="Part 1" />
        <psc:chapter start="00:56:45" title="Sponsor: CarrotGrid" />
        <psc:chapter start="00:58:01" title="St. Jude Fundraiser" />
        <psc:chapter start="01:01:17" title="Part 2" />
        <psc:chapter start="01:57:05" title="So Long" />
      </psc:chapters>
    </item>
    <item>
      <title>Personal Dynamic Media by Alan Kay &amp; Adele Goldberg</title>
      <itunes:title>Personal Dynamic Media by Alan Kay &amp; Adele Goldberg</itunes:title>
      <description><![CDATA[<p>There once was a podcast episode. It was about a very special kind of book: the Dynabook. The podcast didn't know whether to be silly, or serious. Jimmy offered some thoughtful reflections, and Ivan stung him on the nose.</p> <p>Sponsored by Replit.com, who want to give you <a href="https://blog.replit.com/reasons-not-to-join-replit">some reasons not to join Replit</a>, and Theatre.js, who want to make beautiful tools for animating the web <a href="https://join.theatrejs.com">with you</a>.</p> <p><a href="https://futureofcoding.org/episodes/57">futureofcoding.org/episodes/57</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>There once was a podcast episode. It was about a very special kind of book: the Dynabook. The podcast didn't know whether to be silly, or serious. Jimmy offered some thoughtful reflections, and Ivan stung him on the nose.</p> <p>Sponsored by Replit.com, who want to give you <a href="https://blog.replit.com/reasons-not-to-join-replit">some reasons not to join Replit</a>, and Theatre.js, who want to make beautiful tools for animating the web <a href="https://join.theatrejs.com">with you</a>.</p> <p><a href="https://futureofcoding.org/episodes/57">futureofcoding.org/episodes/57</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/37a05f66-854c-48b6-ae70-aed60051d90a/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/personal-dynamic-media-by-alan-kay-adele-goldberg/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">37a05f66-854c-48b6-ae70-aed60051d90a</guid>
      <omny:clipId>37a05f66-854c-48b6-ae70-aed60051d90a</omny:clipId>
      <pubDate>Mon, 18 Jul 2022 15:35:46 +0000</pubDate>
      <itunes:duration>9903</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/37a05f66-854c-48b6-ae70-aed60051d90a/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="158463939" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/personal-dynamic-media-by-alan-kay-adele-goldberg</link>
      <itunes:explicit>clean</itunes:explicit>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Intro" />
        <psc:chapter start="00:23:43" title="Part 1" />
        <psc:chapter start="01:19:21" title="Sponsor: Replit.com" />
        <psc:chapter start="01:22:10" title="Part 2" />
        <psc:chapter start="01:34:58" title="The Bear Who Got Lost" />
        <psc:chapter start="02:05:43" title="Sponsor: Theatre.js" />
        <psc:chapter start="02:08:45" title="Part 3" />
        <psc:chapter start="02:41:05" title="So Long" />
      </psc:chapters>
    </item>
    <item>
      <title>Augmenting Human Intellect by Doug Engelbart</title>
      <itunes:title>Augmenting Human Intellect by Doug Engelbart</itunes:title>
      <description><![CDATA[<p>symbol-manipulation.com<br>collaboration.com<br>thought-experiments.org<br>behaviorism.com<br><a href="join.theatre.js">theatre.js</a><br>system.org<br>evolution.ca<br>pithy.com<br><a href="replit.com/jobs">replit.com</a><br>summary.co.uk<br>cringe.net<br><a href="futureofcoding.org/episodes/56">futureofcoding.org</a><br>programming.com</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>symbol-manipulation.com<br>collaboration.com<br>thought-experiments.org<br>behaviorism.com<br><a href="join.theatre.js">theatre.js</a><br>system.org<br>evolution.ca<br>pithy.com<br><a href="replit.com/jobs">replit.com</a><br>summary.co.uk<br>cringe.net<br><a href="futureofcoding.org/episodes/56">futureofcoding.org</a><br>programming.com</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/b908fe8d-3dd9-4525-98d9-aeac000a9c37/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/augmenting-human-intellect/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">b908fe8d-3dd9-4525-98d9-aeac000a9c37</guid>
      <omny:clipId>b908fe8d-3dd9-4525-98d9-aeac000a9c37</omny:clipId>
      <pubDate>Mon, 06 Jun 2022 01:17:05 +0000</pubDate>
      <itunes:duration>7895</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/b908fe8d-3dd9-4525-98d9-aeac000a9c37/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="126343259" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/augmenting-human-intellect</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Intro" />
        <psc:chapter start="00:09:50" title="Part 1" />
        <psc:chapter start="00:20:48" title="Sponsor: Theatre.js" />
        <psc:chapter start="00:22:40" title="Part 2" />
        <psc:chapter start="00:57:01" title="Sponsor: Replit.com" />
        <psc:chapter start="00:59:07" title="Part 3" />
        <psc:chapter start="02:10:02" title="So Long" />
      </psc:chapters>
    </item>
    <item>
      <title>Man-Computer Symbiosis by J.C.R. Licklider</title>
      <itunes:title>Man-Computer Symbiosis by J.C.R. Licklider</itunes:title>
      <description><![CDATA[<p><a href="https://twitter.com/jimmyhmiller">Jimmy Miller</a> joins the show as co-host. Together, we embark on a new series of episodes covering the most influential and interesting papers in the history of our field. Some of these papers led directly to where we are today, and their influence cannot be overstated. Others were overlooked or unloved in their day, and we revive them out of curiosity and wonder. A few even hint at an inspiring future we haven't yet achieved, placing them squarely in line with our community's goals. We give these papers all the respect and deep reflection they deserve and, perhaps, the occasional kick in the shins.</p> <p>Today's paper is titled <a href="https://en.wikipedia.org/wiki/Man-Computer_Symbiosis">Man-Computer Symbiosis</a>, authored by <a href="https://en.wikipedia.org/wiki/J._C._R._Licklider">J.C.R. "Licky" Licklider</a>&nbsp;in 1960. The title sure is outdated &mdash;&nbsp;but how have the <em>ideas</em> aged in the eternity since it was published? Listen on to hear your two hosts figure that out, and delight at just how wildly right and wrong some of its predictions turned out to be.</p> <p>Thank you to the following sponsors, all of whom are doing important work in our field, and all of whom want to hire you to do even more of it:</p> <ul> <li><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/join.theatrejs.com">Theatre.js</a> &mdash;&nbsp;Enabling designers to code, programmers to design &mdash; empowering everyone to create.</li> <li><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/glideapps.com/jobs">Glide</a> &mdash; Anyone can make their own apps, with a GUI builder backed by a spreadsheet.</li> <li><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/replit.com/jobs">Replit</a> &mdash; An online REPL-driven dev environment with all the batteries you could ask for.</li> </ul> <p>(I keep hearing about more and more people in our sphere landing jobs at these co's &mdash;&nbsp;high-fives all around!)</p> <p>Show notes for this episode can be found at <a href="https://futureofcoding.org/episodes/55">futureofcoding.org/episodes/55</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><a href="https://twitter.com/jimmyhmiller">Jimmy Miller</a> joins the show as co-host. Together, we embark on a new series of episodes covering the most influential and interesting papers in the history of our field. Some of these papers led directly to where we are today, and their influence cannot be overstated. Others were overlooked or unloved in their day, and we revive them out of curiosity and wonder. A few even hint at an inspiring future we haven't yet achieved, placing them squarely in line with our community's goals. We give these papers all the respect and deep reflection they deserve and, perhaps, the occasional kick in the shins.</p> <p>Today's paper is titled <a href="https://en.wikipedia.org/wiki/Man-Computer_Symbiosis">Man-Computer Symbiosis</a>, authored by <a href="https://en.wikipedia.org/wiki/J._C._R._Licklider">J.C.R. "Licky" Licklider</a>&nbsp;in 1960. The title sure is outdated &mdash;&nbsp;but how have the <em>ideas</em> aged in the eternity since it was published? Listen on to hear your two hosts figure that out, and delight at just how wildly right and wrong some of its predictions turned out to be.</p> <p>Thank you to the following sponsors, all of whom are doing important work in our field, and all of whom want to hire you to do even more of it:</p> <ul> <li><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/join.theatrejs.com">Theatre.js</a> &mdash;&nbsp;Enabling designers to code, programmers to design &mdash; empowering everyone to create.</li> <li><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/glideapps.com/jobs">Glide</a> &mdash; Anyone can make their own apps, with a GUI builder backed by a spreadsheet.</li> <li><a href="file:///Applications/iA%20Writer.app/Contents/Resources/Templates/Sans.iatemplate/Contents/Resources/replit.com/jobs">Replit</a> &mdash; An online REPL-driven dev environment with all the batteries you could ask for.</li> </ul> <p>(I keep hearing about more and more people in our sphere landing jobs at these co's &mdash;&nbsp;high-fives all around!)</p> <p>Show notes for this episode can be found at <a href="https://futureofcoding.org/episodes/55">futureofcoding.org/episodes/55</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/7ed076d3-3379-4863-8bb3-ae75005dd5e0/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/man-computer-symbiosis/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">7ed076d3-3379-4863-8bb3-ae75005dd5e0</guid>
      <omny:clipId>7ed076d3-3379-4863-8bb3-ae75005dd5e0</omny:clipId>
      <pubDate>Tue, 12 Apr 2022 05:54:58 +0000</pubDate>
      <itunes:duration>8603</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/7ed076d3-3379-4863-8bb3-ae75005dd5e0/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="137662769" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/man-computer-symbiosis</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Intro" />
        <psc:chapter start="00:05:45" title="Part 1" />
        <psc:chapter start="00:47:43" title="Sponsor: Theatre.js" />
        <psc:chapter start="00:52:33" title="Part 2" />
        <psc:chapter start="01:08:05" title="Sponsor: Glide" />
        <psc:chapter start="01:10:44" title="Part 3" />
        <psc:chapter start="01:45:58" title="Sponsor: Replit" />
        <psc:chapter start="01:49:41" title="Part 4" />
        <psc:chapter start="02:22:32" title="Outro" />
        <psc:chapter start="02:22:49" title="So Long" />
      </psc:chapters>
    </item>
    <item>
      <title>Ella Hoeppner: Vlojure</title>
      <itunes:title>Ella Hoeppner: Vlojure</itunes:title>
      <description><![CDATA[<p>Today's guest is <a href="https://www.ellahoeppner.com/">Ella Hoeppner</a>, who first came onto the radar of our community back in the fall when she released a web-based visual Clojure editor called <a href="https://vlojure.io/">Vlojure</a>, with a captivating <a href="https://www.youtube.com/watch?v=1OcAUhe3E1E">introduction video</a>.</p> <p>I was immediately interested in the project because of the visual style on display &mdash; source code represented as nested circles; an earthy brown instead of the usual dark/light theme. But as the video progressed, Ella showed off a scattering of little ideas that each seemed strikingly clever and obvious in hindsight. You'd drag one of the circle "forms" to the bottom right to evaluate it, or to the bottom left to delete it. The sides of the screen are flanked by "formbars" that hold, well, whatever you want. You can reconfigure these formbars to your exact liking. Everything is manipulated with drag. The interface exudes a sense that it was designed with wholly different goals and tastes than what we usually see in visual programming projects &mdash; perfect subject matter for our show.</p> <p>This episode was sponsored by <a href="https://www.glideapps.com/">Glide</a>, and the transcript was sponsored by <a href="https://replit.com/">Replit</a>&nbsp;&mdash; thanks to them both for making this possible.</p> <p>The show notes (with copious links) and transcript are available here: <a href="https://futureofcoding.org/episodes/054">https://futureofcoding.org/episodes/054</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Today's guest is <a href="https://www.ellahoeppner.com/">Ella Hoeppner</a>, who first came onto the radar of our community back in the fall when she released a web-based visual Clojure editor called <a href="https://vlojure.io/">Vlojure</a>, with a captivating <a href="https://www.youtube.com/watch?v=1OcAUhe3E1E">introduction video</a>.</p> <p>I was immediately interested in the project because of the visual style on display &mdash; source code represented as nested circles; an earthy brown instead of the usual dark/light theme. But as the video progressed, Ella showed off a scattering of little ideas that each seemed strikingly clever and obvious in hindsight. You'd drag one of the circle "forms" to the bottom right to evaluate it, or to the bottom left to delete it. The sides of the screen are flanked by "formbars" that hold, well, whatever you want. You can reconfigure these formbars to your exact liking. Everything is manipulated with drag. The interface exudes a sense that it was designed with wholly different goals and tastes than what we usually see in visual programming projects &mdash; perfect subject matter for our show.</p> <p>This episode was sponsored by <a href="https://www.glideapps.com/">Glide</a>, and the transcript was sponsored by <a href="https://replit.com/">Replit</a>&nbsp;&mdash; thanks to them both for making this possible.</p> <p>The show notes (with copious links) and transcript are available here: <a href="https://futureofcoding.org/episodes/054">https://futureofcoding.org/episodes/054</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ae1864ba-4aaa-44dd-b8a2-ae14010d6095/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/ella-hoeppner-vlojure/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">ae1864ba-4aaa-44dd-b8a2-ae14010d6095</guid>
      <omny:clipId>ae1864ba-4aaa-44dd-b8a2-ae14010d6095</omny:clipId>
      <pubDate>Wed, 05 Jan 2022 16:37:00 +0000</pubDate>
      <itunes:duration>4587</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ae1864ba-4aaa-44dd-b8a2-ae14010d6095/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="73411967" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/ella-hoeppner-vlojure</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Intro" />
        <psc:chapter start="00:02:04" title="Part 1" />
        <psc:chapter start="00:43:30" title="Sponsor: Glide" />
        <psc:chapter start="00:45:17" title="Sponsor: Replit" />
        <psc:chapter start="00:46:47" title="Part 2" />
        <psc:chapter start="01:15:36" title="Outro" />
      </psc:chapters>
    </item>
    <item>
      <title>Scott Anderson: End-user Programming in VR</title>
      <itunes:title>Scott Anderson: End-user Programming in VR</itunes:title>
      <description><![CDATA[<p><a href="https://twitter.com/ImpossibleScott">Scott Anderson</a> has spent the better part of a decade working on end-user programming features for VR and the metaverse. He's worked on playful creation tools in the indie game Luna, scripting for Oculus Home and Horizon Worlds at Facebook, and a bunch of concepts for novel programming interfaces in virtual reality. Talking to Scott felt a little bit like peeking into what's coming around the bend for programming. For now, most of us do our programming work on a little 2D rectangle, with a clear split between the world around the computer and the one inside it. That might change &mdash; we may find ourselves inside a virtual environment where the code we write and the effects of running it happen in the space around us. We may find ourselves in that space with other people, also doing their own programming. This space might be designed, operated, and owned by a single megacorp with a specific profit motive. Scott takes us through these possibilities &mdash; how things are actually shaping up right now and how he feels about where they're going, having spent so much time exploring this space.</p> <p>This episode was sponsored by <a href="https://www.glideapps.com/">Glide</a>, and the transcript was sponsored by <a href="https://replit.com/">Replit</a>&nbsp;&mdash; thanks to them both for making this possible.</p> <p>The show notes (with copious links) and transcript are available here: <a href="https://futureofcoding.org/episodes/053">https://futureofcoding.org/episodes/053</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><a href="https://twitter.com/ImpossibleScott">Scott Anderson</a> has spent the better part of a decade working on end-user programming features for VR and the metaverse. He's worked on playful creation tools in the indie game Luna, scripting for Oculus Home and Horizon Worlds at Facebook, and a bunch of concepts for novel programming interfaces in virtual reality. Talking to Scott felt a little bit like peeking into what's coming around the bend for programming. For now, most of us do our programming work on a little 2D rectangle, with a clear split between the world around the computer and the one inside it. That might change &mdash; we may find ourselves inside a virtual environment where the code we write and the effects of running it happen in the space around us. We may find ourselves in that space with other people, also doing their own programming. This space might be designed, operated, and owned by a single megacorp with a specific profit motive. Scott takes us through these possibilities &mdash; how things are actually shaping up right now and how he feels about where they're going, having spent so much time exploring this space.</p> <p>This episode was sponsored by <a href="https://www.glideapps.com/">Glide</a>, and the transcript was sponsored by <a href="https://replit.com/">Replit</a>&nbsp;&mdash; thanks to them both for making this possible.</p> <p>The show notes (with copious links) and transcript are available here: <a href="https://futureofcoding.org/episodes/053">https://futureofcoding.org/episodes/053</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/457ce26a-3059-4a6a-9a32-add9013ab418/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/scott-anderson-end-user-programming-in-vr/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">457ce26a-3059-4a6a-9a32-add9013ab418</guid>
      <omny:clipId>457ce26a-3059-4a6a-9a32-add9013ab418</omny:clipId>
      <pubDate>Sun, 07 Nov 2021 20:03:02 +0000</pubDate>
      <itunes:duration>7372</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/457ce26a-3059-4a6a-9a32-add9013ab418/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="117968613" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/scott-anderson-end-user-programming-in-vr</link>
      <itunes:explicit>yes</itunes:explicit>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Welcome" />
        <psc:chapter start="00:05:20" title="Part 1" />
        <psc:chapter start="01:48:57" title="Sponsor: Glide" />
        <psc:chapter start="01:50:45" title="Sponsor: Replit" />
        <psc:chapter start="01:54:09" title="Part 2" />
        <psc:chapter start="02:01:11" title="Closing Remarks" />
        <psc:chapter start="02:01:41" title="So Long" />
      </psc:chapters>
    </item>
    <item>
      <title>Amjad Masad: Replit</title>
      <itunes:title>Amjad Masad: Replit</itunes:title>
      <description><![CDATA[<p>The name <a href="https://replit.com">Replit</a> will be familiar to regular listeners of our show. The backstory and ambitions behind the project, however, I bet will be news to you. <a href="https://amasad.me">Amjad Masad</a>, the founder and first programmer of Replit, is interviewed by <a href="https://stevekrouse.com">Steve Krouse</a> in this episode from the vault &mdash; recorded back in 2019, released for the first time today. Amjad shares the stories of how he taught himself to use a computer by secretly observing his father, his early experiments with Emscripten building VMs for the web, the founding of Replit, and how their community has exploded in popularity in recent years. Some of the conceptual discussions touch on Scheme, potential futures of visual programming, Sketchpad, and GRAIL.</p> <p>The transcript for this episode was sponsored, as ever, by <a href="https://replit.com">Replit</a>.</p> <p>The show notes and transcript are available right here: https://futureofcoding.org/episodes/052</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>The name <a href="https://replit.com">Replit</a> will be familiar to regular listeners of our show. The backstory and ambitions behind the project, however, I bet will be news to you. <a href="https://amasad.me">Amjad Masad</a>, the founder and first programmer of Replit, is interviewed by <a href="https://stevekrouse.com">Steve Krouse</a> in this episode from the vault &mdash; recorded back in 2019, released for the first time today. Amjad shares the stories of how he taught himself to use a computer by secretly observing his father, his early experiments with Emscripten building VMs for the web, the founding of Replit, and how their community has exploded in popularity in recent years. Some of the conceptual discussions touch on Scheme, potential futures of visual programming, Sketchpad, and GRAIL.</p> <p>The transcript for this episode was sponsored, as ever, by <a href="https://replit.com">Replit</a>.</p> <p>The show notes and transcript are available right here: https://futureofcoding.org/episodes/052</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/8e4fe68f-5da9-4caf-b81f-ad91015afe43/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/amjad-masad-replit/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">8e4fe68f-5da9-4caf-b81f-ad91015afe43</guid>
      <omny:clipId>8e4fe68f-5da9-4caf-b81f-ad91015afe43</omny:clipId>
      <pubDate>Fri, 27 Aug 2021 21:56:34 +0000</pubDate>
      <itunes:duration>7238</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/8e4fe68f-5da9-4caf-b81f-ad91015afe43/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="115827221" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/amjad-masad-replit</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Intro" />
        <psc:chapter start="00:03:33" title="Part 1" />
        <psc:chapter start="01:01:18" title="Sponsor: Replit" />
        <psc:chapter start="01:05:08" title="Part 2" />
        <psc:chapter start="01:59:43" title="Outro" />
      </psc:chapters>
    </item>
    <item>
      <title>Toby Schachman: Cuttle, Apparatus, and Recursive Drawing</title>
      <itunes:title>Toby Schachman: Cuttle, Apparatus, and Recursive Drawing</itunes:title>
      <description><![CDATA[<p>In this episode, I'll be talking to <a href="https://twitter.com/mandy3284">Toby Schachman</a>, who many of you are surely familiar with thanks to an <a href="http://tobyschachman.com/">incredible string of projects</a> he's released over the past decade, including <a href="http://recursivedrawing.com/">Recursive Drawing</a> back in 2012, <a href="http://aprt.us/">Apparatus</a> in 2015, and most recently <a href="https://cuttle.xyz/">Cuttle</a> which opened to the public this past week. All of these projects superficially appear to be graphics editors, but by interacting with them you actually create <em>a program</em> that generates graphics. Their interfaces are wildly different from both traditional programming tools and traditional graphics apps. If you are not familiar with these projects, I strongly recommend that you actually go and play them (they all run in the browser), or watch the <a href="https://www.youtube.com/watch?v=i3Xack9ufYk">Strange Loop talk</a> where Toby demos Apparatus and explains the thinking behind it.</p> <p>This episode was sponsored by <a href="https://www.glideapps.com/">Glide</a>, and the transcript was sponsored by <a href="https://replit.com/">Replit</a>&nbsp;&mdash; thanks to them both for making this possible.</p> <p>The show notes and transcript are available right here: <a href="https://futureofcoding.org/episodes/051">https://futureofcoding.org/episodes/051</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>In this episode, I'll be talking to <a href="https://twitter.com/mandy3284">Toby Schachman</a>, who many of you are surely familiar with thanks to an <a href="http://tobyschachman.com/">incredible string of projects</a> he's released over the past decade, including <a href="http://recursivedrawing.com/">Recursive Drawing</a> back in 2012, <a href="http://aprt.us/">Apparatus</a> in 2015, and most recently <a href="https://cuttle.xyz/">Cuttle</a> which opened to the public this past week. All of these projects superficially appear to be graphics editors, but by interacting with them you actually create <em>a program</em> that generates graphics. Their interfaces are wildly different from both traditional programming tools and traditional graphics apps. If you are not familiar with these projects, I strongly recommend that you actually go and play them (they all run in the browser), or watch the <a href="https://www.youtube.com/watch?v=i3Xack9ufYk">Strange Loop talk</a> where Toby demos Apparatus and explains the thinking behind it.</p> <p>This episode was sponsored by <a href="https://www.glideapps.com/">Glide</a>, and the transcript was sponsored by <a href="https://replit.com/">Replit</a>&nbsp;&mdash; thanks to them both for making this possible.</p> <p>The show notes and transcript are available right here: <a href="https://futureofcoding.org/episodes/051">https://futureofcoding.org/episodes/051</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/27b6ee00-c968-4889-bb61-ad6c000a9322/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/toby-schachman-cuttle-apparatus-and-recursive-drawing/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">27b6ee00-c968-4889-bb61-ad6c000a9322</guid>
      <omny:clipId>27b6ee00-c968-4889-bb61-ad6c000a9322</omny:clipId>
      <pubDate>Wed, 21 Jul 2021 02:23:00 +0000</pubDate>
      <itunes:duration>6860</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/27b6ee00-c968-4889-bb61-ad6c000a9322/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="109779196" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/toby-schachman-cuttle-apparatus-and-recursive-drawing</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Welcome" />
        <psc:chapter start="00:12:47" title="Part 1" />
        <psc:chapter start="00:40:07" title="Sponsor: Replit" />
        <psc:chapter start="00:42:03" title="Part 2" />
        <psc:chapter start="01:13:17" title="Sponsor: Glide" />
        <psc:chapter start="01:16:53" title="Part 3" />
        <psc:chapter start="01:51:36" title="Closing Remarks" />
        <psc:chapter start="01:53:46" title="So Long" />
      </psc:chapters>
    </item>
    <item>
      <title>Mary Rose Cook: Isla &amp; Code Lauren</title>
      <itunes:title>Mary Rose Cook: Isla &amp; Code Lauren</itunes:title>
      <description><![CDATA[<p><a href="https://maryrosecook.com/">Mary Rose Cook</a> is a programmer with.. just.. so many side projects, oh my &mdash; and, she works at <a href="https://airtable.com/">Airtable</a>. Mary created <a href="http://gitlet.maryrosecook.com/">Gitlet</a>, a version of Git in 1000 lines of JavaScript with <em>extensive</em> annotation. That might be her most well-known project, but of particular interest to our community are her programming environments <a href="http://islalanguage.org/">Isla</a> and <a href="http://codelauren.com/">Code Lauren</a>. These projects explore syntax, learnability, execution visualization, and other surfaces of the development experience that I think we all would love to see reinvented. Mary and I talk about the design decisions behind these projects, naturally. But more importantly, we look at the ways they failed to achieve the goals Mary had for them, and what we should all be mindful of on our investigations into the future of computing. The discussion also touches on the theme of "escape hatches", picks up a few lessons in UI design from the video games <a href="https://subsetgames.com/itb.html">Into The Breach</a> and <a href="http://the-witness.net/">The Witness</a>, and reflects on what people think programming is like before they actually learn what it really is. Lighthearted but full of wisdom.</p> <p>We have a new sponsor for today's episode: <a href="https://www.glideapps.com/">Glide</a>. If you're excited about making end-user software development a reality, go to <a href="https://www.glideapps.com/jobs">glideapps.com/jobs</a> and apply to join their team.</p> <p>As ever, the transcript for this episode is sponsored by <a href="https://replit.com">Replit</a>.</p> <p>The show notes and transcript are available right here: <a href="https://futureofcoding.org/episodes/050">https://futureofcoding.org/episodes/050</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><a href="https://maryrosecook.com/">Mary Rose Cook</a> is a programmer with.. just.. so many side projects, oh my &mdash; and, she works at <a href="https://airtable.com/">Airtable</a>. Mary created <a href="http://gitlet.maryrosecook.com/">Gitlet</a>, a version of Git in 1000 lines of JavaScript with <em>extensive</em> annotation. That might be her most well-known project, but of particular interest to our community are her programming environments <a href="http://islalanguage.org/">Isla</a> and <a href="http://codelauren.com/">Code Lauren</a>. These projects explore syntax, learnability, execution visualization, and other surfaces of the development experience that I think we all would love to see reinvented. Mary and I talk about the design decisions behind these projects, naturally. But more importantly, we look at the ways they failed to achieve the goals Mary had for them, and what we should all be mindful of on our investigations into the future of computing. The discussion also touches on the theme of "escape hatches", picks up a few lessons in UI design from the video games <a href="https://subsetgames.com/itb.html">Into The Breach</a> and <a href="http://the-witness.net/">The Witness</a>, and reflects on what people think programming is like before they actually learn what it really is. Lighthearted but full of wisdom.</p> <p>We have a new sponsor for today's episode: <a href="https://www.glideapps.com/">Glide</a>. If you're excited about making end-user software development a reality, go to <a href="https://www.glideapps.com/jobs">glideapps.com/jobs</a> and apply to join their team.</p> <p>As ever, the transcript for this episode is sponsored by <a href="https://replit.com">Replit</a>.</p> <p>The show notes and transcript are available right here: <a href="https://futureofcoding.org/episodes/050">https://futureofcoding.org/episodes/050</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ad296106-44d1-4df3-a65b-ad3c0173d46c/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/mary-rose-cook-isla-code-lauren/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">ad296106-44d1-4df3-a65b-ad3c0173d46c</guid>
      <omny:clipId>ad296106-44d1-4df3-a65b-ad3c0173d46c</omny:clipId>
      <pubDate>Fri, 04 Jun 2021 00:51:00 +0000</pubDate>
      <itunes:duration>8076</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ad296106-44d1-4df3-a65b-ad3c0173d46c/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52" length="129239687" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/mary-rose-cook-isla-code-lauren</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Intro" />
        <psc:chapter start="00:01:43" title="Part 1" />
        <psc:chapter start="00:46:26" title="Sponsor: Replit" />
        <psc:chapter start="00:49:10" title="Part 2" />
        <psc:chapter start="01:24:34" title="Sponsor: Glide" />
        <psc:chapter start="01:28:17" title="Part 3" />
        <psc:chapter start="02:09:51" title="Ending" />
      </psc:chapters>
    </item>
    <item>
      <title>Ravi Chugh: Sketch-n-Sketch</title>
      <itunes:title>Ravi Chugh: Sketch-n-Sketch</itunes:title>
      <description><![CDATA[<p><a href="https://futureofcoding.org/episodes/ravichugh.net">Ravi Chugh</a> is a (recently-tenured 🎉) prof at the University of Chicago. He&rsquo;s famous for leading the <a href="http://ravichugh.github.io/sketch-n-sketch/">Sketch-n-Sketch</a> project, an <em>output-directed</em>, <em>bidirectional</em> programming tool that lets you seamlessly jump back and forth between coding and directly manipulating your program&rsquo;s output. The tool gives you two different projected editing interfaces for the same underlying program, so that you can leverage the different strengths of each. In the interview we talk about the principles of bidirectional editing, the team and history behind the Sketch-n-Sketch project, benchmarks and values that can be used to assess these sorts of novel programming interfaces, possible future directions for Sketch-n-Sketch and the field more broadly, and a bunch more. It&rsquo;s a long one &mdash; almost two and a half hours &mdash; but it&rsquo;s packed with thought and charm.</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it/">Repl.it</a>. Show notes and the full transcript are available here: <a href="https://futureofcoding.org/episodes/049">https://futureofcoding.org/episodes/049</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><a href="https://futureofcoding.org/episodes/ravichugh.net">Ravi Chugh</a> is a (recently-tenured 🎉) prof at the University of Chicago. He&rsquo;s famous for leading the <a href="http://ravichugh.github.io/sketch-n-sketch/">Sketch-n-Sketch</a> project, an <em>output-directed</em>, <em>bidirectional</em> programming tool that lets you seamlessly jump back and forth between coding and directly manipulating your program&rsquo;s output. The tool gives you two different projected editing interfaces for the same underlying program, so that you can leverage the different strengths of each. In the interview we talk about the principles of bidirectional editing, the team and history behind the Sketch-n-Sketch project, benchmarks and values that can be used to assess these sorts of novel programming interfaces, possible future directions for Sketch-n-Sketch and the field more broadly, and a bunch more. It&rsquo;s a long one &mdash; almost two and a half hours &mdash; but it&rsquo;s packed with thought and charm.</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it/">Repl.it</a>. Show notes and the full transcript are available here: <a href="https://futureofcoding.org/episodes/049">https://futureofcoding.org/episodes/049</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/4d2d1a3b-ec15-4828-8a14-ace6014d606f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1615334154" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/ravi-chugh-sketch-n-sketch/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">4d2d1a3b-ec15-4828-8a14-ace6014d606f</guid>
      <omny:clipId>4d2d1a3b-ec15-4828-8a14-ace6014d606f</omny:clipId>
      <pubDate>Tue, 09 Mar 2021 23:55:00 +0000</pubDate>
      <itunes:duration>8286</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/4d2d1a3b-ec15-4828-8a14-ace6014d606f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1615334154" length="132597010" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/ravi-chugh-sketch-n-sketch</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Intro" />
        <psc:chapter start="00:03:13" title="Part 1" />
        <psc:chapter start="01:35:52" title="Sponsor: Repl.it" />
        <psc:chapter start="01:36:46" title="Part 2" />
        <psc:chapter start="02:13:45" title="Ending" />
      </psc:chapters>
    </item>
    <item>
      <title>Jennifer Jacobs: Para &amp; Dynamic Brushes</title>
      <itunes:title>Jennifer Jacobs: Para &amp; Dynamic Brushes</itunes:title>
      <description><![CDATA[<p>"Metaphors are important here."</p> <p>There's a small handful of people that I've been requested again and again to interview on the Future of Coding podcast. <a href="http://jenniferjacobs.mat.ucsb.edu">Jennifer Jacobs</a> is one of those people. Her work on <a href="http://jenniferjacobs.mat.ucsb.edu/#db">Dynamic Brushes</a> in particular, and parametric drawing in general, occupies a major intersection between disciplines and provides insights that we can all apply to our own work. This interview touches on childhood education, programming tools for both non-programmers and expert programmers, tangible interfaces, wearable and embodied computation, aesthetics, the relationship between academia and industry, means of evaluating the efficacy of projects, geometric encodings of first-order logic, symbolic representations, whether <a href="https://en.wikipedia.org/wiki/Scratch_(programming_language)">Scratch</a> could exist outside MIT, and more. Jennifer does a wonderful job articulating the nature her own work, but also the works of her collaborators, peers, and influences, so that we come away with a great understanding for the broader spaces in which her research fits. Jennifer is already am important figure in our Future of Coding field, and I am very excited to follow her career and see all the places the impacts of her work will be felt.</p> <p>You'll notice right away that <a href="https://stevekrouse.com">Steve</a> is sitting in the interviewer chair this time. This is the first of a handful of episodes that Steve recorded in 2019 but didn't release. I'm planning to edit and release them throughout 2020, so you'll hear a bit more of Steve yet.</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it/">Repl.it</a>. Show notes and the full transcript are available here: <a href="https://futureofcoding.org/episodes/48">https://futureofcoding.org/episodes/48</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>"Metaphors are important here."</p> <p>There's a small handful of people that I've been requested again and again to interview on the Future of Coding podcast. <a href="http://jenniferjacobs.mat.ucsb.edu">Jennifer Jacobs</a> is one of those people. Her work on <a href="http://jenniferjacobs.mat.ucsb.edu/#db">Dynamic Brushes</a> in particular, and parametric drawing in general, occupies a major intersection between disciplines and provides insights that we can all apply to our own work. This interview touches on childhood education, programming tools for both non-programmers and expert programmers, tangible interfaces, wearable and embodied computation, aesthetics, the relationship between academia and industry, means of evaluating the efficacy of projects, geometric encodings of first-order logic, symbolic representations, whether <a href="https://en.wikipedia.org/wiki/Scratch_(programming_language)">Scratch</a> could exist outside MIT, and more. Jennifer does a wonderful job articulating the nature her own work, but also the works of her collaborators, peers, and influences, so that we come away with a great understanding for the broader spaces in which her research fits. Jennifer is already am important figure in our Future of Coding field, and I am very excited to follow her career and see all the places the impacts of her work will be felt.</p> <p>You'll notice right away that <a href="https://stevekrouse.com">Steve</a> is sitting in the interviewer chair this time. This is the first of a handful of episodes that Steve recorded in 2019 but didn't release. I'm planning to edit and release them throughout 2020, so you'll hear a bit more of Steve yet.</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it/">Repl.it</a>. Show notes and the full transcript are available here: <a href="https://futureofcoding.org/episodes/48">https://futureofcoding.org/episodes/48</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/b8710a8d-7d4e-43e7-9925-abda0147f7d0/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1592167704" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/48-jennifer-jacobs-para-dynamic-brushes/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">b8710a8d-7d4e-43e7-9925-abda0147f7d0</guid>
      <omny:clipId>b8710a8d-7d4e-43e7-9925-abda0147f7d0</omny:clipId>
      <pubDate>Sun, 14 Jun 2020 20:47:00 +0000</pubDate>
      <itunes:duration>6770</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/b8710a8d-7d4e-43e7-9925-abda0147f7d0/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1592167704" length="108342470" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/48-jennifer-jacobs-para-dynamic-brushes</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Intro" />
        <psc:chapter start="00:04:59" title="Part 1" />
        <psc:chapter start="01:11:11" title="Sponsor: Repl.it" />
        <psc:chapter start="01:14:44" title="Part 2" />
        <psc:chapter start="01:50:03" title="Ending" />
      </psc:chapters>
    </item>
    <item>
      <title>Max/MSP &amp; Pure Data: Miller Puckette</title>
      <itunes:title>Max/MSP &amp; Pure Data: Miller Puckette</itunes:title>
      <description><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Miller_Puckette">Miller Puckette</a> created "The Patcher" Max (the precursor to <a href="https://en.wikipedia.org/wiki/Max_(software)">Max/MSP</a>), and later <a href="https://en.wikipedia.org/wiki/Pure_Data">Pure Data</a>, two of the most important tools in the history of visual programming and computer music. Max was designed by Miller in the mid-1980s as an aid to computer-music composers who wanted to build their own dynamic systems without needing write C code. Max had no facility for sound generation at first, but that would come eventually with the addition of MSP. A decade later, after some <em>academic politics nonsense</em> forced him away from Max, Miller went on to create its successor, the open source Pure Data. Both Max/MSP and Pure Data have become wildly popular, with Max/MSP as a more polished-looking <a href="https://cycling74.com/products/max">commercial product</a> developed by <a href="https://cycling74.com/">Cycling '74</a> (now owned by music behemoth <a href="https://www.ableton.com/">Ableton</a>), and Pure Data as the thriving <a href="https://puredata.info/">independent community project</a> of hackers and techno-punks. <em>Node-and-wire</em> visual programming languages are almost a <a href="https://github.com/ivanreese/visual-programming-codex/blob/master/implementations.md">cliche</a> at this point, as the vast majority of them either <a href="https://vvvv.org/screenshots">borrow heavily</a> or at least <a href="https://nodes.io/story/">reference</a> the visual design of Miller Puckette's original Max patcher and its MSP/Pd offspring. Though as you'll hear in the interview, many of them are poorer for not rethinking some of the underling assumptions of their inspiration.</p> <p>I decided to bring Miller on the show after hearing a <a href="http://artmusictech.libsyn.com/podcast-090-miller-puckette">fabulous interview</a> of him by Darwin Grosse on the <a href="http://20objects.com/art-music-technology/">Art + Music + Technology</a> podcast. (Tip: subscribe, it's good.) Miller gave a great retelling of the history of Max and Pure Data and the forces at play when he created them, and that episode is a tidy complement the more design-focussed interview here on our show. Miller mentioned in passing that one of the three books he has yet to write would be his thoughts on realtime scheduling, so that was the initial hook for my interview. Looking back on the 30+ years of Max/Pd history, what has he learned about the design of tools? What were the alternative ideas that he didn't pursue? Where is there room for improvement, perhaps by others picking up where he left off?</p> <p>In this interview, Miller said a handful of things that were, well, painful for me to hear as a <a href="https://github.com/ivanreese/visual-programming-codex">dogmatic champion</a> of visual programming. So if you come into this thinking it'll be a well-earned hour of congratulation and adoration, sit up and get ready to flip the dang table. This interview was a blast; on a personal level, I was thrilled to have the chance to talk to such an influential figure in the history of my field, and I hope you enjoy it as much as I did.</p> <p>Quote of the Show: "It's not only powerful, but it's also inadequate."</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it/">Repl.it</a>. For the full transcript and links go to <a href="https://futureofcoding.org/episodes/047#full-transcript">https://futureofcoding.org/episodes/047</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Miller_Puckette">Miller Puckette</a> created "The Patcher" Max (the precursor to <a href="https://en.wikipedia.org/wiki/Max_(software)">Max/MSP</a>), and later <a href="https://en.wikipedia.org/wiki/Pure_Data">Pure Data</a>, two of the most important tools in the history of visual programming and computer music. Max was designed by Miller in the mid-1980s as an aid to computer-music composers who wanted to build their own dynamic systems without needing write C code. Max had no facility for sound generation at first, but that would come eventually with the addition of MSP. A decade later, after some <em>academic politics nonsense</em> forced him away from Max, Miller went on to create its successor, the open source Pure Data. Both Max/MSP and Pure Data have become wildly popular, with Max/MSP as a more polished-looking <a href="https://cycling74.com/products/max">commercial product</a> developed by <a href="https://cycling74.com/">Cycling '74</a> (now owned by music behemoth <a href="https://www.ableton.com/">Ableton</a>), and Pure Data as the thriving <a href="https://puredata.info/">independent community project</a> of hackers and techno-punks. <em>Node-and-wire</em> visual programming languages are almost a <a href="https://github.com/ivanreese/visual-programming-codex/blob/master/implementations.md">cliche</a> at this point, as the vast majority of them either <a href="https://vvvv.org/screenshots">borrow heavily</a> or at least <a href="https://nodes.io/story/">reference</a> the visual design of Miller Puckette's original Max patcher and its MSP/Pd offspring. Though as you'll hear in the interview, many of them are poorer for not rethinking some of the underling assumptions of their inspiration.</p> <p>I decided to bring Miller on the show after hearing a <a href="http://artmusictech.libsyn.com/podcast-090-miller-puckette">fabulous interview</a> of him by Darwin Grosse on the <a href="http://20objects.com/art-music-technology/">Art + Music + Technology</a> podcast. (Tip: subscribe, it's good.) Miller gave a great retelling of the history of Max and Pure Data and the forces at play when he created them, and that episode is a tidy complement the more design-focussed interview here on our show. Miller mentioned in passing that one of the three books he has yet to write would be his thoughts on realtime scheduling, so that was the initial hook for my interview. Looking back on the 30+ years of Max/Pd history, what has he learned about the design of tools? What were the alternative ideas that he didn't pursue? Where is there room for improvement, perhaps by others picking up where he left off?</p> <p>In this interview, Miller said a handful of things that were, well, painful for me to hear as a <a href="https://github.com/ivanreese/visual-programming-codex">dogmatic champion</a> of visual programming. So if you come into this thinking it'll be a well-earned hour of congratulation and adoration, sit up and get ready to flip the dang table. This interview was a blast; on a personal level, I was thrilled to have the chance to talk to such an influential figure in the history of my field, and I hope you enjoy it as much as I did.</p> <p>Quote of the Show: "It's not only powerful, but it's also inadequate."</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it/">Repl.it</a>. For the full transcript and links go to <a href="https://futureofcoding.org/episodes/047#full-transcript">https://futureofcoding.org/episodes/047</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/4ceb1211-c26e-4e32-88bb-abb9002f8a46/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1589264320" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/47-maxmsp-pure-data-miller-puckette/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">4ceb1211-c26e-4e32-88bb-abb9002f8a46</guid>
      <omny:clipId>4ceb1211-c26e-4e32-88bb-abb9002f8a46</omny:clipId>
      <pubDate>Tue, 12 May 2020 06:18:00 +0000</pubDate>
      <itunes:duration>4205</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/4ceb1211-c26e-4e32-88bb-abb9002f8a46/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1589264320" length="67305145" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/47-maxmsp-pure-data-miller-puckette</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Intro" />
        <psc:chapter start="00:03:13" title="Part 1" />
        <psc:chapter start="00:53:12" title="Sponsor: Repl.it" />
        <psc:chapter start="00:55:39" title="Part 2" />
        <psc:chapter start="01:08:43" title="Ending" />
      </psc:chapters>
    </item>
    <item>
      <title>2020 Community Survey</title>
      <itunes:title>2020 Community Survey</itunes:title>
      <description><![CDATA[<p>This was originally meant to be a little mini-episode halfway through March, with the next full episode coming at the start of April. Would you believe me if I told you that some things happened in the world that caused me to change my plans? Shocker, I know.</p> <p>Well, it's finally here. In today's episode, I'll reflect and commentate on the results of the first ever Future of Coding Community Survey. The show notes for this episode are full of graphs of the survey results, so be sure to <a href="https://futureofcoding.org/episodes/046">take a look</a> at that too.</p> <p>As ever, thanks to <a href="https://repl.it">Repl.it</a> for sponsoring those show notes.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>This was originally meant to be a little mini-episode halfway through March, with the next full episode coming at the start of April. Would you believe me if I told you that some things happened in the world that caused me to change my plans? Shocker, I know.</p> <p>Well, it's finally here. In today's episode, I'll reflect and commentate on the results of the first ever Future of Coding Community Survey. The show notes for this episode are full of graphs of the survey results, so be sure to <a href="https://futureofcoding.org/episodes/046">take a look</a> at that too.</p> <p>As ever, thanks to <a href="https://repl.it">Repl.it</a> for sponsoring those show notes.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/58961680-aa28-49b3-af08-aba800399a0d/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1587795654" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/46-2020-community-survey/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">58961680-aa28-49b3-af08-aba800399a0d</guid>
      <omny:clipId>58961680-aa28-49b3-af08-aba800399a0d</omny:clipId>
      <pubDate>Sat, 25 Apr 2020 06:20:00 +0000</pubDate>
      <itunes:duration>3846</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/58961680-aa28-49b3-af08-aba800399a0d/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1587795654" length="61551558" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/46-2020-community-survey</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Introduction" />
        <psc:chapter start="00:02:02" title="Section 1: Who Are You, Really?" />
        <psc:chapter start="00:11:09" title="Section 2: The Pursuit of Perfection" />
        <psc:chapter start="00:27:28" title="Section 3: Put Out The Fire" />
        <psc:chapter start="00:33:54" title="Sponsor: Repl.it" />
        <psc:chapter start="00:35:50" title="Section 4: Free Thinking" />
        <psc:chapter start="00:52:17" title="What does &quot;Future of Coding&quot; mean?" />
      </psc:chapters>
    </item>
    <item>
      <title>Orca: Devine Lu Linvega</title>
      <itunes:title>Orca: Devine Lu Linvega</itunes:title>
      <description><![CDATA[<p><a href="https://100r.co/site/orca">Orca</a> is a visual programming environment for making music. Except it's not graphical, it's just text arranged in a grid. Except it doesn't actually make music, it just silently emits digital events across time. When you first see it, it's utterly alien. When you start to learn how it works and why, the logic of it all snaps into place, and it becomes a thrilling case study for authors of live programming environments and interactive media tools.</p> <p><a href="https://twitter.com/neauoire">Devine Lu Linvega</a>, Orca's creator, struck a wonderful balance between flashy style and significant utility. Orca is typically encountered as an inky black and seafoam green alphabet soup, pulsating to some species of broody electronic industrial throb. But it is also a forgiving learning environment that doesn't crash, puts code and data together in the same space, lets you directly manipulate code and data interchangeably, allows generous recovery from mistakes, and supports discovery through freeform play.</p> <p>I invited Devine to come on the show specifically to brain dump about the design process of Orca, how he started the project and built it up to what it is today. During our three-hour conversation we wound up talking a lot about all the other tools he's created, and you can hear that discussion on <a href="https://futureofcoding.org/episodes/44">last month's episode</a>. This time it's all Orca &mdash; inspirations, execution model, operators, interface, system design, ports &amp; reimplementations, interactions with other tools, and the community.</p> <p>This episode contains many snippets of music, as examples of what you can make using Orca. All of it was created by Devine, and is available on his <a href="https://www.youtube.com/aliceffekt/videos">Youtube channel</a>. If you like a particular piece and want to hear the full thing &mdash; <em>and see exactly how Devine made it</em> &mdash; they are all linked <a href="https://futureofcoding.org/episodes/45#full-transcript">in the transcript</a> at the point that they appear in the show. So just scroll and skim, or search the transcript for some phrase that neighbours the song you want to find.</p> <p>Quote of the show: "It's for children. The documentation fits in a tweet, basically."</p> <p><strong>Links</strong></p> <p><a href="https://twitter.com/neauoire">Devine Lu Linvega</a> is our guest. He and his partner <a href="https://twitter.com/rekkabell">Rekka</a> funnel their lives and creativity into <a href="https://100r.co/">Hundred Rabbits</a>. Devine has created <a href="https://hundredrabbits.itch.io/">countless tools</a>, but <a href="https://100r.co/site/orca">Orca</a> is the focus of today's episode. He also appeared on the <a href="https://futureofcoding.org/episodes/44">previous episode</a>. <a href="https://www.patreon.com/100">Support them on Patreon</a>, so they can keep making amazing things like Orca.</p> <p>At the dawn of time, Devine was inspired to make a game by misunderstanding an <a href="https://en.wikipedia.org/wiki/Autechre">Autechre</a> music video. I don't know which one he meant, but here's <a href="https://www.youtube.com/watch?v=g6zT3kVtpHc">a classic</a>. And, why not, here's <a href="https://www.youtube.com/watch?v=dVjlmLmAi2w">my favourite song</a> of theirs. Yes, that's one song. Put on some big headphones and play it loud while you read, debug, sleep, drive, trip, what have you.</p> <p>In the theme of creation through misunderstanding, <a href="https://100r.co/site/orca">Orca</a> was inspired by a misunderstanding of <a href="https://en.wikipedia.org/wiki/TidalCycles">Tidal</a>.</p> <p>It's not mentioned in the episode, but I wanted to link to this <a href="https://www.youtube.com/watch?v=sNj-I2pZwX8">Tidal remix</a> (By Lil Data, aka FoC community member <a href="https://twitter.com/jdkarmitage">Jack Armitage</a>) of a <a href="https://www.youtube.com/watch?v=qfAqtFuGjWM">song by Charli XCX</a>. This remix slaps, but... you can't really <em>feel</em> what the music is going to do based on the code, hey?</p> <p><a href="https://en.wikipedia.org/wiki/Rami_Ismail">Rami Ismail</a> hosted a year long game jam, for which Devine and a friend created a little block-based puzzle game named Pico, which would eventually become Orca.</p> <p><a href="https://twitter.com/samaaron">Sam Aaron</a> created the music coding tool <a href="https://en.wikipedia.org/wiki/Sonic_Pi">Sonic Pi</a>, which is included by default with <a href="https://en.wikipedia.org/wiki/Raspbian">Raspbian</a>. It reminded Devine a little bit of <a href="https://processing.org/">Processing</a> without the compile time, and seemed similar to Xcode's <a href="https://en.wikipedia.org/wiki/Swift_Playgrounds">Playgrounds</a>.</p> <p><a href="https://en.wikipedia.org/wiki/Dwarf_Fortress">Dwarf Fortress</a>, <a href="https://en.wikipedia.org/wiki/Ancient_Domains_of_Mystery">ADOM (Ancient Domains of Mystery)</a>, and other <a href="https://en.wikipedia.org/wiki/Roguelike">Roguelike</a> games are precursors to the 2D character grid of Orca. The code structures you create resemble the patterns in <a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life">Game of Life</a>.</p> <p>Learning how to read Orca code is like learning to read <a href="https://www.youtube.com/watch?v=MvEXkd3O2ow">the code in The Matrix</a>.</p> <p>Orca's traveling N E S W operators are likened to <a href="https://en.wikipedia.org/wiki/Rube_Goldberg_machine">Rube Goldberg machines</a>, <a href="https://en.wikipedia.org/wiki/Rolling_ball_sculpture">rolling ball sculptures</a>, and the <a href="https://en.wikipedia.org/wiki/The_Incredible_Machine_(series)">Incredible Machine</a>.</p> <p>Orca is a language that uses "bangs", a concept borrowed from <a href="https://en.wikipedia.org/wiki/Max_(software)">Max/MSP</a> and <a href="https://en.wikipedia.org/wiki/Pure_Data">Pure Data</a>. Devine also made a similar looking flow-based web framework called <a href="https://wiki.xxiivv.com/site/riven.html">Riven</a>.</p> <p><a href="https://en.wikipedia.org/wiki/Generative_music">Generative music</a> arguably went mainstream with <a href="https://en.wikipedia.org/wiki/In_C">In C</a> by <a href="https://en.wikipedia.org/wiki/Terry_Riley">Terry Riley</a>. Here is the <a href="https://www.youtube.com/watch?v=XRaa34E8tXQ">definitive recording</a>, and here is one of my <a href="https://www.youtube.com/watch?v=_FXQ68ZkWVw">favourite renditions</a>. While you can make generative music with Max/MSP, or <a href="https://en.wikipedia.org/wiki/Ableton_live">Ableton Live</a>, Orca offers a much richer, easier approach.</p> <p>The Chrome version of Orca is easy to get up and running with no dependencies, thanks to web platform features like <a href="https://www.smashingmagazine.com/2018/03/web-midi-api/">WebMIDI</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API">WebAudio</a>&mdash; much easier than tools like Tidal or <a href="https://extemporelang.github.io/">Extempore</a>, especially if you use Orca's companion synthesizer app <a href="https://github.com/hundredrabbits/Pilot">Pilot</a>.</p> <p>Orca is so simple that it's been ported to Lua and C. The C version runs nicely on the <a href="https://monome.org/docs/norns/">Norns</a>, which is a little sound computer by <a href="https://monome.org/">Monome</a>.</p> <p>Ivan recently listened to <a href="http://artmusictech.libsyn.com/podcast-090-miller-puckette">a fantastic interview</a> with <a href="https://en.wikipedia.org/wiki/Miller_Puckette">Miller Puckette</a> (creator of Max and Pure Data), which sparked curiosity about realtime scheduling for live-coded music tools.</p> <p>Orca's Euclid operator U was inspired by the <a href="http://vpme.de/euclidean-circles/">Euclidean Circles</a> synth module.</p> <p>The community around Orca largely grew out of the <a href="https://llllllll.co/">"lines" community</a>, a forum started by <a href="https://monome.org/">Monome</a>. They make <a href="https://monome.org/docs/grid/">a lot of pieces</a> you can use as part of a modular synthesizer rig &mdash; you know, one of those giant cabled monsters used by the likes of <a href="https://www.youtube.com/watch?v=bGByDwiiECw">Tangerine Dream</a> in the 70s. <a href="https://www.youtube.com/watch?v=95UvPlhjbE4">People still do that</a>, and <a href="https://www.youtube.com/watch?v=rUxM7KrUTOA">it's better than ever</a>.</p> <p>It seems like all node-and-wire visual programming languages, like <a href="https://origami.design/">Origami</a>and <a href="https://nodered.org/">Node-RED</a>, are perpetuating certain conventions borrowed from modular synthesis without any awareness of that history and the limitations it imposes. <a href="https://github.com/ivanreese/visual-programming-codex/blob/master/impressions/origami.md">This makes your humble host a touch grumpy.</a></p> <p>The <a href="https://www.youtube.com/watch?v=uYMpMcmpfkI">THX deep note</a> was an early example of the wild polyphony afforded by computer-synthesized audio, as opposed to the limited polyphony or even monophony of analog synthesizers.</p> <p>You can use Orca to control <a href="https://unity.com/">Unity</a>, which is neat. You can use it to play <a href="https://en.wikipedia.org/wiki/QWOP">QWOP</a>, which is nuts. Speaking of QWOP, it's part of a whole genre of hard-to-control games like <a href="https://en.wikipedia.org/wiki/Surgeon_Simulator">Surgeon Simulator</a>, <a href="https://en.wikipedia.org/wiki/Octodad">Octodad</a>, <a href="https://en.wikipedia.org/wiki/I_Am_Bread">I Am Bread</a>.</p> <p>Devine has used <a href="https://kdenlive.org/">Kdenlive</a> and <a href="https://www.blender.org/">Blender</a> to edit videos, since they're both really good (for an open source programs). Better than editing just with <a href="https://en.wikipedia.org/wiki/FFmpeg">FFmpeg</a>.</p> <p>Remember when <a href="https://futureofcoding.org/episodes/41">Jack Rusher</a> said "Orcal"? Yeah, good times.</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it/">Repl.it</a>. They're amazing, and seeing <a href="https://twitter.com/amasad/status/1227036926257090560">stories like this</a> just melts my heart. Email jobs@repl.it if you'd like to work on the future of coding and, hey, help kids discover the joy of computing. For the full transcript go to <a href="https://futureofcoding.org/episodes/044#full-transcript">https://futureofcoding.org/episodes/045#full-transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><a href="https://100r.co/site/orca">Orca</a> is a visual programming environment for making music. Except it's not graphical, it's just text arranged in a grid. Except it doesn't actually make music, it just silently emits digital events across time. When you first see it, it's utterly alien. When you start to learn how it works and why, the logic of it all snaps into place, and it becomes a thrilling case study for authors of live programming environments and interactive media tools.</p> <p><a href="https://twitter.com/neauoire">Devine Lu Linvega</a>, Orca's creator, struck a wonderful balance between flashy style and significant utility. Orca is typically encountered as an inky black and seafoam green alphabet soup, pulsating to some species of broody electronic industrial throb. But it is also a forgiving learning environment that doesn't crash, puts code and data together in the same space, lets you directly manipulate code and data interchangeably, allows generous recovery from mistakes, and supports discovery through freeform play.</p> <p>I invited Devine to come on the show specifically to brain dump about the design process of Orca, how he started the project and built it up to what it is today. During our three-hour conversation we wound up talking a lot about all the other tools he's created, and you can hear that discussion on <a href="https://futureofcoding.org/episodes/44">last month's episode</a>. This time it's all Orca &mdash; inspirations, execution model, operators, interface, system design, ports &amp; reimplementations, interactions with other tools, and the community.</p> <p>This episode contains many snippets of music, as examples of what you can make using Orca. All of it was created by Devine, and is available on his <a href="https://www.youtube.com/aliceffekt/videos">Youtube channel</a>. If you like a particular piece and want to hear the full thing &mdash; <em>and see exactly how Devine made it</em> &mdash; they are all linked <a href="https://futureofcoding.org/episodes/45#full-transcript">in the transcript</a> at the point that they appear in the show. So just scroll and skim, or search the transcript for some phrase that neighbours the song you want to find.</p> <p>Quote of the show: "It's for children. The documentation fits in a tweet, basically."</p> <p><strong>Links</strong></p> <p><a href="https://twitter.com/neauoire">Devine Lu Linvega</a> is our guest. He and his partner <a href="https://twitter.com/rekkabell">Rekka</a> funnel their lives and creativity into <a href="https://100r.co/">Hundred Rabbits</a>. Devine has created <a href="https://hundredrabbits.itch.io/">countless tools</a>, but <a href="https://100r.co/site/orca">Orca</a> is the focus of today's episode. He also appeared on the <a href="https://futureofcoding.org/episodes/44">previous episode</a>. <a href="https://www.patreon.com/100">Support them on Patreon</a>, so they can keep making amazing things like Orca.</p> <p>At the dawn of time, Devine was inspired to make a game by misunderstanding an <a href="https://en.wikipedia.org/wiki/Autechre">Autechre</a> music video. I don't know which one he meant, but here's <a href="https://www.youtube.com/watch?v=g6zT3kVtpHc">a classic</a>. And, why not, here's <a href="https://www.youtube.com/watch?v=dVjlmLmAi2w">my favourite song</a> of theirs. Yes, that's one song. Put on some big headphones and play it loud while you read, debug, sleep, drive, trip, what have you.</p> <p>In the theme of creation through misunderstanding, <a href="https://100r.co/site/orca">Orca</a> was inspired by a misunderstanding of <a href="https://en.wikipedia.org/wiki/TidalCycles">Tidal</a>.</p> <p>It's not mentioned in the episode, but I wanted to link to this <a href="https://www.youtube.com/watch?v=sNj-I2pZwX8">Tidal remix</a> (By Lil Data, aka FoC community member <a href="https://twitter.com/jdkarmitage">Jack Armitage</a>) of a <a href="https://www.youtube.com/watch?v=qfAqtFuGjWM">song by Charli XCX</a>. This remix slaps, but... you can't really <em>feel</em> what the music is going to do based on the code, hey?</p> <p><a href="https://en.wikipedia.org/wiki/Rami_Ismail">Rami Ismail</a> hosted a year long game jam, for which Devine and a friend created a little block-based puzzle game named Pico, which would eventually become Orca.</p> <p><a href="https://twitter.com/samaaron">Sam Aaron</a> created the music coding tool <a href="https://en.wikipedia.org/wiki/Sonic_Pi">Sonic Pi</a>, which is included by default with <a href="https://en.wikipedia.org/wiki/Raspbian">Raspbian</a>. It reminded Devine a little bit of <a href="https://processing.org/">Processing</a> without the compile time, and seemed similar to Xcode's <a href="https://en.wikipedia.org/wiki/Swift_Playgrounds">Playgrounds</a>.</p> <p><a href="https://en.wikipedia.org/wiki/Dwarf_Fortress">Dwarf Fortress</a>, <a href="https://en.wikipedia.org/wiki/Ancient_Domains_of_Mystery">ADOM (Ancient Domains of Mystery)</a>, and other <a href="https://en.wikipedia.org/wiki/Roguelike">Roguelike</a> games are precursors to the 2D character grid of Orca. The code structures you create resemble the patterns in <a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life">Game of Life</a>.</p> <p>Learning how to read Orca code is like learning to read <a href="https://www.youtube.com/watch?v=MvEXkd3O2ow">the code in The Matrix</a>.</p> <p>Orca's traveling N E S W operators are likened to <a href="https://en.wikipedia.org/wiki/Rube_Goldberg_machine">Rube Goldberg machines</a>, <a href="https://en.wikipedia.org/wiki/Rolling_ball_sculpture">rolling ball sculptures</a>, and the <a href="https://en.wikipedia.org/wiki/The_Incredible_Machine_(series)">Incredible Machine</a>.</p> <p>Orca is a language that uses "bangs", a concept borrowed from <a href="https://en.wikipedia.org/wiki/Max_(software)">Max/MSP</a> and <a href="https://en.wikipedia.org/wiki/Pure_Data">Pure Data</a>. Devine also made a similar looking flow-based web framework called <a href="https://wiki.xxiivv.com/site/riven.html">Riven</a>.</p> <p><a href="https://en.wikipedia.org/wiki/Generative_music">Generative music</a> arguably went mainstream with <a href="https://en.wikipedia.org/wiki/In_C">In C</a> by <a href="https://en.wikipedia.org/wiki/Terry_Riley">Terry Riley</a>. Here is the <a href="https://www.youtube.com/watch?v=XRaa34E8tXQ">definitive recording</a>, and here is one of my <a href="https://www.youtube.com/watch?v=_FXQ68ZkWVw">favourite renditions</a>. While you can make generative music with Max/MSP, or <a href="https://en.wikipedia.org/wiki/Ableton_live">Ableton Live</a>, Orca offers a much richer, easier approach.</p> <p>The Chrome version of Orca is easy to get up and running with no dependencies, thanks to web platform features like <a href="https://www.smashingmagazine.com/2018/03/web-midi-api/">WebMIDI</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API">WebAudio</a>&mdash; much easier than tools like Tidal or <a href="https://extemporelang.github.io/">Extempore</a>, especially if you use Orca's companion synthesizer app <a href="https://github.com/hundredrabbits/Pilot">Pilot</a>.</p> <p>Orca is so simple that it's been ported to Lua and C. The C version runs nicely on the <a href="https://monome.org/docs/norns/">Norns</a>, which is a little sound computer by <a href="https://monome.org/">Monome</a>.</p> <p>Ivan recently listened to <a href="http://artmusictech.libsyn.com/podcast-090-miller-puckette">a fantastic interview</a> with <a href="https://en.wikipedia.org/wiki/Miller_Puckette">Miller Puckette</a> (creator of Max and Pure Data), which sparked curiosity about realtime scheduling for live-coded music tools.</p> <p>Orca's Euclid operator U was inspired by the <a href="http://vpme.de/euclidean-circles/">Euclidean Circles</a> synth module.</p> <p>The community around Orca largely grew out of the <a href="https://llllllll.co/">"lines" community</a>, a forum started by <a href="https://monome.org/">Monome</a>. They make <a href="https://monome.org/docs/grid/">a lot of pieces</a> you can use as part of a modular synthesizer rig &mdash; you know, one of those giant cabled monsters used by the likes of <a href="https://www.youtube.com/watch?v=bGByDwiiECw">Tangerine Dream</a> in the 70s. <a href="https://www.youtube.com/watch?v=95UvPlhjbE4">People still do that</a>, and <a href="https://www.youtube.com/watch?v=rUxM7KrUTOA">it's better than ever</a>.</p> <p>It seems like all node-and-wire visual programming languages, like <a href="https://origami.design/">Origami</a>and <a href="https://nodered.org/">Node-RED</a>, are perpetuating certain conventions borrowed from modular synthesis without any awareness of that history and the limitations it imposes. <a href="https://github.com/ivanreese/visual-programming-codex/blob/master/impressions/origami.md">This makes your humble host a touch grumpy.</a></p> <p>The <a href="https://www.youtube.com/watch?v=uYMpMcmpfkI">THX deep note</a> was an early example of the wild polyphony afforded by computer-synthesized audio, as opposed to the limited polyphony or even monophony of analog synthesizers.</p> <p>You can use Orca to control <a href="https://unity.com/">Unity</a>, which is neat. You can use it to play <a href="https://en.wikipedia.org/wiki/QWOP">QWOP</a>, which is nuts. Speaking of QWOP, it's part of a whole genre of hard-to-control games like <a href="https://en.wikipedia.org/wiki/Surgeon_Simulator">Surgeon Simulator</a>, <a href="https://en.wikipedia.org/wiki/Octodad">Octodad</a>, <a href="https://en.wikipedia.org/wiki/I_Am_Bread">I Am Bread</a>.</p> <p>Devine has used <a href="https://kdenlive.org/">Kdenlive</a> and <a href="https://www.blender.org/">Blender</a> to edit videos, since they're both really good (for an open source programs). Better than editing just with <a href="https://en.wikipedia.org/wiki/FFmpeg">FFmpeg</a>.</p> <p>Remember when <a href="https://futureofcoding.org/episodes/41">Jack Rusher</a> said "Orcal"? Yeah, good times.</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it/">Repl.it</a>. They're amazing, and seeing <a href="https://twitter.com/amasad/status/1227036926257090560">stories like this</a> just melts my heart. Email jobs@repl.it if you'd like to work on the future of coding and, hey, help kids discover the joy of computing. For the full transcript go to <a href="https://futureofcoding.org/episodes/044#full-transcript">https://futureofcoding.org/episodes/045#full-transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/a3c03b7e-1368-47ea-8b75-ab71003ebac2/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1583079125" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/45-orca-devine-lu-linvega/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">a3c03b7e-1368-47ea-8b75-ab71003ebac2</guid>
      <omny:clipId>a3c03b7e-1368-47ea-8b75-ab71003ebac2</omny:clipId>
      <pubDate>Sun, 01 Mar 2020 16:11:00 +0000</pubDate>
      <itunes:duration>5668</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/a3c03b7e-1368-47ea-8b75-ab71003ebac2/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1583079125" length="90710741" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/45-orca-devine-lu-linvega</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="Intro" />
        <psc:chapter start="00:03:56" title="Misunderstandings" />
        <psc:chapter start="00:06:28" title="Tidal Explained" />
        <psc:chapter start="00:10:00" title="Game Jam" />
        <psc:chapter start="00:14:05" title="Orca Explained" />
        <psc:chapter start="00:22:55" title="Bangs, 26 Operators, Constraints" />
        <psc:chapter start="00:28:45" title="History of Generative Music" />
        <psc:chapter start="00:30:58" title="Making It Easy To Get Started" />
        <psc:chapter start="00:37:08" title="How To Implement Orca" />
        <psc:chapter start="00:41:24" title="Scheduler" />
        <psc:chapter start="00:44:48" title="Massive Breaking Change" />
        <psc:chapter start="00:50:08" title="Sponsor: Repl.it" />
        <psc:chapter start="00:51:38" title="Operators" />
        <psc:chapter start="00:54:57" title="Community" />
        <psc:chapter start="01:03:17" title="A Brief Rant About Modular Synthesis" />
        <psc:chapter start="01:07:18" title="The Lines Community" />
        <psc:chapter start="01:09:30" title="Fragility, Monophonicity, Another Rant About Synthesizers" />
        <psc:chapter start="01:17:24" title="Werid Things" />
        <psc:chapter start="01:21:57" title="Future Directions, Random Thoughts" />
        <psc:chapter start="01:32:43" title="Ending" />
      </psc:chapters>
    </item>
    <item>
      <title>Making Your Own Tools: Devine Lu Linvega</title>
      <itunes:title>Making Your Own Tools: Devine Lu Linvega</itunes:title>
      <description><![CDATA[<p>We live in a world that is gradually becoming more closed off, more controlled, more regional. Our relationship with technology is now primarily one of consumption, buying new hardware on a regular cycle, using software conceptualized to meet a market need and fulfill promises made to venture capitalists. It's common to hear people talk about both computing hardware and software as though they were appliances, not meant to be user-serviced, not meant to be modified. The tools we use are being designed for the 80% who live in a city, use grid electricity, want to keep up with the industry, and have an unacknowledged learned helplessness about the limitations of their tools.</p> <p><a href="https://twitter.com/neauoire">Devine Lu Linvega</a> and his partner <a href="https://twitter.com/rekkabell">Rekka</a> live on a sailboat. He makes art, music, software, and other cultural artifacts. When Photoshop's DRM required that he maintain a connection to the internet, he wrote his own creative suite. When his MacBook died in the middle of the ocean, he switched to Linux with hardware he could service. His electricity comes from solar panels, and every joule counts &mdash; so that's out with Chrome and Electron and in with Scheme, C, assembly, and maybe someday Forth.</p> <p>I wanted to interview Devine with a main focus on just one of the dozens of tools he's created over the past few years &mdash; <a href="https://100r.co/site/orca">Orca</a>, a spatial programming environment for generating synchronized realtime events. It's ostensibly a tool for music, but has been applied to all sorts of other disciplines in wildly creative ways. Devine and I ended up talking for over three hours, and after editing out everything superfluous there was still too much matter for just one episode. So we're going to take this in two pieces. Today, you'll hear the bits of our conversation that covered everything <em>other than</em> Orca &mdash; Devine's philosophy, the stories of his other tools, the ways in which boat life have forced certain technology choices on him. On the next episode we'll have the rest &mdash; a deep dive into Orca, covering the thinking and story behind the design of the tool, the community that has picked it up and run with it in all sorts of wild directions, and lots of little nooks and crannies in the space around this fascinating project.</p> <p>My hope is that the topics discussed today will let you see from Devine's perspective, so that when we look at Orca in detail you can appreciate exactly why it is the way it is, and take away valuable lessons for your own projects.</p> <p>Given that his most recent explorations have been making art and programming tools that run on the NES, the best quote of the show has to be: "I never want to have a stronger computer than the one I have today."</p> <p><strong>Links</strong></p> <p><a href="https://twitter.com/neauoire">Devine Lu Linvega</a> is our guest. He and his partner <a href="https://twitter.com/rekkabell">Rekka</a> funnel their lives and creativity into <a href="https://100r.co/">Hundred Rabbits</a>. Devine has created <a href="https://hundredrabbits.itch.io/">countless tools</a>, but <a href="https://100r.co/site/orca">Orca</a>, <a href="https://100r.co/site/ronin">Ronin</a>, <a href="https://100r.co/site/left">Left</a>, <a href="https://100r.co/site/dotgrid">Dotgrid</a>, the 1-bit drawing tool <a href="https://github.com/hundredrabbits/Noodle">Noodle</a> and it's 3D scene layout tool <a href="https://github.com/hundredrabbits/Poodle">Poodle</a> are particularly fascinating. His <a href="https://xxiivv.com/">website</a> is like a wiki, a time tracking tool, and an alternate universe.<a href="https://llllllll.co/"></a></p> <p>Devine released a series of <a href="https://twitter.com/neauoire/status/1189997719034761221">beautiful illustrations</a> for <a href="https://en.wikipedia.org/wiki/Inktober">Inktober</a>.</p> <p><a href="https://repl.it/">Repl.it</a> is our Sponsor. Email jobs@repl.it if you'd like to work on the future of coding.</p> <p>Folks interested in energy-efficient spatial programming should watch this <a href="https://www.infoq.com/presentations/power-144-chip/">Strange Loop talk</a> by <a href="https://en.wikipedia.org/wiki/Charles_H._Moore">Chuck Moore</a> about the <a href="https://en.wikipedia.org/wiki/Forth_(programming_language)">Forth</a> programming language.</p> <p>Potentially similar projects include <a href="https://en.wikipedia.org/wiki/Inferno_(operating_system)">Inferno</a> and <a href="https://github.com/vygr/ChrysaLisp">ChrysaLisp</a>.</p> <p>The <a href="https://www.youtube.com/watch?v=I4flQ8XdvJM">resilient, living systems</a> of <a href="https://www.cs.unm.edu/~ackley/">Dave Ackley</a> are also fascinating.</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it/">Repl.it</a> and can be found at <a href="https://futureofcoding.org/episodes/044#full-transcript">https://futureofcoding.org/episodes/044#full-transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>We live in a world that is gradually becoming more closed off, more controlled, more regional. Our relationship with technology is now primarily one of consumption, buying new hardware on a regular cycle, using software conceptualized to meet a market need and fulfill promises made to venture capitalists. It's common to hear people talk about both computing hardware and software as though they were appliances, not meant to be user-serviced, not meant to be modified. The tools we use are being designed for the 80% who live in a city, use grid electricity, want to keep up with the industry, and have an unacknowledged learned helplessness about the limitations of their tools.</p> <p><a href="https://twitter.com/neauoire">Devine Lu Linvega</a> and his partner <a href="https://twitter.com/rekkabell">Rekka</a> live on a sailboat. He makes art, music, software, and other cultural artifacts. When Photoshop's DRM required that he maintain a connection to the internet, he wrote his own creative suite. When his MacBook died in the middle of the ocean, he switched to Linux with hardware he could service. His electricity comes from solar panels, and every joule counts &mdash; so that's out with Chrome and Electron and in with Scheme, C, assembly, and maybe someday Forth.</p> <p>I wanted to interview Devine with a main focus on just one of the dozens of tools he's created over the past few years &mdash; <a href="https://100r.co/site/orca">Orca</a>, a spatial programming environment for generating synchronized realtime events. It's ostensibly a tool for music, but has been applied to all sorts of other disciplines in wildly creative ways. Devine and I ended up talking for over three hours, and after editing out everything superfluous there was still too much matter for just one episode. So we're going to take this in two pieces. Today, you'll hear the bits of our conversation that covered everything <em>other than</em> Orca &mdash; Devine's philosophy, the stories of his other tools, the ways in which boat life have forced certain technology choices on him. On the next episode we'll have the rest &mdash; a deep dive into Orca, covering the thinking and story behind the design of the tool, the community that has picked it up and run with it in all sorts of wild directions, and lots of little nooks and crannies in the space around this fascinating project.</p> <p>My hope is that the topics discussed today will let you see from Devine's perspective, so that when we look at Orca in detail you can appreciate exactly why it is the way it is, and take away valuable lessons for your own projects.</p> <p>Given that his most recent explorations have been making art and programming tools that run on the NES, the best quote of the show has to be: "I never want to have a stronger computer than the one I have today."</p> <p><strong>Links</strong></p> <p><a href="https://twitter.com/neauoire">Devine Lu Linvega</a> is our guest. He and his partner <a href="https://twitter.com/rekkabell">Rekka</a> funnel their lives and creativity into <a href="https://100r.co/">Hundred Rabbits</a>. Devine has created <a href="https://hundredrabbits.itch.io/">countless tools</a>, but <a href="https://100r.co/site/orca">Orca</a>, <a href="https://100r.co/site/ronin">Ronin</a>, <a href="https://100r.co/site/left">Left</a>, <a href="https://100r.co/site/dotgrid">Dotgrid</a>, the 1-bit drawing tool <a href="https://github.com/hundredrabbits/Noodle">Noodle</a> and it's 3D scene layout tool <a href="https://github.com/hundredrabbits/Poodle">Poodle</a> are particularly fascinating. His <a href="https://xxiivv.com/">website</a> is like a wiki, a time tracking tool, and an alternate universe.<a href="https://llllllll.co/"></a></p> <p>Devine released a series of <a href="https://twitter.com/neauoire/status/1189997719034761221">beautiful illustrations</a> for <a href="https://en.wikipedia.org/wiki/Inktober">Inktober</a>.</p> <p><a href="https://repl.it/">Repl.it</a> is our Sponsor. Email jobs@repl.it if you'd like to work on the future of coding.</p> <p>Folks interested in energy-efficient spatial programming should watch this <a href="https://www.infoq.com/presentations/power-144-chip/">Strange Loop talk</a> by <a href="https://en.wikipedia.org/wiki/Charles_H._Moore">Chuck Moore</a> about the <a href="https://en.wikipedia.org/wiki/Forth_(programming_language)">Forth</a> programming language.</p> <p>Potentially similar projects include <a href="https://en.wikipedia.org/wiki/Inferno_(operating_system)">Inferno</a> and <a href="https://github.com/vygr/ChrysaLisp">ChrysaLisp</a>.</p> <p>The <a href="https://www.youtube.com/watch?v=I4flQ8XdvJM">resilient, living systems</a> of <a href="https://www.cs.unm.edu/~ackley/">Dave Ackley</a> are also fascinating.</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it/">Repl.it</a> and can be found at <a href="https://futureofcoding.org/episodes/044#full-transcript">https://futureofcoding.org/episodes/044#full-transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ffc9ad47-af32-49d7-b82a-ab570012016e/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1580850508" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/44-making-your-own-tools-devine-lu-linvega/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">ffc9ad47-af32-49d7-b82a-ab570012016e</guid>
      <omny:clipId>ffc9ad47-af32-49d7-b82a-ab570012016e</omny:clipId>
      <pubDate>Tue, 04 Feb 2020 01:32:00 +0000</pubDate>
      <itunes:duration>3338</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ffc9ad47-af32-49d7-b82a-ab570012016e/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1580850508" length="53424059" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/44-making-your-own-tools-devine-lu-linvega</link>
      <psc:chapters>
        <psc:chapter start="00:00:00" title="We're back!" />
        <psc:chapter start="00:01:58" title="Introducing Devine" />
        <psc:chapter start="00:29:02" title="Sponsor: Repl.it" />
        <psc:chapter start="00:30:05" title="Devine's Tools" />
        <psc:chapter start="00:53:56" title="Conclusion" />
      </psc:chapters>
    </item>
    <item>
      <title>Unveiling Dark: Ellen Chisa &amp; Paul Biggar</title>
      <itunes:title>Unveiling Dark: Ellen Chisa &amp; Paul Biggar</itunes:title>
      <description><![CDATA[<p>Last Monday, Ellen Chisa and Paul Biggar unveiled <a href="https://darklang.com">Dark</a>, a new web-based programming environment for creating backend web services. In these conversations, first with Ellen and then with Paul, we discuss how they met, conceived of the idea, iterated on the product, and what their long-term vision is for the product.</p> <p>Dark is a web-based, structured editor with a data store built-in. It's code has a functional programming feel to it, but it also embraces what they call "functional/imperative". For example, their "error rail" allows programmers to defer handling nil-cases, much like a dynamically-typed language, but still keeps track of their existence in a monadic structure, like a statically-typed language, but without users having to learn anything about monads!</p> <p>Paul often brings the discussion of Dark back to Fred Brook's distinction in _No Silver Bullet_ between essential and accidental complexity. I had fun in this interview diving into the Aristotelian roots of that distinction. We also debated the meaning of the terms "no-code" and "low-code", and whether either could be applied to Dark.</p> <p>Dark removes accidental complexity around infrastructure and deployment. There is no separate step to deploy code in Dark. It's "deployless". Every single change to a Dark codebase is instantly (in 50ms, the time it takes to get your incremental change to the server) deployed to production servers. Of course this doesn't mean that every change you make is instantly deployed to _users_, but simply put on production servers behind a feature flag _ready_ to be rolled out at your discretion. Deployment, getting code running locally to run in production, is eliminated because all code is running on Dark's platform at all times. What remains is simply choosing when to release that code to users.</p> <p>One of my favorite parts of Dark is how readable its editor makes functional programming, which I typically find intimidating and difficult to parse. The Dark editor saves all past HTTP requests to all routes, and then uses those values to provide "live data" for every intermediate expression in that route. A dense section of code becomes totally comprehensible by clicking through each expression and seeing actual past values that have inhabited that expression. It combines of the best parts of a debugger and sprinkled console.log statements, but without the downsides of either.</p> <p>I'm glad that we had the opportunity in this conversation to dwell on some of the trade-offs of using Dark. Paul and Ellen are well aware of the risks customers face by moving their applications onto the Dark platform, and hope to alleviate those risks as much as possible. For example, they are looking into creating a legal structure that will make Dark open-source in the event that Dark shuts down.</p> <p>Paul Biggar is best-known in the Valley for co-founding CircleCI, a tool for continuous integration and deployment. At heart, he's a compilers nerd: he got a PhD in compilers, worked on the JavaScript compiler at Mozilla, built CircleCI which is a compiler for deployment, and is now building Dark, a programming language, environment, and infrastructure compiler.</p> <p>Ellen Chisa is passionate about helping people make things. She worked at Microsoft on Office Mobile, at Kickstarter, and started a company that built tools for travel agents, Lola.</p> <p>The full transcript for this episode was sponsored by repl.it and can be found at: <a href="https://futureofcoding.org/episodes/043#full-transcript">https://futureofcoding.org/episodes/043#full-transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Last Monday, Ellen Chisa and Paul Biggar unveiled <a href="https://darklang.com">Dark</a>, a new web-based programming environment for creating backend web services. In these conversations, first with Ellen and then with Paul, we discuss how they met, conceived of the idea, iterated on the product, and what their long-term vision is for the product.</p> <p>Dark is a web-based, structured editor with a data store built-in. It's code has a functional programming feel to it, but it also embraces what they call "functional/imperative". For example, their "error rail" allows programmers to defer handling nil-cases, much like a dynamically-typed language, but still keeps track of their existence in a monadic structure, like a statically-typed language, but without users having to learn anything about monads!</p> <p>Paul often brings the discussion of Dark back to Fred Brook's distinction in _No Silver Bullet_ between essential and accidental complexity. I had fun in this interview diving into the Aristotelian roots of that distinction. We also debated the meaning of the terms "no-code" and "low-code", and whether either could be applied to Dark.</p> <p>Dark removes accidental complexity around infrastructure and deployment. There is no separate step to deploy code in Dark. It's "deployless". Every single change to a Dark codebase is instantly (in 50ms, the time it takes to get your incremental change to the server) deployed to production servers. Of course this doesn't mean that every change you make is instantly deployed to _users_, but simply put on production servers behind a feature flag _ready_ to be rolled out at your discretion. Deployment, getting code running locally to run in production, is eliminated because all code is running on Dark's platform at all times. What remains is simply choosing when to release that code to users.</p> <p>One of my favorite parts of Dark is how readable its editor makes functional programming, which I typically find intimidating and difficult to parse. The Dark editor saves all past HTTP requests to all routes, and then uses those values to provide "live data" for every intermediate expression in that route. A dense section of code becomes totally comprehensible by clicking through each expression and seeing actual past values that have inhabited that expression. It combines of the best parts of a debugger and sprinkled console.log statements, but without the downsides of either.</p> <p>I'm glad that we had the opportunity in this conversation to dwell on some of the trade-offs of using Dark. Paul and Ellen are well aware of the risks customers face by moving their applications onto the Dark platform, and hope to alleviate those risks as much as possible. For example, they are looking into creating a legal structure that will make Dark open-source in the event that Dark shuts down.</p> <p>Paul Biggar is best-known in the Valley for co-founding CircleCI, a tool for continuous integration and deployment. At heart, he's a compilers nerd: he got a PhD in compilers, worked on the JavaScript compiler at Mozilla, built CircleCI which is a compiler for deployment, and is now building Dark, a programming language, environment, and infrastructure compiler.</p> <p>Ellen Chisa is passionate about helping people make things. She worked at Microsoft on Office Mobile, at Kickstarter, and started a company that built tools for travel agents, Lola.</p> <p>The full transcript for this episode was sponsored by repl.it and can be found at: <a href="https://futureofcoding.org/episodes/043#full-transcript">https://futureofcoding.org/episodes/043#full-transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/3dfee86a-d15e-43bd-b783-aacd00fe93c2/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1569440003" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/unveiling-dark-ellen-chisa-paul-biggar/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">3dfee86a-d15e-43bd-b783-aacd00fe93c2</guid>
      <omny:clipId>3dfee86a-d15e-43bd-b783-aacd00fe93c2</omny:clipId>
      <pubDate>Wed, 25 Sep 2019 19:30:00 +0000</pubDate>
      <itunes:duration>8820</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/3dfee86a-d15e-43bd-b783-aacd00fe93c2/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1569440003" length="141147456" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/unveiling-dark-ellen-chisa-paul-biggar</link>
    </item>
    <item>
      <title>Blurring the Line Between User and Programmer: Lane Shackleton</title>
      <itunes:title>Blurring the Line Between User and Programmer: Lane Shackleton</itunes:title>
      <description><![CDATA[<p dir="ltr">"The world's been divided into people who can make software, and the people who use software all day, and basically we think that that paradigm is not a good one. It feels kind of broken," says Lane Shackleton, Head of Product at Coda, where they are building a new kind of document that blurs the line between users and programmers.&nbsp;</p> <p>A Coda document starts out looking like a familiar online document, a lot like Google Docs. There's a blinking cursor, you can bold and italicize text, add images, and collaboratively edit it alongside others. But a Coda table is much more powerful than a traditional table that you'd find in a typical word processor. Like a spreadsheet, the a Coda table allows you to create complex relationship between pieces of data via a formula language. Upon closer examination, the Coda table is more structured than spreadsheets and more closely resembles a friendly relational database, like Airtable.</p> <p>If you're familiar with Notion, another augmented document medium, this all may sound familiar. Coda differentiates itself in a few ways. For one, it allows users to build complex (but no-code) trigger-based workflows from within the tool, such as when a table is modified or a button is pressed. For another, Coda really sells itself as an app-builder, in that teams can use Coda documents on their phones as native mobile apps. For example, a bike shop can have its employees easily swipe and snap a photo of inventory directly into a Coda table simply by creating a photo column in that table. Coda takes care of converting that column into an interface that automatically pulls up the camera on mobile.</p> <p dir="ltr">Coda was inspired by the founders' experience at YouTube, where the company "ran on spreadsheets," but now they dream of building a medium that fundamentally changes how people see themselves, as creators instead of merely as consumers, and reshapes the way teams, communities, and even families collaborate and function. It's a big vision, and Coda has a long way to go.</p> <p dir="ltr">This episode was sponsored by Replit. The transcript can be found here: <a href="https://futureofcoding.org/episodes/039#transcript">https://futureofcoding.org/episodes/041#transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p dir="ltr">"The world's been divided into people who can make software, and the people who use software all day, and basically we think that that paradigm is not a good one. It feels kind of broken," says Lane Shackleton, Head of Product at Coda, where they are building a new kind of document that blurs the line between users and programmers.&nbsp;</p> <p>A Coda document starts out looking like a familiar online document, a lot like Google Docs. There's a blinking cursor, you can bold and italicize text, add images, and collaboratively edit it alongside others. But a Coda table is much more powerful than a traditional table that you'd find in a typical word processor. Like a spreadsheet, the a Coda table allows you to create complex relationship between pieces of data via a formula language. Upon closer examination, the Coda table is more structured than spreadsheets and more closely resembles a friendly relational database, like Airtable.</p> <p>If you're familiar with Notion, another augmented document medium, this all may sound familiar. Coda differentiates itself in a few ways. For one, it allows users to build complex (but no-code) trigger-based workflows from within the tool, such as when a table is modified or a button is pressed. For another, Coda really sells itself as an app-builder, in that teams can use Coda documents on their phones as native mobile apps. For example, a bike shop can have its employees easily swipe and snap a photo of inventory directly into a Coda table simply by creating a photo column in that table. Coda takes care of converting that column into an interface that automatically pulls up the camera on mobile.</p> <p dir="ltr">Coda was inspired by the founders' experience at YouTube, where the company "ran on spreadsheets," but now they dream of building a medium that fundamentally changes how people see themselves, as creators instead of merely as consumers, and reshapes the way teams, communities, and even families collaborate and function. It's a big vision, and Coda has a long way to go.</p> <p dir="ltr">This episode was sponsored by Replit. The transcript can be found here: <a href="https://futureofcoding.org/episodes/039#transcript">https://futureofcoding.org/episodes/041#transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/05a74754-175b-4c16-a04c-aaaa010bc2ed/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1565886651" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/blurring-the-line-between-user-and-programming-lan/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">05a74754-175b-4c16-a04c-aaaa010bc2ed</guid>
      <omny:clipId>05a74754-175b-4c16-a04c-aaaa010bc2ed</omny:clipId>
      <pubDate>Thu, 15 Aug 2019 16:30:00 +0000</pubDate>
      <itunes:duration>6031</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/05a74754-175b-4c16-a04c-aaaa010bc2ed/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1565886651" length="96516146" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/blurring-the-line-between-user-and-programming-lan</link>
    </item>
    <item>
      <title>The Aesthetics of Programming Tools: Jack Rusher</title>
      <itunes:title>The Aesthetics of Programming Tools: Jack Rusher</itunes:title>
      <description><![CDATA[<p><em><a href="http://spiralganglion.com/">Ivan Reese</a> guest hosts.</em></p> <p>I've been intimidated by <a href="http://jackrusher.com/">Jack Rusher</a> from the first blush. I mean, he's wearing a high-collared fur coat and black sunglasses in his Twitter pic, and his bio includes "Bell Labs Researcher". So when tasked with choosing a subject for my first interview, I immediately reached out to him, leaning in to my nervousness. His reply included the detail that he's "generally hostile to the form" of podcasting. Terrifying.</p> <p>When we talked, it was about Lisp &mdash; several flavours of Scheme and Racket, Common Lisp, Lisp machines, Black, Clojure, parens of all stripes. It was also about aesthetics, and graphic design, the relative ignorance of typical programming tools to the capability of the visual cortex, and how to better tap it. This podcast's streak of discussions about Coq, miniKanren, TLA+, and Alloy continues, with the addition of QuickCheck and the like. Jack presents his work on a literate editor for Clojure called <a href="https://www.maria.cloud/">Maria.cloud</a>, an environment that makes a number of unusual and interesting choices both in the design and implementation, reaching for an ideal blend of features that afford both instant beginner enthusiasm and unrestricted expert use. We pay our respects to the phenomenal red carpet that video games roll out to new players, inviting them in to the model and mechanics of the game with an apparent ease and apt ability that should be the envy of programming toolsmiths like us. The show ends with Jack sharing an excellent collection of plugs, ranging from academic papers by the relatively obscure St&eacute;phane Conversy, to the aesthetically-lush programming tools pouring out of Hundredrabbits's Devine Lu Linvega.</p> <p>I am no longer terrified of Jack's persona. Rather, I am now humbled by his towering expertise and the wildly varied accomplishments of his career, and it was a thrill to get to tour them in this interview. Best quote of the show: "A kind of grotesque capitulation to sameness." Damn, Jack!</p> <p><strong>Links</strong></p> <p><a href="http://jackrusher.com/">Jack Rusher</a> is our esteemed guest. He is on <a href="https://twitter.com/jackrusher">Twitter</a>, <a href="https://instagram.com/jackrusher">Instagram</a>, and <a href="https://soundcloud.com/jackrusher">SoundCloud</a>. <a href="http://www.appliedscience.studio/">Applied Science</a> is his consultancy, and <a href="https://www.maria.cloud/">Maria.cloud</a> is their beautifully designed literate Clojure editor.</p> <p><a href="http://spiralganglion.com/">Ivan Reese</a> hosts. He's on <a href="http://twitter.com/spiralganglion">Twitter</a>, works on <a href="https://www.lunchboxsessions.com/">educational media</a>, is making a <a href="https://twitter.com/spiralganglion/status/1145028588715950080">visual programming tool</a>, and plays <a href="https://spiralganglion.bandcamp.com/">100 instruments &mdash; badly</a>. He started life with <a href="http://www.bbc.com/future/story/20190722-the-apple-software-that-inspired-the-internet">HyperCard</a> and now loves <a href="https://cycling74.com/">Max/MSP</a>.</p> <p><a href="https://repl.it/">Repl.it</a> is our Sponsor. Email jobs@repl.it if you'd like to work on the future of coding.</p> <p><a href="https://en.wikipedia.org/wiki/Complex_event_processing">Complex Event Processing</a> is a bit of technology Jack helped commercialize.</p> <p><a href="https://clojureverse.org/">ClojureVerse</a>&nbsp;is where a discussion of <a href="https://www.luna-lang.org/">Luna</a> led to the <a href="https://github.com/ivanreese/visual-programming-codex">Visual Programming Codex</a>, based on the <a href="https://github.com/shaunlebron/history-of-lisp-parens">History of Lisp Parens</a> by <a href="https://twitter.com/shaunlebron">Shaun Lebron</a>.</p> <p><a href="https://en.wikipedia.org/wiki/QuickCheck">QuickCheck</a>, <a href="http://minikanren.org/">miniKanren</a>, <a href="https://en.wikipedia.org/wiki/Datalog">Datalog</a>, <a href="https://www.youtube.com/watch?v=SrKj4hYic5A">Black Scheme</a>, and <a href="https://dl.acm.org/author_page.cfm?id=81100177557">Oleg Kiselyov</a> are touched on. <a href="http://curtclifton.net/papers/MoseleyMarks06a.pdf">Out of the Tar Pit</a> has its mandatory mention, and then <a href="https://cisco.github.io/ChezScheme/">Chez Scheme</a> saves the day.</p> <p><em>I wanted to link to the <strong>Maru</strong> project but the author, Ian Piumata's website seems to be down and I could find no other canonical reference. There's some discussion on Hacker News and such. If you know of a good link, I'd love a PR.</em></p> <p><a href="http://www.pawfal.org/dave/index.cgi?Projects/Scheme%20Bricks">Scheme Bricks</a> and Media Molecule's <a href="http://dreams.mediamolecule.com/">Dreams</a> are interesting touchstones on the road to future visual programming languages. Ivan has an affinity for <a href="https://en.wikipedia.org/wiki/Pure_Data">Pure Data</a> and <a href="https://cycling74.com/">Max/MSP</a> and <a href="https://vvvv.org/">vvvv</a>.</p> <p>When talking about tools for beginners versus experts, Rich Hickey's <a href="https://www.infoq.com/presentations/Design-Composition-Performance/">Design, Composition, and Performance</a> is invoked &mdash; and poor <a href="https://en.wikipedia.org/wiki/Dmitri_Shostakovich">Shostakovich</a>.</p> <p>Jack's main is <a href="https://www.maria.cloud/">Maria.cloud</a>, named in honour of <a href="https://en.wikipedia.org/wiki/Maria_Montessori">Maria Montessori</a>. <a href="https://en.wikipedia.org/wiki/Structure_and_Interpretation_of_Computer_Programs">SICP</a> gets a nod. Maria has proven useful at <a href="https://clojurebridge.org/">Clojure Bridge</a>. <a href="https://matt.is/">Matt Hubert</a> [<a href="https://twitter.com/mhuebert">Twitter</a>] created the <a href="https://www.maria.cloud/cells">Cells</a> abstraction that Maria was eventually built atop &mdash; it's similar to <a href="https://observablehq.com/">ObservableHQ</a>.</p> <p>Video games like <a href="https://en.wikipedia.org/wiki/Steel_Battalion">Steel Battalion</a>, <a href="https://en.wikipedia.org/wiki/The_Witness_(2016_video_game)">The Witness</a>, and <a href="https://en.wikipedia.org/wiki/Dead_Space_(video_game)">Dead Space</a> have strong opinions about how much, or how little, visual interface to expose to the player. Complex 3D tools like <a href="https://en.wikipedia.org/wiki/Autodesk_Maya">Maya</a> and <a href="https://en.wikipedia.org/wiki/Autodesk_3ds_Max">3D Studio Max</a> are GUI inspirations for Ivan, where Jack and Matt prefer simplicity, so much so that Matt wrote <a href="http://px16.matt.is/">When I Sit Down At My Editor, I Feel Relaxed</a>. <a href="https://www.daveliepmann.com/">Dave Liepmann</a> is the third leg of the stool in <a href="http://www.appliedscience.studio/">Applied Science</a>, Jack's consultancy.</p> <p>Maria originally had a deployment feature like <a href="https://glitch.com/">Glitch</a>. There's a great talk about Maria by the Applied Science trio, containing a mini-talk called <a href="https://www.youtube.com/watch?v=CUBHrS4ZzO4&amp;start=1053">Maria for experts</a> by Jack.</p> <p><a href="https://pharo.org/">Pharo</a> is an inspiring modern Smalltalk.</p> <p><a href="https://github.com/disconcision/fructure">Fructure</a> is a wildly cool new structured editor, and its designer <a href="https://twitter.com/disconcision">Andrew Blinn</a> is fantastic on Twitter.</p> <p><a href="https://github.com/digego/extempore">Extempore</a> and <a href="http://extempore.moso.com.au/temporal_recursion.html">Temporal Recursion</a> by Andrew Sorensen offer some interesting foundations for future visual programming tools.</p> <p><a href="https://sonic-pi.net/">Sonic Pi</a> and <a href="http://overtone.github.io/">Overtone</a> are lovely audio tools by <a href="http://sam.aaron.name/">Sam Aaron</a>, widely praised and deservedly so, and everyone should back <a href="https://www.patreon.com/samaaron">Sam's Patreon</a>.</p> <p><a href="https://hal.inria.fr/hal-00737414">A visual perception account of programming languages: finding the natural science in the art</a> and <a href="https://dl.acm.org/citation.cfm?id=2661138">Unifying Textual and Visual: A Theoretical Account of the Visual Perception of Programming Languages</a> are obscure but beautiful papers by St&eacute;phane Conversy.</p> <p><a href="https://www.researchgate.net/publication/2517392_Aesthetic_Programming">Aesthetic Programming</a> is one of Ivan's favourites, and the author Paul Fishwick just so happened to teach Jack's graphics programming class at Uni.</p> <p><a href="https://github.com/Hundredrabbits/Orca">Orca</a> is a mind-bending textual-visual-musical hybrid programming tool by <a href="https://github.com/Hundredrabbits">Hundredrabbits</a>, who are <a href="https://twitter.com/Neauoire">Devine Lu Linvega</a> and <a href="https://twitter.com/RekkaBell">Rekka Bell</a>. Notwithstanding that they <a href="https://www.patreon.com/100">live on a sailboat(!)</a>, they do an amazing job of presenting their work and everyone in our community should take stock of how they accomplish that.</p> <p><a href="https://www.ableton.com/en/push/">Ableton Push</a> and <a href="https://www.ableton.com/en/live/">Ableton Live</a> are practically state-issued music tools in Berlin. (Not to mention &mdash; Ivan edited this podcast in Live, natch.)</p> <p><a href="http://thi.ng/">thi.ng</a> and <a href="https://github.com/thi-ng/umbrella/">@thi.ng/umbrella</a> are Jurassic-scale libraries by <a href="https://twitter.com/toxi">Karsten Schmidt</a>, who wrote <a href="https://medium.com/@thi.ng/of-umbrellas-transducers-reactive-streams-mushrooms-pt-1-a8717ce3a170">blog posts about Clojure's Reducers in TypeScript</a>.</p> <p>Finally, <a href="https://nextjournal.com/">Nextjournal</a> are doing great work with their multi-lingual online scientific notebook environment.</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it">Repl.it</a> and can be found at <a href="https://futureofcoding.org/episodes/041#full-transcript">https://futureofcoding.org/episodes/041#full-transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p><em><a href="http://spiralganglion.com/">Ivan Reese</a> guest hosts.</em></p> <p>I've been intimidated by <a href="http://jackrusher.com/">Jack Rusher</a> from the first blush. I mean, he's wearing a high-collared fur coat and black sunglasses in his Twitter pic, and his bio includes "Bell Labs Researcher". So when tasked with choosing a subject for my first interview, I immediately reached out to him, leaning in to my nervousness. His reply included the detail that he's "generally hostile to the form" of podcasting. Terrifying.</p> <p>When we talked, it was about Lisp &mdash; several flavours of Scheme and Racket, Common Lisp, Lisp machines, Black, Clojure, parens of all stripes. It was also about aesthetics, and graphic design, the relative ignorance of typical programming tools to the capability of the visual cortex, and how to better tap it. This podcast's streak of discussions about Coq, miniKanren, TLA+, and Alloy continues, with the addition of QuickCheck and the like. Jack presents his work on a literate editor for Clojure called <a href="https://www.maria.cloud/">Maria.cloud</a>, an environment that makes a number of unusual and interesting choices both in the design and implementation, reaching for an ideal blend of features that afford both instant beginner enthusiasm and unrestricted expert use. We pay our respects to the phenomenal red carpet that video games roll out to new players, inviting them in to the model and mechanics of the game with an apparent ease and apt ability that should be the envy of programming toolsmiths like us. The show ends with Jack sharing an excellent collection of plugs, ranging from academic papers by the relatively obscure St&eacute;phane Conversy, to the aesthetically-lush programming tools pouring out of Hundredrabbits's Devine Lu Linvega.</p> <p>I am no longer terrified of Jack's persona. Rather, I am now humbled by his towering expertise and the wildly varied accomplishments of his career, and it was a thrill to get to tour them in this interview. Best quote of the show: "A kind of grotesque capitulation to sameness." Damn, Jack!</p> <p><strong>Links</strong></p> <p><a href="http://jackrusher.com/">Jack Rusher</a> is our esteemed guest. He is on <a href="https://twitter.com/jackrusher">Twitter</a>, <a href="https://instagram.com/jackrusher">Instagram</a>, and <a href="https://soundcloud.com/jackrusher">SoundCloud</a>. <a href="http://www.appliedscience.studio/">Applied Science</a> is his consultancy, and <a href="https://www.maria.cloud/">Maria.cloud</a> is their beautifully designed literate Clojure editor.</p> <p><a href="http://spiralganglion.com/">Ivan Reese</a> hosts. He's on <a href="http://twitter.com/spiralganglion">Twitter</a>, works on <a href="https://www.lunchboxsessions.com/">educational media</a>, is making a <a href="https://twitter.com/spiralganglion/status/1145028588715950080">visual programming tool</a>, and plays <a href="https://spiralganglion.bandcamp.com/">100 instruments &mdash; badly</a>. He started life with <a href="http://www.bbc.com/future/story/20190722-the-apple-software-that-inspired-the-internet">HyperCard</a> and now loves <a href="https://cycling74.com/">Max/MSP</a>.</p> <p><a href="https://repl.it/">Repl.it</a> is our Sponsor. Email jobs@repl.it if you'd like to work on the future of coding.</p> <p><a href="https://en.wikipedia.org/wiki/Complex_event_processing">Complex Event Processing</a> is a bit of technology Jack helped commercialize.</p> <p><a href="https://clojureverse.org/">ClojureVerse</a>&nbsp;is where a discussion of <a href="https://www.luna-lang.org/">Luna</a> led to the <a href="https://github.com/ivanreese/visual-programming-codex">Visual Programming Codex</a>, based on the <a href="https://github.com/shaunlebron/history-of-lisp-parens">History of Lisp Parens</a> by <a href="https://twitter.com/shaunlebron">Shaun Lebron</a>.</p> <p><a href="https://en.wikipedia.org/wiki/QuickCheck">QuickCheck</a>, <a href="http://minikanren.org/">miniKanren</a>, <a href="https://en.wikipedia.org/wiki/Datalog">Datalog</a>, <a href="https://www.youtube.com/watch?v=SrKj4hYic5A">Black Scheme</a>, and <a href="https://dl.acm.org/author_page.cfm?id=81100177557">Oleg Kiselyov</a> are touched on. <a href="http://curtclifton.net/papers/MoseleyMarks06a.pdf">Out of the Tar Pit</a> has its mandatory mention, and then <a href="https://cisco.github.io/ChezScheme/">Chez Scheme</a> saves the day.</p> <p><em>I wanted to link to the <strong>Maru</strong> project but the author, Ian Piumata's website seems to be down and I could find no other canonical reference. There's some discussion on Hacker News and such. If you know of a good link, I'd love a PR.</em></p> <p><a href="http://www.pawfal.org/dave/index.cgi?Projects/Scheme%20Bricks">Scheme Bricks</a> and Media Molecule's <a href="http://dreams.mediamolecule.com/">Dreams</a> are interesting touchstones on the road to future visual programming languages. Ivan has an affinity for <a href="https://en.wikipedia.org/wiki/Pure_Data">Pure Data</a> and <a href="https://cycling74.com/">Max/MSP</a> and <a href="https://vvvv.org/">vvvv</a>.</p> <p>When talking about tools for beginners versus experts, Rich Hickey's <a href="https://www.infoq.com/presentations/Design-Composition-Performance/">Design, Composition, and Performance</a> is invoked &mdash; and poor <a href="https://en.wikipedia.org/wiki/Dmitri_Shostakovich">Shostakovich</a>.</p> <p>Jack's main is <a href="https://www.maria.cloud/">Maria.cloud</a>, named in honour of <a href="https://en.wikipedia.org/wiki/Maria_Montessori">Maria Montessori</a>. <a href="https://en.wikipedia.org/wiki/Structure_and_Interpretation_of_Computer_Programs">SICP</a> gets a nod. Maria has proven useful at <a href="https://clojurebridge.org/">Clojure Bridge</a>. <a href="https://matt.is/">Matt Hubert</a> [<a href="https://twitter.com/mhuebert">Twitter</a>] created the <a href="https://www.maria.cloud/cells">Cells</a> abstraction that Maria was eventually built atop &mdash; it's similar to <a href="https://observablehq.com/">ObservableHQ</a>.</p> <p>Video games like <a href="https://en.wikipedia.org/wiki/Steel_Battalion">Steel Battalion</a>, <a href="https://en.wikipedia.org/wiki/The_Witness_(2016_video_game)">The Witness</a>, and <a href="https://en.wikipedia.org/wiki/Dead_Space_(video_game)">Dead Space</a> have strong opinions about how much, or how little, visual interface to expose to the player. Complex 3D tools like <a href="https://en.wikipedia.org/wiki/Autodesk_Maya">Maya</a> and <a href="https://en.wikipedia.org/wiki/Autodesk_3ds_Max">3D Studio Max</a> are GUI inspirations for Ivan, where Jack and Matt prefer simplicity, so much so that Matt wrote <a href="http://px16.matt.is/">When I Sit Down At My Editor, I Feel Relaxed</a>. <a href="https://www.daveliepmann.com/">Dave Liepmann</a> is the third leg of the stool in <a href="http://www.appliedscience.studio/">Applied Science</a>, Jack's consultancy.</p> <p>Maria originally had a deployment feature like <a href="https://glitch.com/">Glitch</a>. There's a great talk about Maria by the Applied Science trio, containing a mini-talk called <a href="https://www.youtube.com/watch?v=CUBHrS4ZzO4&amp;start=1053">Maria for experts</a> by Jack.</p> <p><a href="https://pharo.org/">Pharo</a> is an inspiring modern Smalltalk.</p> <p><a href="https://github.com/disconcision/fructure">Fructure</a> is a wildly cool new structured editor, and its designer <a href="https://twitter.com/disconcision">Andrew Blinn</a> is fantastic on Twitter.</p> <p><a href="https://github.com/digego/extempore">Extempore</a> and <a href="http://extempore.moso.com.au/temporal_recursion.html">Temporal Recursion</a> by Andrew Sorensen offer some interesting foundations for future visual programming tools.</p> <p><a href="https://sonic-pi.net/">Sonic Pi</a> and <a href="http://overtone.github.io/">Overtone</a> are lovely audio tools by <a href="http://sam.aaron.name/">Sam Aaron</a>, widely praised and deservedly so, and everyone should back <a href="https://www.patreon.com/samaaron">Sam's Patreon</a>.</p> <p><a href="https://hal.inria.fr/hal-00737414">A visual perception account of programming languages: finding the natural science in the art</a> and <a href="https://dl.acm.org/citation.cfm?id=2661138">Unifying Textual and Visual: A Theoretical Account of the Visual Perception of Programming Languages</a> are obscure but beautiful papers by St&eacute;phane Conversy.</p> <p><a href="https://www.researchgate.net/publication/2517392_Aesthetic_Programming">Aesthetic Programming</a> is one of Ivan's favourites, and the author Paul Fishwick just so happened to teach Jack's graphics programming class at Uni.</p> <p><a href="https://github.com/Hundredrabbits/Orca">Orca</a> is a mind-bending textual-visual-musical hybrid programming tool by <a href="https://github.com/Hundredrabbits">Hundredrabbits</a>, who are <a href="https://twitter.com/Neauoire">Devine Lu Linvega</a> and <a href="https://twitter.com/RekkaBell">Rekka Bell</a>. Notwithstanding that they <a href="https://www.patreon.com/100">live on a sailboat(!)</a>, they do an amazing job of presenting their work and everyone in our community should take stock of how they accomplish that.</p> <p><a href="https://www.ableton.com/en/push/">Ableton Push</a> and <a href="https://www.ableton.com/en/live/">Ableton Live</a> are practically state-issued music tools in Berlin. (Not to mention &mdash; Ivan edited this podcast in Live, natch.)</p> <p><a href="http://thi.ng/">thi.ng</a> and <a href="https://github.com/thi-ng/umbrella/">@thi.ng/umbrella</a> are Jurassic-scale libraries by <a href="https://twitter.com/toxi">Karsten Schmidt</a>, who wrote <a href="https://medium.com/@thi.ng/of-umbrellas-transducers-reactive-streams-mushrooms-pt-1-a8717ce3a170">blog posts about Clojure's Reducers in TypeScript</a>.</p> <p>Finally, <a href="https://nextjournal.com/">Nextjournal</a> are doing great work with their multi-lingual online scientific notebook environment.</p> <p>The transcript for this episode was sponsored by <a href="https://repl.it">Repl.it</a> and can be found at <a href="https://futureofcoding.org/episodes/041#full-transcript">https://futureofcoding.org/episodes/041#full-transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/334f616f-2025-4ddc-b3ab-aa95002aa40b/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1564157625" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/41-the-aesthetics-of-programming-tools-jack-rusher/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">334f616f-2025-4ddc-b3ab-aa95002aa40b</guid>
      <omny:clipId>334f616f-2025-4ddc-b3ab-aa95002aa40b</omny:clipId>
      <pubDate>Fri, 26 Jul 2019 16:13:00 +0000</pubDate>
      <itunes:duration>6055</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/334f616f-2025-4ddc-b3ab-aa95002aa40b/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1564157625" length="96895217" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/41-the-aesthetics-of-programming-tools-jack-rusher</link>
    </item>
    <item>
      <title>Joining Logic, Relational, and Functional Programming: Michael Arntzenius</title>
      <itunes:title>Joining Logic, Relational, and Functional Programming: Michael Arntzenius</itunes:title>
      <description><![CDATA[<p>This episode explores the intersections between various flavors of math and programming, and the ways in which they can be mixed, matched, and combined. Michael Arntzenius, "rntz" for short, is a PhD student at the University of Birmingham building a programming language that combines some of the best features of logic, relational, and functional programming. The goal of the project is "to find a sweet spot of something that is more powerful than Datalog, but still constrained enough that we can apply existing optimizations to it and imitate what has been done in the database community and the Datalog community." The challenge is combining the key part of Datalog (simple relational computations without worrying too much underlying representations) and of functional programming (being able to abstract out repeated patterns) in a way that is reasonably performant.</p> <p>This is a wide-ranging conversation including: Lisp macros, FRP, Eve, miniKanren, decidability, computability, higher-order logics and their correspondence to higher-order types, lattices, partial orders, avoiding logical paradoxes by disallowing negation (or requiring monotonicity) in self reference (or recursion), modal logic, CRDTS (which are semi-lattices), and the place for formalism is programming. This was a great opportunity for me to brush up on (or learn for the first time) some useful mathematical and type theory key words. Hope you get a lot out of it as well -- enjoy!</p> <p>The transcript for this episode was sponsored by Repl.it and can be found at <a href="https://futureofcoding.org/episodes/039#full-transcript">https://futureofcoding.org/episodes/040#full-transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>This episode explores the intersections between various flavors of math and programming, and the ways in which they can be mixed, matched, and combined. Michael Arntzenius, "rntz" for short, is a PhD student at the University of Birmingham building a programming language that combines some of the best features of logic, relational, and functional programming. The goal of the project is "to find a sweet spot of something that is more powerful than Datalog, but still constrained enough that we can apply existing optimizations to it and imitate what has been done in the database community and the Datalog community." The challenge is combining the key part of Datalog (simple relational computations without worrying too much underlying representations) and of functional programming (being able to abstract out repeated patterns) in a way that is reasonably performant.</p> <p>This is a wide-ranging conversation including: Lisp macros, FRP, Eve, miniKanren, decidability, computability, higher-order logics and their correspondence to higher-order types, lattices, partial orders, avoiding logical paradoxes by disallowing negation (or requiring monotonicity) in self reference (or recursion), modal logic, CRDTS (which are semi-lattices), and the place for formalism is programming. This was a great opportunity for me to brush up on (or learn for the first time) some useful mathematical and type theory key words. Hope you get a lot out of it as well -- enjoy!</p> <p>The transcript for this episode was sponsored by Repl.it and can be found at <a href="https://futureofcoding.org/episodes/039#full-transcript">https://futureofcoding.org/episodes/040#full-transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/00e6e8ee-814e-4cf7-8ea3-aa6b00f41678/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1560437549" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/40-joining-logic-relational-and-functional-program/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">00e6e8ee-814e-4cf7-8ea3-aa6b00f41678</guid>
      <omny:clipId>00e6e8ee-814e-4cf7-8ea3-aa6b00f41678</omny:clipId>
      <pubDate>Thu, 13 Jun 2019 14:52:00 +0000</pubDate>
      <itunes:duration>6794</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/00e6e8ee-814e-4cf7-8ea3-aa6b00f41678/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1560437549" length="108718911" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/40-joining-logic-relational-and-functional-program</link>
    </item>
    <item>
      <title>Mathematical Foundations for the Activity of Programming: Cyrus Omar</title>
      <itunes:title>Mathematical Foundations for the Activity of Programming: Cyrus Omar</itunes:title>
      <description><![CDATA[<p>Usually when we think of mathematics and programming languages, we think of tedious, didactic proofs that have nothing to do with our day to day experience of programming. And when we think of developer tools, we picture the practical, imperfect tools we use every day: text editors, build systems, libraries, etc. Cyrus Omar is new computer science professor at the University of Michigan bridging these disciplines by creating the foundations to precisely reason about the&nbsp;<em>experience</em>&nbsp;of programming.</p> <p>We open the conversation with how Cyrus got his start in computational biology, but how his dissatisfaction with the tooling led him to eventually to PL theory. At the time of this conversation Cyrus was interviewing for tenure-track positions, so we discussed the pros and cons of getting a PhD, being a post doc, and finding a job in academia. (He recently accepted a job at University of Michigan.) I enjoyed riffing with him on new media or platforms to accelerate science instead of the "dead tree of knowledge", including Cyrus's vision for a "computational Wikipedia" built on top of Hazel. Ultimately Cyrus shares the vision of democratizing computation, and we talked about how he imagines extending the Hazel project to be able to embed GUIs inside Hazel expressions, which can in turn contain arbitrary Hazel expressions or other GUIs.</p> <p>I loved our conversation about some of the classic touch points for improving programming - projectional editors, feedback loops, end user programming - but from a more academic perspective then usual. Hope you enjoy as well!</p> <p>Transcript at futureofcoding.org/episodes/039#transcript, provided by Replit.&nbsp;</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Usually when we think of mathematics and programming languages, we think of tedious, didactic proofs that have nothing to do with our day to day experience of programming. And when we think of developer tools, we picture the practical, imperfect tools we use every day: text editors, build systems, libraries, etc. Cyrus Omar is new computer science professor at the University of Michigan bridging these disciplines by creating the foundations to precisely reason about the&nbsp;<em>experience</em>&nbsp;of programming.</p> <p>We open the conversation with how Cyrus got his start in computational biology, but how his dissatisfaction with the tooling led him to eventually to PL theory. At the time of this conversation Cyrus was interviewing for tenure-track positions, so we discussed the pros and cons of getting a PhD, being a post doc, and finding a job in academia. (He recently accepted a job at University of Michigan.) I enjoyed riffing with him on new media or platforms to accelerate science instead of the "dead tree of knowledge", including Cyrus's vision for a "computational Wikipedia" built on top of Hazel. Ultimately Cyrus shares the vision of democratizing computation, and we talked about how he imagines extending the Hazel project to be able to embed GUIs inside Hazel expressions, which can in turn contain arbitrary Hazel expressions or other GUIs.</p> <p>I loved our conversation about some of the classic touch points for improving programming - projectional editors, feedback loops, end user programming - but from a more academic perspective then usual. Hope you enjoy as well!</p> <p>Transcript at futureofcoding.org/episodes/039#transcript, provided by Replit.&nbsp;</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/0365d730-8f78-4078-a2b7-aa2e0132ae23/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1559914937" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/39-mathematical-foundations-for-the-activity-of-pr/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">0365d730-8f78-4078-a2b7-aa2e0132ae23</guid>
      <omny:clipId>0365d730-8f78-4078-a2b7-aa2e0132ae23</omny:clipId>
      <pubDate>Fri, 07 Jun 2019 13:41:00 +0000</pubDate>
      <itunes:duration>8002</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/0365d730-8f78-4078-a2b7-aa2e0132ae23/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1559914937" length="128054950" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/39-mathematical-foundations-for-the-activity-of-pr</link>
    </item>
    <item>
      <title>The Case for Formal Methods: Hillel Wayne</title>
      <itunes:title>The Case for Formal Methods: Hillel Wayne</itunes:title>
      <description><![CDATA[<p>Hillel Wayne is a technical writer and consultant on a variety of formal methods, including TLA+ and Alloy. In this episode, Hillel gives a whirlwind tour of the 4 main flavors of formal methods, and explains which are practical today and which we may have to wait patiently for. The episode begins with a very silly joke from Steve (about a radioactive Leslie Lamport) and if you make it to the end you're in store for a few fun tales from Twitter.</p> <p><a href="https://futureofcoding.org/episodes/038">https://futureofcoding.org/episodes/038</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Hillel Wayne is a technical writer and consultant on a variety of formal methods, including TLA+ and Alloy. In this episode, Hillel gives a whirlwind tour of the 4 main flavors of formal methods, and explains which are practical today and which we may have to wait patiently for. The episode begins with a very silly joke from Steve (about a radioactive Leslie Lamport) and if you make it to the end you're in store for a few fun tales from Twitter.</p> <p><a href="https://futureofcoding.org/episodes/038">https://futureofcoding.org/episodes/038</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/cc83fb0e-e7e8-4c93-82bb-aa2c001b84f2/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1554947108" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/38-the-case-for-formal-methods-hillel-wayne/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">cc83fb0e-e7e8-4c93-82bb-aa2c001b84f2</guid>
      <omny:clipId>cc83fb0e-e7e8-4c93-82bb-aa2c001b84f2</omny:clipId>
      <pubDate>Thu, 11 Apr 2019 01:44:00 +0000</pubDate>
      <itunes:duration>5623</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/cc83fb0e-e7e8-4c93-82bb-aa2c001b84f2/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1554947108" length="89994279" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/38-the-case-for-formal-methods-hillel-wayne</link>
    </item>
    <item>
      <title>De-Nerding Programming: Jonathan Edwards</title>
      <itunes:title>De-Nerding Programming: Jonathan Edwards</itunes:title>
      <description><![CDATA[<p>Jonathan Edwards is an independent researcher working on drastically simplifying programming for beginners. He is known for his&nbsp;<a href="http://subtext-lang.org/">Subtext</a>&nbsp;series of programming language experiments and his&nbsp;<a href="http://alarmingdevelopment.org/">Alarming Development</a>&nbsp;blog. He has been a researcher at MIT CSAIL and CDG/HARC. He tweets&nbsp;<a href="https://twitter.com/jonathoda">@jonathoda</a>.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Jonathan Edwards is an independent researcher working on drastically simplifying programming for beginners. He is known for his&nbsp;<a href="http://subtext-lang.org/">Subtext</a>&nbsp;series of programming language experiments and his&nbsp;<a href="http://alarmingdevelopment.org/">Alarming Development</a>&nbsp;blog. He has been a researcher at MIT CSAIL and CDG/HARC. He tweets&nbsp;<a href="https://twitter.com/jonathoda">@jonathoda</a>.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/33f216af-bca1-4d2f-8cd2-a9fb00efd17f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1551550426" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/37-de-nerding-programming-jonathan-edwards/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">33f216af-bca1-4d2f-8cd2-a9fb00efd17f</guid>
      <omny:clipId>33f216af-bca1-4d2f-8cd2-a9fb00efd17f</omny:clipId>
      <pubDate>Sat, 02 Mar 2019 18:13:00 +0000</pubDate>
      <itunes:duration>6500</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/33f216af-bca1-4d2f-8cd2-a9fb00efd17f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1551550426" length="104014628" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/37-de-nerding-programming-jonathan-edwards</link>
    </item>
    <item>
      <title>Moldable Development: Tudor Girba</title>
      <itunes:title>Moldable Development: Tudor Girba</itunes:title>
      <description><![CDATA[<p>Tudor Girba builds tools and techniques for improving the productivity and happiness of software teams. He currently works on the Glamorous Toolkit, a "moldable development environment" for Pharo, that developers can easily adopt to suit their needs. Tudor is a self-proclaimed "software environmentalist", sounding the alarm about how quickly we create code, and how slowly we recycle it.</p> <p>https://futureofcoding.org/episodes/036</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Tudor Girba builds tools and techniques for improving the productivity and happiness of software teams. He currently works on the Glamorous Toolkit, a "moldable development environment" for Pharo, that developers can easily adopt to suit their needs. Tudor is a self-proclaimed "software environmentalist", sounding the alarm about how quickly we create code, and how slowly we recycle it.</p> <p>https://futureofcoding.org/episodes/036</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/cb4b5849-78be-4a4e-9888-a9e400a49229/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1550076213" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/36-moldable-development-tudor-girba/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">cb4b5849-78be-4a4e-9888-a9e400a49229</guid>
      <omny:clipId>cb4b5849-78be-4a4e-9888-a9e400a49229</omny:clipId>
      <pubDate>Wed, 13 Feb 2019 16:43:00 +0000</pubDate>
      <itunes:duration>10349</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/cb4b5849-78be-4a4e-9888-a9e400a49229/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1550076213" length="165606752" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/36-moldable-development-tudor-girba</link>
    </item>
    <item>
      <title>Democratizing Web Design: Vlad Magdalin</title>
      <itunes:title>Democratizing Web Design: Vlad Magdalin</itunes:title>
      <description><![CDATA[<p>Vlad Magdalin is the CEO &amp; co-founder of Webflow, a WYSIWYG website builder and CMS that's a thin layer of abstratction over HTML, CSS, and JavaScript. In this conversation we discussed Vlad's Bret Victor origin story, the differences between live programming and direct manipulation, and why web design has resisted direct manipulation pro tools for so long.</p> <p>You can find the transcript for this epsisode at <a href="https://futureofcoding.org/episodes/035#transcript">futureofcoding.org/episodes/035#transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Vlad Magdalin is the CEO &amp; co-founder of Webflow, a WYSIWYG website builder and CMS that's a thin layer of abstratction over HTML, CSS, and JavaScript. In this conversation we discussed Vlad's Bret Victor origin story, the differences between live programming and direct manipulation, and why web design has resisted direct manipulation pro tools for so long.</p> <p>You can find the transcript for this epsisode at <a href="https://futureofcoding.org/episodes/035#transcript">futureofcoding.org/episodes/035#transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/c1c79ff1-19ce-4754-9efa-a9cd0110bf01/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1546793603" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/35-democratizing-web-design-vlad-magdalin/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">c1c79ff1-19ce-4754-9efa-a9cd0110bf01</guid>
      <omny:clipId>c1c79ff1-19ce-4754-9efa-a9cd0110bf01</omny:clipId>
      <pubDate>Sun, 06 Jan 2019 16:53:00 +0000</pubDate>
      <itunes:duration>5561</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/c1c79ff1-19ce-4754-9efa-a9cd0110bf01/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1546793603" length="88996935" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/35-democratizing-web-design-vlad-magdalin</link>
    </item>
    <item>
      <title>The Edges of Representation: Katherine Ye</title>
      <itunes:title>The Edges of Representation: Katherine Ye</itunes:title>
      <description><![CDATA[<p>Katherine Ye is a PhD student at CMU, where she works on representation, including programming languages, visualizations, notations, and interfaces to enable thinking and creating. She's been affiliated with MIT CSAIL, Princeton, Distill at Google Brain, and the Recurse Center.</p> <p>In this conversation we discuss Penrose, her project to _democraize visual intuition_. Katherine envisions "a magical machine where you can dump in a math textbook and out comes a fully-illustrated math textbook, or more specifically a platform where you can simply type mathematical notation in plain text and automatically get many useful and beautiful diagrams out illustrating the notation." It's a fascinating project in the intersection of mathematics, intuition, education, visualization, communication, programming, domain specific languages... basically, all of the interesting topics in one project.</p> <p>As you'd expect in a conversation about the edges of representation, this is a wide-ranging conversation that I can described by a collection of keywords that came up:</p> <ul> <li>embodied intuition</li> <li>code as rhetoric</li> <li>asemic language</li> <li>Colorless green ideas sleep furiously.</li> <li>univalence, homotopy, equivalence, equality</li> <li>modeling the notation of mathematics</li> <li>knot notation, dance notation, and the periodic table of juggling notation</li> <li>a studio class on notation design</li> <li>explorable explanations</li> <li>speculative nonfiction</li> <li>the unexpected futures next door</li> </ul> <p>Transcript provided by <a href="https://repl.it">repl.it</a> at&nbsp;<a href="https://futureofcoding.org/episodes/34#transcript">https://futureofcoding.org/episodes/34#transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Katherine Ye is a PhD student at CMU, where she works on representation, including programming languages, visualizations, notations, and interfaces to enable thinking and creating. She's been affiliated with MIT CSAIL, Princeton, Distill at Google Brain, and the Recurse Center.</p> <p>In this conversation we discuss Penrose, her project to _democraize visual intuition_. Katherine envisions "a magical machine where you can dump in a math textbook and out comes a fully-illustrated math textbook, or more specifically a platform where you can simply type mathematical notation in plain text and automatically get many useful and beautiful diagrams out illustrating the notation." It's a fascinating project in the intersection of mathematics, intuition, education, visualization, communication, programming, domain specific languages... basically, all of the interesting topics in one project.</p> <p>As you'd expect in a conversation about the edges of representation, this is a wide-ranging conversation that I can described by a collection of keywords that came up:</p> <ul> <li>embodied intuition</li> <li>code as rhetoric</li> <li>asemic language</li> <li>Colorless green ideas sleep furiously.</li> <li>univalence, homotopy, equivalence, equality</li> <li>modeling the notation of mathematics</li> <li>knot notation, dance notation, and the periodic table of juggling notation</li> <li>a studio class on notation design</li> <li>explorable explanations</li> <li>speculative nonfiction</li> <li>the unexpected futures next door</li> </ul> <p>Transcript provided by <a href="https://repl.it">repl.it</a> at&nbsp;<a href="https://futureofcoding.org/episodes/34#transcript">https://futureofcoding.org/episodes/34#transcript</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/9d1605d6-a5ed-4bb6-92e7-a9ac00d373e5/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1544021957" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/34-the-edges-of-representation-katherine-ye/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">9d1605d6-a5ed-4bb6-92e7-a9ac00d373e5</guid>
      <omny:clipId>9d1605d6-a5ed-4bb6-92e7-a9ac00d373e5</omny:clipId>
      <pubDate>Wed, 05 Dec 2018 14:59:00 +0000</pubDate>
      <itunes:duration>4446</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/9d1605d6-a5ed-4bb6-92e7-a9ac00d373e5/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1544021957" length="71150082" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/34-the-edges-of-representation-katherine-ye</link>
    </item>
    <item>
      <title>Reflection 14: /about</title>
      <itunes:title>Reflection 14: /about</itunes:title>
      <description><![CDATA[<p>If you haven&rsquo;t been following my research journey, this episode is a great place to join! I recap of who I am, where I come from, what I&rsquo;m trying to accomplish, and how I hope to accomplish it.</p> <div class="cl-preview-section"> <p>The mission of this project is, broadly, to &ldquo;democratize&rdquo; programming. My new phrase is:</p> </div> <div class="cl-preview-section"> <p><strong>Enable all people to modify they software they use in the course of using it.</strong></p> </div> <div class="cl-preview-section"> <p>This mission would cause the following changes, in order of increasing importance:</p> </div> <div class="cl-preview-section"> <ol> <li>All software will be co-created by decentralized communities, rather than centralized groups or companies.</li> <li>Through the power of crowd-sourcing, the quality of all software will become much higher than existing software.</li> <li>All software will be much more composible, interoperable with other pieces of software.</li> <li>All software will be arbitrarily customizable, allowing for bespoke, tailored experiences.</li> <li>Learning to communicate with computers teaches one how to think more clearly, precisely, mathmatically, and powerfully. If one can manipulate the software one uses, if only one learns how to organize one&rsquo;s thoughts, many people will self-teach themselvse to do just that.</li> <li>As the fabric of the world is eaten by software, the ability to fully manipulate that software one uses is an essential freedom.</li> </ol> </div> <div class="cl-preview-section"> <p>This vision is not new nor creative: it&rsquo;s obvious that people would change things if they could. Yet this problem has proven stubborn over the decades and most have given it up as insoluble. We have all but forgotten the essential characteristic of computers: their malleability.</p> </div> <div class="cl-preview-section"> <p>In order to accomplish this vision, I believe there are three large categories of problems that need to be addressed:</p> </div> <div class="cl-preview-section"> <ol> <li><strong>Rid ourselves of the IO Monad</strong>, replacing it with better abstractions for whole systems.</li> <li>Create a better&nbsp;<strong>programming experience</strong>&nbsp;for the complex abstractions we create to avoid IO.</li> <li>Reimagine <strong>version control</strong>&nbsp;for a world where software looks very different than it does today, with many more forks, at many more levels than just one-deep off of master</li> </ol> </div> <div class="cl-preview-section"> <p>My recent work was on ridding ourselves of the IO Monad from user interfaces, which is building on Conal Elliot&rsquo;s FRP work.&nbsp;<a href="http://futureofcoding.org/papers/comprehensible-frp">My paper and talk</a> at REBLS last month argues that Elm Architecture makes software take longer to understand (which is untenable if we want people to be able to modify the software they use&nbsp;<em>in the course of using it</em>) as compared to the higher-order and cyclic streams of Conal&rsquo;s original FRP.</p> </div> <div class="cl-preview-section"> <p>My future work will be improving the programming experience of &ldquo;original FRP&rdquo;, potentially with a Haskell-inspired structured editor. I will also extend Conal&rsquo;s FRP work to also&nbsp;<a href="https://github.com/stevekrouse/futureofcoding.org/issues/85">removing the IO Monad from the &ldquo;backend&rdquo;</a>.</p> </div> <div class="cl-preview-section"> <p>In the episode I add a lot more color to these points, as well as discuss my personal background, the past and future of Future of Coding meetups, my experience at SPLASH last month, and other whacky ideas!</p> <p>You can see the transcript for this episode at <a href="https://futureofcoding.org/episodes/33">https://futureofcoding.org/episodes/33</a>.</p> </div><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>If you haven&rsquo;t been following my research journey, this episode is a great place to join! I recap of who I am, where I come from, what I&rsquo;m trying to accomplish, and how I hope to accomplish it.</p> <div class="cl-preview-section"> <p>The mission of this project is, broadly, to &ldquo;democratize&rdquo; programming. My new phrase is:</p> </div> <div class="cl-preview-section"> <p><strong>Enable all people to modify they software they use in the course of using it.</strong></p> </div> <div class="cl-preview-section"> <p>This mission would cause the following changes, in order of increasing importance:</p> </div> <div class="cl-preview-section"> <ol> <li>All software will be co-created by decentralized communities, rather than centralized groups or companies.</li> <li>Through the power of crowd-sourcing, the quality of all software will become much higher than existing software.</li> <li>All software will be much more composible, interoperable with other pieces of software.</li> <li>All software will be arbitrarily customizable, allowing for bespoke, tailored experiences.</li> <li>Learning to communicate with computers teaches one how to think more clearly, precisely, mathmatically, and powerfully. If one can manipulate the software one uses, if only one learns how to organize one&rsquo;s thoughts, many people will self-teach themselvse to do just that.</li> <li>As the fabric of the world is eaten by software, the ability to fully manipulate that software one uses is an essential freedom.</li> </ol> </div> <div class="cl-preview-section"> <p>This vision is not new nor creative: it&rsquo;s obvious that people would change things if they could. Yet this problem has proven stubborn over the decades and most have given it up as insoluble. We have all but forgotten the essential characteristic of computers: their malleability.</p> </div> <div class="cl-preview-section"> <p>In order to accomplish this vision, I believe there are three large categories of problems that need to be addressed:</p> </div> <div class="cl-preview-section"> <ol> <li><strong>Rid ourselves of the IO Monad</strong>, replacing it with better abstractions for whole systems.</li> <li>Create a better&nbsp;<strong>programming experience</strong>&nbsp;for the complex abstractions we create to avoid IO.</li> <li>Reimagine <strong>version control</strong>&nbsp;for a world where software looks very different than it does today, with many more forks, at many more levels than just one-deep off of master</li> </ol> </div> <div class="cl-preview-section"> <p>My recent work was on ridding ourselves of the IO Monad from user interfaces, which is building on Conal Elliot&rsquo;s FRP work.&nbsp;<a href="http://futureofcoding.org/papers/comprehensible-frp">My paper and talk</a> at REBLS last month argues that Elm Architecture makes software take longer to understand (which is untenable if we want people to be able to modify the software they use&nbsp;<em>in the course of using it</em>) as compared to the higher-order and cyclic streams of Conal&rsquo;s original FRP.</p> </div> <div class="cl-preview-section"> <p>My future work will be improving the programming experience of &ldquo;original FRP&rdquo;, potentially with a Haskell-inspired structured editor. I will also extend Conal&rsquo;s FRP work to also&nbsp;<a href="https://github.com/stevekrouse/futureofcoding.org/issues/85">removing the IO Monad from the &ldquo;backend&rdquo;</a>.</p> </div> <div class="cl-preview-section"> <p>In the episode I add a lot more color to these points, as well as discuss my personal background, the past and future of Future of Coding meetups, my experience at SPLASH last month, and other whacky ideas!</p> <p>You can see the transcript for this episode at <a href="https://futureofcoding.org/episodes/33">https://futureofcoding.org/episodes/33</a>.</p> </div><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/36727325-6975-4557-bc20-a9ab01046489/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1543853846" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/33-reflection-14-about-1/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">36727325-6975-4557-bc20-a9ab01046489</guid>
      <omny:clipId>36727325-6975-4557-bc20-a9ab01046489</omny:clipId>
      <pubDate>Mon, 03 Dec 2018 16:16:00 +0000</pubDate>
      <itunes:duration>6737</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/36727325-6975-4557-bc20-a9ab01046489/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1543853846" length="107810496" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/33-reflection-14-about-1</link>
    </item>
    <item>
      <title>Basic Developer Human Rights: Quinn Slack</title>
      <itunes:title>Basic Developer Human Rights: Quinn Slack</itunes:title>
      <description><![CDATA[<p>Quinn Slack of Sourcegraph believes in low-hanging fruit. Before we improve programming in all the fancy ways, he has a list of all the little improvements and features we need to make available to all developers, such as jump-to-definition, autocomplete, and automatic formatting.</p> <p>In this conversation, we learn about the technical challenges to brining code intelligence to all editors, and Sourcegraph's chosen solutions, such as the Langauge Server Protocol and the Sourcegraph extension API. Quinn explains how Sourcegraph code search is so effective without resorting to any fancy machine learning. We also discuss the trade-offs of open-sourcing a devtools company from Day 1, how to find like-minded investors, and how to "win the hearts and minds of developers."</p> <p>Notes and transcript at <a href="futureofcoding.org/episodes/32">futureofcoding.org/episodes/32</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Quinn Slack of Sourcegraph believes in low-hanging fruit. Before we improve programming in all the fancy ways, he has a list of all the little improvements and features we need to make available to all developers, such as jump-to-definition, autocomplete, and automatic formatting.</p> <p>In this conversation, we learn about the technical challenges to brining code intelligence to all editors, and Sourcegraph's chosen solutions, such as the Langauge Server Protocol and the Sourcegraph extension API. Quinn explains how Sourcegraph code search is so effective without resorting to any fancy machine learning. We also discuss the trade-offs of open-sourcing a devtools company from Day 1, how to find like-minded investors, and how to "win the hearts and minds of developers."</p> <p>Notes and transcript at <a href="futureofcoding.org/episodes/32">futureofcoding.org/episodes/32</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/8d2f355c-44e0-482c-86ff-a98300771e81/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1540365615" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/32-basic-developer-human-rights-quinn-slack/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">8d2f355c-44e0-482c-86ff-a98300771e81</guid>
      <omny:clipId>8d2f355c-44e0-482c-86ff-a98300771e81</omny:clipId>
      <pubDate>Wed, 24 Oct 2018 07:20:00 +0000</pubDate>
      <itunes:duration>4740</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/8d2f355c-44e0-482c-86ff-a98300771e81/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1540365615" length="75864232" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/32-basic-developer-human-rights-quinn-slack</link>
    </item>
    <item>
      <title>Sustaining the Underfunded: Nadia Eghbal</title>
      <itunes:title>Sustaining the Underfunded: Nadia Eghbal</itunes:title>
      <description><![CDATA[<p>Two years ago, Nadia Eghbal "stumbled onto the internet's biggest blindspot": sustainability of open-source. Her Ford Foundation report "Roads and Bridges" became an instant classic. She shined a light on the underappreciated roles of maintainers and how difficult it was for even vital projects to get enough funding for a single person full time.</p> <p>In this conversation, we discuss how she found "stumbled onto" this problem initially, and her road from the Ford Foundation to GitHub and now Protocol Labs. We discuss the challenges of indepdendent research and remote work... and how being able to find amazing friends and co-conspirators on Twitter somehow makes it all better. Nadia lays out her vision for the future of open source, and how we can tackle the human side of scaling open-source development. She also gives us a sneak preview of her current work on a new economic model for understanding how open-source software consumption scales. It doesn't scale costlessly, because "you have to make continual changes to it, either because people are submitting changes back to it, but also because software degrades over time. Knowledge degrades over time. You can't just release something once and be done with it."</p> <p>Notes and transcript at <a href="futureofcoding.org/episodes/31">futureofcoding.org/episodes/31</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Two years ago, Nadia Eghbal "stumbled onto the internet's biggest blindspot": sustainability of open-source. Her Ford Foundation report "Roads and Bridges" became an instant classic. She shined a light on the underappreciated roles of maintainers and how difficult it was for even vital projects to get enough funding for a single person full time.</p> <p>In this conversation, we discuss how she found "stumbled onto" this problem initially, and her road from the Ford Foundation to GitHub and now Protocol Labs. We discuss the challenges of indepdendent research and remote work... and how being able to find amazing friends and co-conspirators on Twitter somehow makes it all better. Nadia lays out her vision for the future of open source, and how we can tackle the human side of scaling open-source development. She also gives us a sneak preview of her current work on a new economic model for understanding how open-source software consumption scales. It doesn't scale costlessly, because "you have to make continual changes to it, either because people are submitting changes back to it, but also because software degrades over time. Knowledge degrades over time. You can't just release something once and be done with it."</p> <p>Notes and transcript at <a href="futureofcoding.org/episodes/31">futureofcoding.org/episodes/31</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/1a84acaf-4807-45e4-b20d-a976013ca581/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1539332347" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/31-sustaining-the-underfunded-nadia-eghbal/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">1a84acaf-4807-45e4-b20d-a976013ca581</guid>
      <omny:clipId>1a84acaf-4807-45e4-b20d-a976013ca581</omny:clipId>
      <pubDate>Fri, 12 Oct 2018 08:18:00 +0000</pubDate>
      <itunes:duration>5317</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/1a84acaf-4807-45e4-b20d-a976013ca581/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1539332347" length="85089843" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/31-sustaining-the-underfunded-nadia-eghbal</link>
    </item>
    <item>
      <title>On The Maintenance Of Large Software: James Koppel</title>
      <itunes:title>On The Maintenance Of Large Software: James Koppel</itunes:title>
      <description><![CDATA[<p>How do we maintain millions of lines of code? For example, the Social Security Administration has 60-million-lines of COBOL. James Koppel is building tools to help tame these kinds of beasts. His current work is on decreasing the costs to build developer tools by allowing the same tool to work on a variety of languages.</p> <p>James Koppel is a Carnegie Mellon CS grad, Thiel Fellow, entrepreneur, educator, and currently PhD student at MIT. We talk about his experience withprogram repair, program sythesis, code comprehension, and many other cutting-edge fields relevant to the future of software engineering.</p> <p><strong>Transcript and episode notes</strong>:&nbsp;<a href="https://futureofcoding.org/episodes/30">futureofcoding.org/episodes/30</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>How do we maintain millions of lines of code? For example, the Social Security Administration has 60-million-lines of COBOL. James Koppel is building tools to help tame these kinds of beasts. His current work is on decreasing the costs to build developer tools by allowing the same tool to work on a variety of languages.</p> <p>James Koppel is a Carnegie Mellon CS grad, Thiel Fellow, entrepreneur, educator, and currently PhD student at MIT. We talk about his experience withprogram repair, program sythesis, code comprehension, and many other cutting-edge fields relevant to the future of software engineering.</p> <p><strong>Transcript and episode notes</strong>:&nbsp;<a href="https://futureofcoding.org/episodes/30">futureofcoding.org/episodes/30</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/32698a60-11f1-4e49-8e1e-a9630132a960/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1537644278" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/30-on-the-maintenance-of-large-software-james-kopp/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">32698a60-11f1-4e49-8e1e-a9630132a960</guid>
      <omny:clipId>32698a60-11f1-4e49-8e1e-a9630132a960</omny:clipId>
      <pubDate>Sat, 22 Sep 2018 19:24:00 +0000</pubDate>
      <itunes:duration>5748</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/32698a60-11f1-4e49-8e1e-a9630132a960/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1537644278" length="91977830" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/30-on-the-maintenance-of-large-software-james-kopp</link>
    </item>
    <item>
      <title>Reflection Thirteen - Independent mentorship</title>
      <itunes:title>Reflection Thirteen - Independent mentorship</itunes:title>
      <description><![CDATA[<p>My research recap episodes are back! This is the first I've recorded since the end of 2017. I discuss my new mentor-mentee relationship with Jonathan Edwards, my upcoming new paper on functional reactive programming, my move to London, my longer-term goals, and other various musings about abstractions, monads, and data ninja playgrounds.</p> <p><a href="http://futureofcoding.org/reflections/13">futureofcoding.org/reflections/13</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>My research recap episodes are back! This is the first I've recorded since the end of 2017. I discuss my new mentor-mentee relationship with Jonathan Edwards, my upcoming new paper on functional reactive programming, my move to London, my longer-term goals, and other various musings about abstractions, monads, and data ninja playgrounds.</p> <p><a href="http://futureofcoding.org/reflections/13">futureofcoding.org/reflections/13</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/4cae1f3b-675a-4091-b9d9-a94901371899/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1535398291" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/29-reflection-thirteen-independent-mentorship/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">4cae1f3b-675a-4091-b9d9-a94901371899</guid>
      <omny:clipId>4cae1f3b-675a-4091-b9d9-a94901371899</omny:clipId>
      <pubDate>Mon, 27 Aug 2018 19:30:00 +0000</pubDate>
      <itunes:duration>3928</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/4cae1f3b-675a-4091-b9d9-a94901371899/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1535398291" length="62864869" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/29-reflection-thirteen-independent-mentorship</link>
    </item>
    <item>
      <title>Exploring Dynamicland - Omar Rizwan</title>
      <itunes:title>Exploring Dynamicland - Omar Rizwan</itunes:title>
      <description><![CDATA[<p>Many of you have heard about Dynamicland, Bret Victor's new project. Omar Rizwan comes on the podcast this week to tell us all about it. He recently wrote an amazing write up about it, [Notes from Dynamicland: Geokit](https://rsnous.com/posts/notes-from-dynamicland-geokit/), that I'd highly reccomend to everyone interested in the future of computing.</p> <p><a href="http://futureofcoding.org/episodes/28">futureofcoding.org/episodes/28</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Many of you have heard about Dynamicland, Bret Victor's new project. Omar Rizwan comes on the podcast this week to tell us all about it. He recently wrote an amazing write up about it, [Notes from Dynamicland: Geokit](https://rsnous.com/posts/notes-from-dynamicland-geokit/), that I'd highly reccomend to everyone interested in the future of computing.</p> <p><a href="http://futureofcoding.org/episodes/28">futureofcoding.org/episodes/28</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/9f6631bf-3a76-4cb3-82ba-a949013e0eac/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1535398044" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/28-exploring-dynamicland-omar-rizwan/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">9f6631bf-3a76-4cb3-82ba-a949013e0eac</guid>
      <omny:clipId>9f6631bf-3a76-4cb3-82ba-a949013e0eac</omny:clipId>
      <pubDate>Mon, 27 Aug 2018 19:25:00 +0000</pubDate>
      <itunes:duration>5176</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/9f6631bf-3a76-4cb3-82ba-a949013e0eac/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1535398044" length="82830343" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/28-exploring-dynamicland-omar-rizwan</link>
    </item>
    <item>
      <title>Bringing Explicit Modeling To The Web: David K Piano</title>
      <itunes:title>Bringing Explicit Modeling To The Web: David K Piano</itunes:title>
      <description><![CDATA[<p>David K Piano is bringing explicit software modeling to the web with his xstate library. He gives talks around the world about statecharts, and is cooking up a new SaaS service that will help developers model and understand their application using statecharts. In this conversation, David and I discuss the benefits of declarative languages, such as CSS, the principle of least power,&nbsp; musical notation, and Facebook Origami.</p> <p><a href="futureofcoding.org/episodes/27">futureofcoding.org/episodes/27</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>David K Piano is bringing explicit software modeling to the web with his xstate library. He gives talks around the world about statecharts, and is cooking up a new SaaS service that will help developers model and understand their application using statecharts. In this conversation, David and I discuss the benefits of declarative languages, such as CSS, the principle of least power,&nbsp; musical notation, and Facebook Origami.</p> <p><a href="futureofcoding.org/episodes/27">futureofcoding.org/episodes/27</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/58c9ce2b-b17a-4aec-9083-a920016cdacb/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1531866337" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/27-bringing-explicit-modeling-to-the-web-david-k-p/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">58c9ce2b-b17a-4aec-9083-a920016cdacb</guid>
      <omny:clipId>58c9ce2b-b17a-4aec-9083-a920016cdacb</omny:clipId>
      <pubDate>Tue, 17 Jul 2018 22:22:00 +0000</pubDate>
      <itunes:duration>4295</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/58c9ce2b-b17a-4aec-9083-a920016cdacb/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1531866337" length="68742229" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/27-bringing-explicit-modeling-to-the-web-david-k-p</link>
    </item>
    <item>
      <title>Compassion &amp; Programming: Glen Chiacchieri</title>
      <itunes:title>Compassion &amp; Programming: Glen Chiacchieri</itunes:title>
      <description><![CDATA[<p>Glen Chiacchieri has worked at the MIT Media Lab on Scratch, at Dynamicland with Bret Victor, and is now becoming a psychotherapist. He's known for his Legible Mathematics essay, his Flowsheets programming prototypes, and the Laser Socks game, among many other projects.</p> <p>In this conversation, we discuss:</p> <ul> <li>how he grounds his research in compassion,</li> <li>the tradeoffs between working on the "model vs UI" of programming,</li> <li>his software-company-in-the-making, based on Flowsheets,</li> <li>our shared dream for the future of open-source READMEs,</li> <li>and how Dynamicland does and does not point towards the future.</li> </ul> <p>The notes for this conversation can be found at <a href="futureofcoding.org/episodes/26">futureofcoding.org/episodes/26</a>.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Glen Chiacchieri has worked at the MIT Media Lab on Scratch, at Dynamicland with Bret Victor, and is now becoming a psychotherapist. He's known for his Legible Mathematics essay, his Flowsheets programming prototypes, and the Laser Socks game, among many other projects.</p> <p>In this conversation, we discuss:</p> <ul> <li>how he grounds his research in compassion,</li> <li>the tradeoffs between working on the "model vs UI" of programming,</li> <li>his software-company-in-the-making, based on Flowsheets,</li> <li>our shared dream for the future of open-source READMEs,</li> <li>and how Dynamicland does and does not point towards the future.</li> </ul> <p>The notes for this conversation can be found at <a href="futureofcoding.org/episodes/26">futureofcoding.org/episodes/26</a>.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/76c0223b-9c31-40d2-97aa-a912010b98e7/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1530635046" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/26-compassion-programming-glen-chiacchieri/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">76c0223b-9c31-40d2-97aa-a912010b98e7</guid>
      <omny:clipId>76c0223b-9c31-40d2-97aa-a912010b98e7</omny:clipId>
      <pubDate>Tue, 03 Jul 2018 16:23:00 +0000</pubDate>
      <itunes:duration>6734</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/76c0223b-9c31-40d2-97aa-a912010b98e7/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1530635046" length="107752847" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/26-compassion-programming-glen-chiacchieri</link>
    </item>
    <item>
      <title>You Should Consider Some States Kevin Lynagh</title>
      <itunes:title>You Should Consider Some States Kevin Lynagh</itunes:title>
      <description><![CDATA[<p>Kevin Lynagh is a designer specializing in user interfaces for complex systems. He co-created Subform, a CAD-inspired UI design tool, with Ryan Lucas, which got a thousand backers on Kickstarter. He recently created Sketch.systems, an interactive playground for designing system behavior using Statecharts (hierarchical state machines).</p> <p>In this conversation, we discuss direct manipulation, Statecharts, challenges of layout engines, visual programming languages, the Clojure community, constraint systems, and the three different types of programmers.</p> <p><a href="futureofcoding.org/episodes/25">futureofcoding.org/episodes/25</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Kevin Lynagh is a designer specializing in user interfaces for complex systems. He co-created Subform, a CAD-inspired UI design tool, with Ryan Lucas, which got a thousand backers on Kickstarter. He recently created Sketch.systems, an interactive playground for designing system behavior using Statecharts (hierarchical state machines).</p> <p>In this conversation, we discuss direct manipulation, Statecharts, challenges of layout engines, visual programming languages, the Clojure community, constraint systems, and the three different types of programmers.</p> <p><a href="futureofcoding.org/episodes/25">futureofcoding.org/episodes/25</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/d4529b3a-d7af-40bf-b81b-a8fd01243c7f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1528825813" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/25-you-should-consider-some-states-kevin-lynagh/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">d4529b3a-d7af-40bf-b81b-a8fd01243c7f</guid>
      <omny:clipId>d4529b3a-d7af-40bf-b81b-a8fd01243c7f</omny:clipId>
      <pubDate>Tue, 12 Jun 2018 17:49:00 +0000</pubDate>
      <itunes:duration>6058</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/d4529b3a-d7af-40bf-b81b-a8fd01243c7f/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1528825813" length="96945681" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/25-you-should-consider-some-states-kevin-lynagh</link>
    </item>
    <item>
      <title>Stop Being A Sysadmin For Your Own Machine: Nick Santos</title>
      <itunes:title>Stop Being A Sysadmin For Your Own Machine: Nick Santos</itunes:title>
      <description><![CDATA[<p>Do you hate Makefiles and YAML config files? Do you feel your soul slowly dying as you wait for your tests to run? Do you yearn for even-more-continuous integration?</p> <p>Nick Santos, the CTO and founder of Windmill Engineering, is here to help. Windmill's a cloud-based build-system that intelligently runs your relevant tests in the cloud, in parallel on every file save. How's that for a tight feedback loop?</p> <p><a href="futureofcoding.org/episodes/24">futureofcoding.org/episodes/24</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Do you hate Makefiles and YAML config files? Do you feel your soul slowly dying as you wait for your tests to run? Do you yearn for even-more-continuous integration?</p> <p>Nick Santos, the CTO and founder of Windmill Engineering, is here to help. Windmill's a cloud-based build-system that intelligently runs your relevant tests in the cloud, in parallel on every file save. How's that for a tight feedback loop?</p> <p><a href="futureofcoding.org/episodes/24">futureofcoding.org/episodes/24</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/7f96a417-55d5-47aa-bb1d-a8e801456dff/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1527018894" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/24-stop-being-a-sysadmin-for-your-own-machine-nick/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">7f96a417-55d5-47aa-bb1d-a8e801456dff</guid>
      <omny:clipId>7f96a417-55d5-47aa-bb1d-a8e801456dff</omny:clipId>
      <pubDate>Tue, 22 May 2018 19:54:00 +0000</pubDate>
      <itunes:duration>3498</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/7f96a417-55d5-47aa-bb1d-a8e801456dff/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1527018894" length="55989375" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/24-stop-being-a-sysadmin-for-your-own-machine-nick</link>
    </item>
    <item>
      <title>Teaching Abstraction: Brent Yorgey</title>
      <itunes:title>Teaching Abstraction: Brent Yorgey</itunes:title>
      <description><![CDATA[<p class="line" data-line="8">Brent Yorgey is a professor of math and CS at Hendrix College. He studys functional programming in Haskell, type systems, and category theory, and more. He is the creator of the&nbsp;<a href="https://byorgey.wordpress.com/2014/01/17/diagrams-1-0/">diagrams</a>&nbsp;vector graphics Haskell library. He taught&nbsp;<a href="http://www.cis.upenn.edu/~cis194/spring13/">Introduction to Haskell</a>&nbsp;and&nbsp;<a href="http://www.cis.upenn.edu/~cis39903/">The Art of Recursion</a>&nbsp;at the University of Pennslyvaia (which were my two favorite classes in college!).</p> <p class="line" data-line="10">In this conversation, we talk about Brent&rsquo;s Monad Tutorial Fallacy essay, type systems, FRP, essential vs accidental complexity in Haskell, and the perils of reading academic CS papers and ways to overcome them.</p> <p data-line="10"><a href="http://futureofcoding.org/episodes/23">http://futureofcoding.org/episodes/23</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p class="line" data-line="8">Brent Yorgey is a professor of math and CS at Hendrix College. He studys functional programming in Haskell, type systems, and category theory, and more. He is the creator of the&nbsp;<a href="https://byorgey.wordpress.com/2014/01/17/diagrams-1-0/">diagrams</a>&nbsp;vector graphics Haskell library. He taught&nbsp;<a href="http://www.cis.upenn.edu/~cis194/spring13/">Introduction to Haskell</a>&nbsp;and&nbsp;<a href="http://www.cis.upenn.edu/~cis39903/">The Art of Recursion</a>&nbsp;at the University of Pennslyvaia (which were my two favorite classes in college!).</p> <p class="line" data-line="10">In this conversation, we talk about Brent&rsquo;s Monad Tutorial Fallacy essay, type systems, FRP, essential vs accidental complexity in Haskell, and the perils of reading academic CS papers and ways to overcome them.</p> <p data-line="10"><a href="http://futureofcoding.org/episodes/23">http://futureofcoding.org/episodes/23</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/b9e8039b-9a6b-426e-a5f6-a8e3010d76f6/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1526574364" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/23-teaching-abstraction-brent-yorgey/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">b9e8039b-9a6b-426e-a5f6-a8e3010d76f6</guid>
      <omny:clipId>b9e8039b-9a6b-426e-a5f6-a8e3010d76f6</omny:clipId>
      <pubDate>Thu, 17 May 2018 16:25:00 +0000</pubDate>
      <itunes:duration>4634</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/b9e8039b-9a6b-426e-a5f6-a8e3010d76f6/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1526574364" length="74165542" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/23-teaching-abstraction-brent-yorgey</link>
    </item>
    <item>
      <title>Learning Programming At Scale: Philip Guo</title>
      <itunes:title>Learning Programming At Scale: Philip Guo</itunes:title>
      <description><![CDATA[<p>Philip Guo researches ways to scale programming education beyond the classroom. He is the creator of Python Tutor (<a href="http://pythontutor.com/" target="_blank" rel="nofollow noopener">http://pythontutor.com/</a>), a widely-used code visualization and collaborative learning platform, and an assistant professor at UC San Diego. In this episode, we discuss why diverse groups of people study CS, his various prototypes, and the differences between technological research and industry.</p> <p><a href="http://futureofcoding.org/episodes/22">http://futureofcoding.org/episodes/22</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Philip Guo researches ways to scale programming education beyond the classroom. He is the creator of Python Tutor (<a href="http://pythontutor.com/" target="_blank" rel="nofollow noopener">http://pythontutor.com/</a>), a widely-used code visualization and collaborative learning platform, and an assistant professor at UC San Diego. In this episode, we discuss why diverse groups of people study CS, his various prototypes, and the differences between technological research and industry.</p> <p><a href="http://futureofcoding.org/episodes/22">http://futureofcoding.org/episodes/22</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/49a833cf-6b5f-4469-b38f-a8cb0130bb57/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1525300574" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/22-teaching-programming-at-scale-philip-guo/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">49a833cf-6b5f-4469-b38f-a8cb0130bb57</guid>
      <omny:clipId>49a833cf-6b5f-4469-b38f-a8cb0130bb57</omny:clipId>
      <pubDate>Wed, 02 May 2018 22:35:00 +0000</pubDate>
      <itunes:duration>4249</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/49a833cf-6b5f-4469-b38f-a8cb0130bb57/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1525300574" length="68008182" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/22-teaching-programming-at-scale-philip-guo</link>
    </item>
    <item>
      <title>Building for Developers: Aidan Cunniffe</title>
      <itunes:title>Building for Developers: Aidan Cunniffe</itunes:title>
      <description><![CDATA[<p>My guest this week, Aidan Cuniffee, is the founder of two startups in this space, first Dropsource and now Optic. Aidan and I discuss the trade-offs between creating tools for developers vs non-programmers. We also get to hear some of the upcomming features to expect from Optic. We finish off the interview with a fun theoretical discussion of notation, representation, conciseness and learnability.</p> <p>http://futureofcoding.org/episodes/21</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>My guest this week, Aidan Cuniffee, is the founder of two startups in this space, first Dropsource and now Optic. Aidan and I discuss the trade-offs between creating tools for developers vs non-programmers. We also get to hear some of the upcomming features to expect from Optic. We finish off the interview with a fun theoretical discussion of notation, representation, conciseness and learnability.</p> <p>http://futureofcoding.org/episodes/21</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/69f09f6d-beaf-45a5-8950-a87a015983c9/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1517519058" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/2-1-building-for-developers-aidan-cunniffe/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">69f09f6d-beaf-45a5-8950-a87a015983c9</guid>
      <omny:clipId>69f09f6d-beaf-45a5-8950-a87a015983c9</omny:clipId>
      <pubDate>Thu, 01 Feb 2018 21:04:00 +0000</pubDate>
      <itunes:duration>5029</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/69f09f6d-beaf-45a5-8950-a87a015983c9/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1517519058" length="80486767" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/2-1-building-for-developers-aidan-cunniffe</link>
    </item>
    <item>
      <title>Coding On (the) Beach: Jason Brennan</title>
      <itunes:title>Coding On (the) Beach: Jason Brennan</itunes:title>
      <description><![CDATA[<p>Jason Brennan is a Canadian computer scientist focused on education and computing. He&rsquo;s worked at Hopscotch and Khan Academy. We discussed his experiences building multiple programming language platforms, the incomprehensibly large vision of Alan Kay, and his new project Beach.</p> <p><a href="http://futureofcoding.org/episodes/20">http://futureofcoding.org/episodes/20</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Jason Brennan is a Canadian computer scientist focused on education and computing. He&rsquo;s worked at Hopscotch and Khan Academy. We discussed his experiences building multiple programming language platforms, the incomprehensibly large vision of Alan Kay, and his new project Beach.</p> <p><a href="http://futureofcoding.org/episodes/20">http://futureofcoding.org/episodes/20</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/89c9a58a-4a52-482a-b92a-a857015d1361/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1514559416" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/2-0-coding-on-the-beach-jason-brennan/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">89c9a58a-4a52-482a-b92a-a857015d1361</guid>
      <omny:clipId>89c9a58a-4a52-482a-b92a-a857015d1361</omny:clipId>
      <pubDate>Fri, 29 Dec 2017 14:56:00 +0000</pubDate>
      <itunes:duration>5878</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/89c9a58a-4a52-482a-b92a-a857015d1361/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1514559416" length="94057478" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/2-0-coding-on-the-beach-jason-brennan</link>
    </item>
    <item>
      <title>Building Universe: Joe Cohen</title>
      <itunes:title>Building Universe: Joe Cohen</itunes:title>
      <description><![CDATA[<p>Like many of us, Joe Cohen fell in love with HyperCard. Three years ago, he founded&nbsp;<a href="http://onuniverse.com/">Universe</a> to re-imagine HyperCard for the modern day. In this interview, Joe walks us through his initial vision for Universe, and the pivots along the way. It's a refreshing story about balancing pie-in-the-sky vision with shorter-term customer needs.&nbsp;</p> <p>You can find the demo videos that Joe references here:&nbsp;<a href="http://futureofcoding.org/19-building-universe-joe-cohen.html">http://futureofcoding.org/19-building-universe-joe-cohen.html</a></p> <p>Most importantly, you can download Universe for iPhone here:&nbsp;<a href="https://itunes.apple.com/us/app/universe-build-a-website/id1211437633">https://itunes.apple.com/us/app/universe-build-a-website/id1211437633</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Like many of us, Joe Cohen fell in love with HyperCard. Three years ago, he founded&nbsp;<a href="http://onuniverse.com/">Universe</a> to re-imagine HyperCard for the modern day. In this interview, Joe walks us through his initial vision for Universe, and the pivots along the way. It's a refreshing story about balancing pie-in-the-sky vision with shorter-term customer needs.&nbsp;</p> <p>You can find the demo videos that Joe references here:&nbsp;<a href="http://futureofcoding.org/19-building-universe-joe-cohen.html">http://futureofcoding.org/19-building-universe-joe-cohen.html</a></p> <p>Most importantly, you can download Universe for iPhone here:&nbsp;<a href="https://itunes.apple.com/us/app/universe-build-a-website/id1211437633">https://itunes.apple.com/us/app/universe-build-a-website/id1211437633</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/55aa5a6f-43a4-4aad-baba-a847010d77d0/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1513202508" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/1-9-building-universe-joe-cohen/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">55aa5a6f-43a4-4aad-baba-a847010d77d0</guid>
      <omny:clipId>55aa5a6f-43a4-4aad-baba-a847010d77d0</omny:clipId>
      <pubDate>Wed, 13 Dec 2017 22:01:00 +0000</pubDate>
      <itunes:duration>5035</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/55aa5a6f-43a4-4aad-baba-a847010d77d0/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1513202508" length="80578696" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/1-9-building-universe-joe-cohen</link>
    </item>
    <item>
      <title>Research Recap Nine: Constructing My Crusade</title>
      <itunes:title>Research Recap Nine: Constructing My Crusade</itunes:title>
      <description><![CDATA[<p>Excited to be back after sickness and vacation!&nbsp;</p> <p>The notes for this episode can be found here:&nbsp;<a href="http://futureofcoding.org/episodes/18-research-recap-nine.html" target="_blank" rel="noopener">http://futureofcoding.org/episodes/18-research-recap-nine.html</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Excited to be back after sickness and vacation!&nbsp;</p> <p>The notes for this episode can be found here:&nbsp;<a href="http://futureofcoding.org/episodes/18-research-recap-nine.html" target="_blank" rel="noopener">http://futureofcoding.org/episodes/18-research-recap-nine.html</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/5fef555d-2a97-4e96-b196-a83f012aceba/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1512411075" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/research-recap-nine-constructing-my-crusade/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">5fef555d-2a97-4e96-b196-a83f012aceba</guid>
      <omny:clipId>5fef555d-2a97-4e96-b196-a83f012aceba</omny:clipId>
      <pubDate>Mon, 04 Dec 2017 18:11:00 +0000</pubDate>
      <itunes:duration>1231</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/5fef555d-2a97-4e96-b196-a83f012aceba/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1512411075" length="19710484" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/research-recap-nine-constructing-my-crusade</link>
    </item>
    <item>
      <title>Bootstrapping Bubble.is: Emmanuel Straschnov</title>
      <itunes:title>Bootstrapping Bubble.is: Emmanuel Straschnov</itunes:title>
      <description><![CDATA[<p>Many of you may have never heard of Bubble.is. That's because they don't build for developers. They build for business people who need to create technology but can't afford to work with developers. Over the past four years, Emmanual and his cofounder Josh have bootstrapped their drag-and-drop website builder into a profitable business.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Many of you may have never heard of Bubble.is. That's because they don't build for developers. They build for business people who need to create technology but can't afford to work with developers. Over the past four years, Emmanual and his cofounder Josh have bootstrapped their drag-and-drop website builder into a profitable business.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ad92a9a9-1058-4d3a-bf61-a826017bce02/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1511909011" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/1-7-bootstrapping-bubble-is-emmanuel-straschnov/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">ad92a9a9-1058-4d3a-bf61-a826017bce02</guid>
      <omny:clipId>ad92a9a9-1058-4d3a-bf61-a826017bce02</omny:clipId>
      <pubDate>Tue, 28 Nov 2017 22:43:00 +0000</pubDate>
      <itunes:duration>2649</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ad92a9a9-1058-4d3a-bf61-a826017bce02/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1511909011" length="42297977" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/1-7-bootstrapping-bubble-is-emmanuel-straschnov</link>
    </item>
    <item>
      <title>Research Recap Eight: Life &amp; Work Planning</title>
      <itunes:title>Research Recap Eight: Life &amp; Work Planning</itunes:title>
      <description><![CDATA[<p>Back in action after my two-week, sore-throat-induced hiatus, I reflect on my work over the past weeks on my Life Plan and Work Plan. If you make it to the end of this episode, you&rsquo;ll also get some off-the-cuff tips for ergonomic workstation design.</p> <p>You can view the notes for this episode here:&nbsp;futureofcoding.org/episodes/16-research-recap-eight-life-and-work-planning.html</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Back in action after my two-week, sore-throat-induced hiatus, I reflect on my work over the past weeks on my Life Plan and Work Plan. If you make it to the end of this episode, you&rsquo;ll also get some off-the-cuff tips for ergonomic workstation design.</p> <p>You can view the notes for this episode here:&nbsp;futureofcoding.org/episodes/16-research-recap-eight-life-and-work-planning.html</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/5b71b2a0-a35b-48a0-a315-a823012499e3/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1509990811" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/16-research-recap-eight-life-and-work-planning/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">5b71b2a0-a35b-48a0-a315-a823012499e3</guid>
      <omny:clipId>5b71b2a0-a35b-48a0-a315-a823012499e3</omny:clipId>
      <pubDate>Mon, 06 Nov 2017 17:53:00 +0000</pubDate>
      <itunes:duration>2876</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/5b71b2a0-a35b-48a0-a315-a823012499e3/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1509990811" length="45932124" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/16-research-recap-eight-life-and-work-planning</link>
    </item>
    <item>
      <title>Raising Genius with Scott Mueller</title>
      <itunes:title>Raising Genius with Scott Mueller</itunes:title>
      <description><![CDATA[<p>Scott Mueler is the founder of UCode, an after school coding program in California, which he created after teaching his then six-year-old son Ken to code. Scott tells us about how he developed his parenting/teaching/curricular philosophy, and how all educators and parents can apply these principles to raise geniueses of their own.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Scott Mueler is the founder of UCode, an after school coding program in California, which he created after teaching his then six-year-old son Ken to code. Scott tells us about how he developed his parenting/teaching/curricular philosophy, and how all educators and parents can apply these principles to raise geniueses of their own.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ab56d9d8-cc02-4d36-9cf7-a80f015184d3/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1508273160" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/1-5-raising-genius-with-scott-mueller/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">ab56d9d8-cc02-4d36-9cf7-a80f015184d3</guid>
      <omny:clipId>ab56d9d8-cc02-4d36-9cf7-a80f015184d3</omny:clipId>
      <pubDate>Tue, 17 Oct 2017 20:45:00 +0000</pubDate>
      <itunes:duration>5801</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ab56d9d8-cc02-4d36-9cf7-a80f015184d3/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1508273160" length="92623183" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/1-5-raising-genius-with-scott-mueller</link>
    </item>
    <item>
      <title>Research Recap Seven - Master Planning</title>
      <itunes:title>Research Recap Seven - Master Planning</itunes:title>
      <description><![CDATA[<p>Inspired by Juan Benet (and Elon Musk), I zoomed out last week and thought about my "master plan" for this project. You can see a detailed outline for this episode with links here:&nbsp;http://futureofcoding.org/episodes/14-research-recap-six-master-planning.html</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Inspired by Juan Benet (and Elon Musk), I zoomed out last week and thought about my "master plan" for this project. You can see a detailed outline for this episode with links here:&nbsp;http://futureofcoding.org/episodes/14-research-recap-six-master-planning.html</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/62b85128-b200-447d-b7de-a80701337d58/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1507574547" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/1-4-research-recap-seven-master-planning/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">62b85128-b200-447d-b7de-a80701337d58</guid>
      <omny:clipId>62b85128-b200-447d-b7de-a80701337d58</omny:clipId>
      <pubDate>Mon, 09 Oct 2017 18:42:00 +0000</pubDate>
      <itunes:duration>4262</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/62b85128-b200-447d-b7de-a80701337d58/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1507574547" length="68053549" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/1-4-research-recap-seven-master-planning</link>
    </item>
    <item>
      <title>Teaching Elm To 4th Graders: Christopher Anand</title>
      <itunes:title>Teaching Elm To 4th Graders: Christopher Anand</itunes:title>
      <description><![CDATA[<p>Most people consider ML-based langauges like Elm hard enough to learn as an adult. But according to Professor Christopher Anand of McMaster University, they work really well to introduce Computer Science to children, starting in 4th grade! In this episode, Christopher and I explore the difference between alegbraic thinking and computational (or sequential) thinking, and why this is incredibly relevant today as the "coding for all" movement gains traction.</p> <p>You can view the notes for this episode online at http://futureofcoding.org/episodes/13-teaching-elm-to-4th-graders-christopher-anand.html</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Most people consider ML-based langauges like Elm hard enough to learn as an adult. But according to Professor Christopher Anand of McMaster University, they work really well to introduce Computer Science to children, starting in 4th grade! In this episode, Christopher and I explore the difference between alegbraic thinking and computational (or sequential) thinking, and why this is incredibly relevant today as the "coding for all" movement gains traction.</p> <p>You can view the notes for this episode online at http://futureofcoding.org/episodes/13-teaching-elm-to-4th-graders-christopher-anand.html</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/e336008c-3fc0-4231-b25b-a7fd00d9f295/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1507032039" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/1-3-teaching-elm-to-4th-graders-christopher-anand/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">e336008c-3fc0-4231-b25b-a7fd00d9f295</guid>
      <omny:clipId>e336008c-3fc0-4231-b25b-a7fd00d9f295</omny:clipId>
      <pubDate>Tue, 03 Oct 2017 12:00:00 +0000</pubDate>
      <itunes:duration>3682</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/e336008c-3fc0-4231-b25b-a7fd00d9f295/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1507032039" length="58935552" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/1-3-teaching-elm-to-4th-graders-christopher-anand</link>
    </item>
    <item>
      <title>Research Recap Six: CycleJS Deep Dive</title>
      <itunes:title>Research Recap Six: CycleJS Deep Dive</itunes:title>
      <description><![CDATA[<p>The last two weeks were all about CycleJS. In order to create visual spreadsheet metaphors for CycleJS stream combinators, I need to have a better understanding of how CycleJS works, and so I played around with it by building a CycleJS Flappy bird. I also spend time recently playing with spreadsheets and Clay.&nbsp;</p> <p>You can read more <a href="http://futureofcoding.org/journal#cyclejs-deep-dive">at my journal</a>&nbsp;(<a href="http://futureofcoding.org/journal">futureofcoding.org/journal</a>).</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>The last two weeks were all about CycleJS. In order to create visual spreadsheet metaphors for CycleJS stream combinators, I need to have a better understanding of how CycleJS works, and so I played around with it by building a CycleJS Flappy bird. I also spend time recently playing with spreadsheets and Clay.&nbsp;</p> <p>You can read more <a href="http://futureofcoding.org/journal#cyclejs-deep-dive">at my journal</a>&nbsp;(<a href="http://futureofcoding.org/journal">futureofcoding.org/journal</a>).</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/a2faefaa-f226-44b3-b31d-a7f900f43a73/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1506351056" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/1-2-research-recap-six-cyclejs-deep-dive/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">a2faefaa-f226-44b3-b31d-a7f900f43a73</guid>
      <omny:clipId>a2faefaa-f226-44b3-b31d-a7f900f43a73</omny:clipId>
      <pubDate>Mon, 25 Sep 2017 14:50:00 +0000</pubDate>
      <itunes:duration>1765</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/a2faefaa-f226-44b3-b31d-a7f900f43a73/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1506351056" length="28187517" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/1-2-research-recap-six-cyclejs-deep-dive</link>
    </item>
    <item>
      <title>How ReactJS was created - with Pete Hunt</title>
      <itunes:title>How ReactJS was created - with Pete Hunt</itunes:title>
      <description><![CDATA[<p>One of the original ReactJS developers at Facebook and Instagram, Pete Hunt (<a class="ProfileHeaderCard-screennameLink u-linkComplex js-nav" href="https://twitter.com/floydophone">@<strong class="u-linkComplex-target">floydophone</strong></a>) tells us the story behind the metoric rise of ReactJS. Pete explains the problems he faced Instagram Web that led him to Jordan Walke's early React prototype, and how he helped develop, evangalize, and grow React to what you know it to be today.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>One of the original ReactJS developers at Facebook and Instagram, Pete Hunt (<a class="ProfileHeaderCard-screennameLink u-linkComplex js-nav" href="https://twitter.com/floydophone">@<strong class="u-linkComplex-target">floydophone</strong></a>) tells us the story behind the metoric rise of ReactJS. Pete explains the problems he faced Instagram Web that led him to Jordan Walke's early React prototype, and how he helped develop, evangalize, and grow React to what you know it to be today.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/d156aed9-8dd9-4649-b6ce-a7f300f4d91d/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1505834449" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/1-1-how-reactjs-was-created-with-pete-hunt/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">d156aed9-8dd9-4649-b6ce-a7f300f4d91d</guid>
      <omny:clipId>d156aed9-8dd9-4649-b6ce-a7f300f4d91d</omny:clipId>
      <pubDate>Tue, 19 Sep 2017 15:20:00 +0000</pubDate>
      <itunes:duration>4432</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/d156aed9-8dd9-4649-b6ce-a7f300f4d91d/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1505834449" length="70768644" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/1-1-how-reactjs-was-created-with-pete-hunt</link>
    </item>
    <item>
      <title>Unison's Paul Chiusano on how Abstraction Will Save Distributed Computing</title>
      <itunes:title>Unison's Paul Chiusano on how Abstraction Will Save Distributed Computing</itunes:title>
      <description><![CDATA[<p>In this episode I speak with Paul Chiusano (<a class="ProfileHeaderCard-screennameLink u-linkComplex js-nav" href="https://twitter.com/pchiusano">@pchiusano</a>), creator of <a href="unisonweb.org">Unison</a>, about his ambitious vision for the future, where we can abstract over distributed computing, and there are no apps.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>In this episode I speak with Paul Chiusano (<a class="ProfileHeaderCard-screennameLink u-linkComplex js-nav" href="https://twitter.com/pchiusano">@pchiusano</a>), creator of <a href="unisonweb.org">Unison</a>, about his ambitious vision for the future, where we can abstract over distributed computing, and there are no apps.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/fbdd3147-b7b2-423c-ae44-a7ed00ebbcd7/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1505312608" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/1-0-unisons-paul-chiusano-on-how-abstraction-will/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">fbdd3147-b7b2-423c-ae44-a7ed00ebbcd7</guid>
      <omny:clipId>fbdd3147-b7b2-423c-ae44-a7ed00ebbcd7</omny:clipId>
      <pubDate>Wed, 13 Sep 2017 14:23:00 +0000</pubDate>
      <itunes:duration>5145</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/fbdd3147-b7b2-423c-ae44-a7ed00ebbcd7/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1505312608" length="82145304" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/1-0-unisons-paul-chiusano-on-how-abstraction-will</link>
    </item>
    <item>
      <title>Research Recap Five</title>
      <itunes:title>Research Recap Five</itunes:title>
      <description><![CDATA[<p>The last two-week-research-cycle was my most productive yet! In this recap, I debreif my Alan Kay deep dive, discuss tweaking my schedule after reading Peak, review conversations with Jaime Brandon and Dan Scanlon, read aloud my thoughts on proper computer use patterns and my prototype idea LogicHub, recap my early morning meeting with CycleJS creator Andre Staltz, and discuss the next steps for my StreamSheets prototype (which is why I'm putting my Bret Victor deep dive on pause).</p> <p>If you were able to follow all that, my hat is off to you. I barely made it through the recording and episode of this episode alive. If you need help pieceing this episode together, you can find the notes on my website:&nbsp;/futureofcoding.org/episodes/9-research-recap-five.html</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>The last two-week-research-cycle was my most productive yet! In this recap, I debreif my Alan Kay deep dive, discuss tweaking my schedule after reading Peak, review conversations with Jaime Brandon and Dan Scanlon, read aloud my thoughts on proper computer use patterns and my prototype idea LogicHub, recap my early morning meeting with CycleJS creator Andre Staltz, and discuss the next steps for my StreamSheets prototype (which is why I'm putting my Bret Victor deep dive on pause).</p> <p>If you were able to follow all that, my hat is off to you. I barely made it through the recording and episode of this episode alive. If you need help pieceing this episode together, you can find the notes on my website:&nbsp;/futureofcoding.org/episodes/9-research-recap-five.html</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/229a36f8-46f9-4b6e-86c0-a7eb01555ef5/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1505162848" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/9-research-recap-five/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">229a36f8-46f9-4b6e-86c0-a7eb01555ef5</guid>
      <omny:clipId>229a36f8-46f9-4b6e-86c0-a7eb01555ef5</omny:clipId>
      <pubDate>Mon, 11 Sep 2017 20:47:00 +0000</pubDate>
      <itunes:duration>4542</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/229a36f8-46f9-4b6e-86c0-a7eb01555ef5/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1505162848" length="72523753" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/9-research-recap-five</link>
    </item>
    <item>
      <title>Research Recap Four</title>
      <itunes:title>Research Recap Four</itunes:title>
      <description><![CDATA[<p>After coming back from Boston, I did a deep dive into Jonathan Edwards, Jaime Brandon, Conal Elliot, as well as spending a full day reviewing Eve (Chris Granger). Towards the end of the week, I released a simple prototype for StreamSheets and send it over to Andre Staltz for ideas and feedback.</p> <p>Notes here:&nbsp;<a href="http://futureofcoding.org/journal#research-recap-4">http://futureofcoding.org/journal#research-recap-4</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>After coming back from Boston, I did a deep dive into Jonathan Edwards, Jaime Brandon, Conal Elliot, as well as spending a full day reviewing Eve (Chris Granger). Towards the end of the week, I released a simple prototype for StreamSheets and send it over to Andre Staltz for ideas and feedback.</p> <p>Notes here:&nbsp;<a href="http://futureofcoding.org/journal#research-recap-4">http://futureofcoding.org/journal#research-recap-4</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/6e98bc93-c542-4fcb-bad3-a7df015252a4/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1504125351" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/8-research-recap-four/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">6e98bc93-c542-4fcb-bad3-a7df015252a4</guid>
      <omny:clipId>6e98bc93-c542-4fcb-bad3-a7df015252a4</omny:clipId>
      <pubDate>Mon, 28 Aug 2017 04:00:00 +0000</pubDate>
      <itunes:duration>2333</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/6e98bc93-c542-4fcb-bad3-a7df015252a4/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1504125351" length="37260148" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/8-research-recap-four</link>
    </item>
    <item>
      <title>Looker's Lloyd Tabb on Growing Languages Through Deprecation</title>
      <itunes:title>Looker's Lloyd Tabb on Growing Languages Through Deprecation</itunes:title>
      <description><![CDATA[<p>In this episode, I speak with Lloyd Tabb, co-founder and CTO of <a href="https://looker.com/">Looker</a>, a data analytics platform build around a SQL modeling langauge, LookML. He talks about how he created a successful business around a language, and how he continually improves the language through deprecation.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>In this episode, I speak with Lloyd Tabb, co-founder and CTO of <a href="https://looker.com/">Looker</a>, a data analytics platform build around a SQL modeling langauge, LookML. He talks about how he created a successful business around a language, and how he continually improves the language through deprecation.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/b2b1c1bf-ac72-4a99-b4ec-a7df01525268/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1504125440" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/7-lookers-lloyd-tabb-on-growing-languages-through/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">b2b1c1bf-ac72-4a99-b4ec-a7df01525268</guid>
      <omny:clipId>b2b1c1bf-ac72-4a99-b4ec-a7df01525268</omny:clipId>
      <pubDate>Fri, 25 Aug 2017 04:00:00 +0000</pubDate>
      <itunes:duration>4148</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/b2b1c1bf-ac72-4a99-b4ec-a7df01525268/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1504125440" length="66239228" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/7-lookers-lloyd-tabb-on-growing-languages-through</link>
    </item>
    <item>
      <title>Research Recap Three (WoofJS Workflow)</title>
      <itunes:title>Research Recap Three (WoofJS Workflow)</itunes:title>
      <description><![CDATA[<p>Over the last two weeks I had a suprise trip to Boston to meet with other researchers in this space. In preperation for the event, I spent most of the last two weeks building the WoofJS Workflow prototype.</p> <p>Notes here:&nbsp;<a href="http://futureofcoding.org/episodes/6-research-recap-three.html">http://futureofcoding.org/episodes/6-research-recap-three.html</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Over the last two weeks I had a suprise trip to Boston to meet with other researchers in this space. In preperation for the event, I spent most of the last two weeks building the WoofJS Workflow prototype.</p> <p>Notes here:&nbsp;<a href="http://futureofcoding.org/episodes/6-research-recap-three.html">http://futureofcoding.org/episodes/6-research-recap-three.html</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/e3a9a943-5ad5-4eb0-8cb6-a7d900d83328/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1503580092" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/6-research-recap-three-woofjs-workflow/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">e3a9a943-5ad5-4eb0-8cb6-a7d900d83328</guid>
      <omny:clipId>e3a9a943-5ad5-4eb0-8cb6-a7d900d83328</omny:clipId>
      <pubDate>Thu, 24 Aug 2017 13:08:00 +0000</pubDate>
      <itunes:duration>1602</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/e3a9a943-5ad5-4eb0-8cb6-a7d900d83328/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1503580092" length="25592526" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/6-research-recap-three-woofjs-workflow</link>
    </item>
    <item>
      <title>Samantha John Of Hopscotch On Learnable Programming</title>
      <itunes:title>Samantha John Of Hopscotch On Learnable Programming</itunes:title>
      <description><![CDATA[<p>In this episode, I chat with Samantha John (@saj0hn), cofounder and CEO of Hopscoth (@hopscotch), the award-winning iPad and iPhone app that allows kids to learn to code and share their projects with the Hopscotch community.</p> <p>Learn more at <a href="http://futureofcoding.org">futureofcoding.org</a>.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>In this episode, I chat with Samantha John (@saj0hn), cofounder and CEO of Hopscoth (@hopscotch), the award-winning iPad and iPhone app that allows kids to learn to code and share their projects with the Hopscotch community.</p> <p>Learn more at <a href="http://futureofcoding.org">futureofcoding.org</a>.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/017bc928-aadd-41c2-8961-a7ca0155aa9e/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1502376506" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/5-samantha-john-of-hopscotch-on-learnable-programm/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">017bc928-aadd-41c2-8961-a7ca0155aa9e</guid>
      <omny:clipId>017bc928-aadd-41c2-8961-a7ca0155aa9e</omny:clipId>
      <pubDate>Fri, 11 Aug 2017 14:48:00 +0000</pubDate>
      <itunes:duration>3600</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/017bc928-aadd-41c2-8961-a7ca0155aa9e/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1502376506" length="57483876" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/5-samantha-john-of-hopscotch-on-learnable-programm</link>
    </item>
    <item>
      <title>Research Recap Two</title>
      <itunes:title>Research Recap Two</itunes:title>
      <description><![CDATA[<p>Learn about what I did over the last two weeks!&nbsp;</p> <p>Notes here: <a href="http://futureofcoding.org/episodes/4-research-recap-two.html">http://futureofcoding.org/episodes/4-research-recap-two.html</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Learn about what I did over the last two weeks!&nbsp;</p> <p>Notes here: <a href="http://futureofcoding.org/episodes/4-research-recap-two.html">http://futureofcoding.org/episodes/4-research-recap-two.html</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/0ad886f7-aa6d-4830-a558-a7ca0155f8a3/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1502311608" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/4-research-recap-two/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">0ad886f7-aa6d-4830-a558-a7ca0155f8a3</guid>
      <omny:clipId>0ad886f7-aa6d-4830-a558-a7ca0155f8a3</omny:clipId>
      <pubDate>Mon, 31 Jul 2017 04:00:00 +0000</pubDate>
      <itunes:duration>2649</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/0ad886f7-aa6d-4830-a558-a7ca0155f8a3/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1502311608" length="42300425" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/4-research-recap-two</link>
    </item>
    <item>
      <title>Jonathan Leung on Inventing on Principle</title>
      <itunes:title>Jonathan Leung on Inventing on Principle</itunes:title>
      <description><![CDATA[<p>My friend Jonathan and I discuss various design goals that I try to keep in mind while doing user interface research.</p> <p>You can find notes from this episode at&nbsp;<a href="http://futureofcoding.org/episodes/3-jonathan-leung-on-inventing-on-principle.html">http://futureofcoding.org/episodes/3-jonathan-leung-on-inventing-on-principle.html</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>My friend Jonathan and I discuss various design goals that I try to keep in mind while doing user interface research.</p> <p>You can find notes from this episode at&nbsp;<a href="http://futureofcoding.org/episodes/3-jonathan-leung-on-inventing-on-principle.html">http://futureofcoding.org/episodes/3-jonathan-leung-on-inventing-on-principle.html</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/3ae451bd-d6da-42db-a84b-a7bf01618231/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1501366257" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/3-jonathan-leung-on-inventing-on-principle/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">3ae451bd-d6da-42db-a84b-a7bf01618231</guid>
      <omny:clipId>3ae451bd-d6da-42db-a84b-a7bf01618231</omny:clipId>
      <pubDate>Fri, 21 Jul 2017 22:09:00 +0000</pubDate>
      <itunes:duration>4941</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/3ae451bd-d6da-42db-a84b-a7bf01618231/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1501366257" length="78887211" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/3-jonathan-leung-on-inventing-on-principle</link>
    </item>
    <item>
      <title>Research Recap - A Year in Review</title>
      <itunes:title>Research Recap - A Year in Review</itunes:title>
      <description><![CDATA[<p>Let me get you up to speed with my research projects over the past year.</p> <p>You can read more about my projects <a href="https://medium.com/@stevekrouse/rose-983dc5e0908f">here</a> and <a href="https://medium.com/@stevekrouse/rose-project-april-2017-32af31b078b1">here</a>&nbsp;and about <a href="https://medium.com/@stevekrouse/woof-d9adf2110fc6">WoofJS here</a>.</p> <p>You can find more notes about this episode at&nbsp;<a href="http://futureofcoding.org/episodes/2-research-recap.html">http://futureofcoding.org/episodes/2-research-recap.html</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Let me get you up to speed with my research projects over the past year.</p> <p>You can read more about my projects <a href="https://medium.com/@stevekrouse/rose-983dc5e0908f">here</a> and <a href="https://medium.com/@stevekrouse/rose-project-april-2017-32af31b078b1">here</a>&nbsp;and about <a href="https://medium.com/@stevekrouse/woof-d9adf2110fc6">WoofJS here</a>.</p> <p>You can find more notes about this episode at&nbsp;<a href="http://futureofcoding.org/episodes/2-research-recap.html">http://futureofcoding.org/episodes/2-research-recap.html</a></p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:episodeType>full</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/a710a650-4f18-4842-a6c6-a7b300e96b0d/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1500300906" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/research-recap/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">3RSWLRCL-J1YVI</guid>
      <omny:clipId>a710a650-4f18-4842-a6c6-a7b300e96b0d</omny:clipId>
      <pubDate>Wed, 19 Jul 2017 18:15:00 +0000</pubDate>
      <itunes:duration>3214</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/a710a650-4f18-4842-a6c6-a7b300e96b0d/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1500300906" length="51319281" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/research-recap</link>
    </item>
    <item>
      <title>Welcome to the Future of Coding</title>
      <itunes:title>Welcome to the Future of Coding</itunes:title>
      <description><![CDATA[<p>Hi, I'm Steve Krouse. Welcome to my podcast and&nbsp;<a href="http://futureofcoding.org/journal">open-journal</a>&nbsp;research project to create the future of coding.</p> <p>I believe the tools we currently use to create software can be drastically improved. Join me on my journey to discover the future of coding.</p> <p>Every week I alternate between recapping my own research and talking with programming language and interface experts.</p> <p>You can follow my progress at <a href="http://futureofcoding.org">futureofcoding.org</a>.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></description>
      <content:encoded><![CDATA[<p>Hi, I'm Steve Krouse. Welcome to my podcast and&nbsp;<a href="http://futureofcoding.org/journal">open-journal</a>&nbsp;research project to create the future of coding.</p> <p>I believe the tools we currently use to create software can be drastically improved. Join me on my journey to discover the future of coding.</p> <p>Every week I alternate between recapping my own research and talking with programming language and interface experts.</p> <p>You can follow my progress at <a href="http://futureofcoding.org">futureofcoding.org</a>.</p><p><a href="https://www.patreon.com/futureofcoding" rel="payment">Support us on Patreon: https://www.patreon.com/futureofcoding</a></p><p>See <a href="https://omnystudio.com/listener">omnystudio.com/listener</a> for privacy information.</p>]]></content:encoded>
      <itunes:summary>futureofcoding.org
@stevekrouse</itunes:summary>
      <itunes:episodeType>trailer</itunes:episodeType>
      <itunes:author>Future of Coding</itunes:author>
      <itunes:image href="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" />
      <media:content url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/96e0134f-dc4c-4944-94fb-a7b300e96893/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1502312101" type="audio/mpeg">
        <media:player url="https://omny.fm/shows/future-of-coding/welcome-to-the-future-of-coding/embed" />
      </media:content>
      <media:content url="https://www.omnycontent.com/d/playlist/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/ac317852-8807-44b8-8eff-a7b300e4df52/image.jpg?t=1673043668&amp;size=Large" type="image/jpeg" />
      <guid isPermaLink="false">J1VATBUC-7WG66R</guid>
      <omny:clipId>96e0134f-dc4c-4944-94fb-a7b300e96893</omny:clipId>
      <pubDate>Fri, 14 Jul 2017 14:54:00 +0000</pubDate>
      <itunes:duration>215</itunes:duration>
      <enclosure url="https://traffic.omny.fm/d/clips/c4157e60-c7f8-470d-b13f-a7b30040df73/564f493f-af32-4c48-862f-a7b300e4df49/96e0134f-dc4c-4944-94fb-a7b300e96893/audio.mp3?utm_source=Podcast&amp;in_playlist=ac317852-8807-44b8-8eff-a7b300e4df52&amp;t=1502312101" length="3451893" type="audio/mpeg" />
      <link>https://omny.fm/shows/future-of-coding/welcome-to-the-future-of-coding</link>
    </item>
  </channel>
</rss>