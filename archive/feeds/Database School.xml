<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="stylesheet.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:podcast="https://podcastindex.org/namespace/1.0">
  <channel>
    <atom:link rel="self" type="application/atom+xml" href="https://feeds.transistor.fm/database-school" title="MP3 Audio"/>
    <atom:link rel="hub" href="https://pubsubhubbub.appspot.com/"/>
    <podcast:podping usesPodping="true"/>
    <title>Database School</title>
    <generator>Transistor (https://transistor.fm)</generator>
    <itunes:new-feed-url>https://feeds.transistor.fm/database-school</itunes:new-feed-url>
    <description>Join database educator Aaron Francis as he gets schooled by database professionals.</description>
    <copyright>© 2025 Try Hard Studios</copyright>
    <podcast:guid>f726b714-856d-5708-9f1b-09e9154c224e</podcast:guid>
    <podcast:locked owner="aaron@tryhardstudios.com">no</podcast:locked>
    <language>en</language>
    <pubDate>Thu, 29 May 2025 11:59:04 -0500</pubDate>
    <lastBuildDate>Thu, 29 May 2025 11:59:11 -0500</lastBuildDate>
    <link>https://tryhardstudios.com</link>
    <image>
      <url>https://img.transistor.fm/aJDfQ821gbSU2B8duVztUkC3v55WiDQoAkg4z2khnvA/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8wZjY1/NTY3MDRhNzFhYTA1/N2Y0ODA5Zjc3N2Vm/NWJkOS5qcGc.jpg</url>
      <title>Database School</title>
      <link>https://tryhardstudios.com</link>
    </image>
    <itunes:category text="Technology"/>
    <itunes:category text="Education"/>
    <itunes:type>episodic</itunes:type>
    <itunes:author>Try Hard Studios</itunes:author>
    <itunes:image href="https://img.transistor.fm/aJDfQ821gbSU2B8duVztUkC3v55WiDQoAkg4z2khnvA/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8wZjY1/NTY3MDRhNzFhYTA1/N2Y0ODA5Zjc3N2Vm/NWJkOS5qcGc.jpg"/>
    <itunes:summary>Join database educator Aaron Francis as he gets schooled by database professionals.</itunes:summary>
    <itunes:subtitle>Join database educator Aaron Francis as he gets schooled by database professionals..</itunes:subtitle>
    <itunes:keywords></itunes:keywords>
    <itunes:owner>
      <itunes:name>Aaron Francis</itunes:name>
    </itunes:owner>
    <itunes:complete>No</itunes:complete>
    <itunes:explicit>No</itunes:explicit>
    <item>
      <title>From Prisma Founder to LiveStore: Building local-first apps with Johannes Schickling</title>
      <itunes:episode>15</itunes:episode>
      <podcast:episode>15</podcast:episode>
      <itunes:title>From Prisma Founder to LiveStore: Building local-first apps with Johannes Schickling</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">85698d58-9569-4af7-a874-8762c376c438</guid>
      <link>https://share.transistor.fm/s/408899d7</link>
      <description>
        <![CDATA[<p>Johannes Schickling, original founder of Prisma, joins me to talk about <strong>LiveStore</strong>, his ambitious local-first data layer designed to rethink how we build apps from the data layer up.</p><p><br></p><p>We dive deep into event sourcing, syncing with SQLite, and why this approach might power the next generation of reactive apps.</p><p><br></p><p><strong>🔗 Links Mentioned</strong></p><p><br></p><p><strong>Want to learn more about SQLite?</strong></p><p>Check out my SQLite course:</p><p>https://highperformancesqlite.com/?ref=yt</p><p><br></p><p><strong>LiveStore</strong></p><p>Website: https://livestore.dev</p><p>Repo: https://github.com/livestorejs</p><p>Discord: https://discord.gg/RbMcjUAPd7</p><p><br></p><p><strong>Follow Johannes</strong></p><p>Twitter: https://www.x.com/schickling</p><p>LinkedIn: https://www.linkedin.com/in/schickling</p><p>Website: https://www.schickling.dev</p><p>Podcast: https://www.localfirst.fm</p><p><br></p><p><strong>Follow Aaron</strong></p><p>Twitter: https://twitter.com/aarondfrancis</p><p>LinkedIn: https://www.linkedin.com/in/aarondfrancis</p><p>Website: https://aaronfrancis.com — find articles, podcasts, courses, and more</p><p><br></p><p><strong>Database School</strong></p><p>YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15</p><p>Audio only: https://databaseschool.transistor.fm</p><p><br></p><p><strong>🕒 Chapters</strong></p><p><br></p><p>00:00 - Intro to Johannes</p><p>01:00 - From Prisma to LiveStore</p><p>03:00 - Discovering local-first through Riffle</p><p>05:00 - What is local-first and who is it for?</p><p>07:00 - Why local-first is gaining popularity</p><p>10:00 - The inspiration from apps like Linear</p><p>13:00 - Gaps in local-first tooling in 2020</p><p>16:00 - Social apps vs. user-centric apps</p><p>18:00 - Distributed systems and why they’re hard</p><p>21:00 - The value of embracing local-first</p><p>24:00 - What LiveStore is and what it’s not</p><p>26:00 - Event sourcing as the core of LiveStore</p><p>30:00 - Benefits of event sourcing for apps</p><p>33:00 - Schema changes and time travel via events</p><p>37:00 - Materializers and how they work</p><p>43:00 - Syncing data across clients and devices</p><p>48:00 - Sync servers and cross-tab communication</p><p>54:00 - Architecture choices and dev tooling</p><p>59:00 - State of the project and future vision</p><p>1:06:00 - How to get involved</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Johannes Schickling, original founder of Prisma, joins me to talk about <strong>LiveStore</strong>, his ambitious local-first data layer designed to rethink how we build apps from the data layer up.</p><p><br></p><p>We dive deep into event sourcing, syncing with SQLite, and why this approach might power the next generation of reactive apps.</p><p><br></p><p><strong>🔗 Links Mentioned</strong></p><p><br></p><p><strong>Want to learn more about SQLite?</strong></p><p>Check out my SQLite course:</p><p>https://highperformancesqlite.com/?ref=yt</p><p><br></p><p><strong>LiveStore</strong></p><p>Website: https://livestore.dev</p><p>Repo: https://github.com/livestorejs</p><p>Discord: https://discord.gg/RbMcjUAPd7</p><p><br></p><p><strong>Follow Johannes</strong></p><p>Twitter: https://www.x.com/schickling</p><p>LinkedIn: https://www.linkedin.com/in/schickling</p><p>Website: https://www.schickling.dev</p><p>Podcast: https://www.localfirst.fm</p><p><br></p><p><strong>Follow Aaron</strong></p><p>Twitter: https://twitter.com/aarondfrancis</p><p>LinkedIn: https://www.linkedin.com/in/aarondfrancis</p><p>Website: https://aaronfrancis.com — find articles, podcasts, courses, and more</p><p><br></p><p><strong>Database School</strong></p><p>YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15</p><p>Audio only: https://databaseschool.transistor.fm</p><p><br></p><p><strong>🕒 Chapters</strong></p><p><br></p><p>00:00 - Intro to Johannes</p><p>01:00 - From Prisma to LiveStore</p><p>03:00 - Discovering local-first through Riffle</p><p>05:00 - What is local-first and who is it for?</p><p>07:00 - Why local-first is gaining popularity</p><p>10:00 - The inspiration from apps like Linear</p><p>13:00 - Gaps in local-first tooling in 2020</p><p>16:00 - Social apps vs. user-centric apps</p><p>18:00 - Distributed systems and why they’re hard</p><p>21:00 - The value of embracing local-first</p><p>24:00 - What LiveStore is and what it’s not</p><p>26:00 - Event sourcing as the core of LiveStore</p><p>30:00 - Benefits of event sourcing for apps</p><p>33:00 - Schema changes and time travel via events</p><p>37:00 - Materializers and how they work</p><p>43:00 - Syncing data across clients and devices</p><p>48:00 - Sync servers and cross-tab communication</p><p>54:00 - Architecture choices and dev tooling</p><p>59:00 - State of the project and future vision</p><p>1:06:00 - How to get involved</p>]]>
      </content:encoded>
      <pubDate>Thu, 29 May 2025 11:59:04 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/408899d7/4960db1c.mp3" length="56361781" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>5500</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Johannes Schickling, original founder of Prisma, joins me to talk about <strong>LiveStore</strong>, his ambitious local-first data layer designed to rethink how we build apps from the data layer up.</p><p><br></p><p>We dive deep into event sourcing, syncing with SQLite, and why this approach might power the next generation of reactive apps.</p><p><br></p><p><strong>🔗 Links Mentioned</strong></p><p><br></p><p><strong>Want to learn more about SQLite?</strong></p><p>Check out my SQLite course:</p><p>https://highperformancesqlite.com/?ref=yt</p><p><br></p><p><strong>LiveStore</strong></p><p>Website: https://livestore.dev</p><p>Repo: https://github.com/livestorejs</p><p>Discord: https://discord.gg/RbMcjUAPd7</p><p><br></p><p><strong>Follow Johannes</strong></p><p>Twitter: https://www.x.com/schickling</p><p>LinkedIn: https://www.linkedin.com/in/schickling</p><p>Website: https://www.schickling.dev</p><p>Podcast: https://www.localfirst.fm</p><p><br></p><p><strong>Follow Aaron</strong></p><p>Twitter: https://twitter.com/aarondfrancis</p><p>LinkedIn: https://www.linkedin.com/in/aarondfrancis</p><p>Website: https://aaronfrancis.com — find articles, podcasts, courses, and more</p><p><br></p><p><strong>Database School</strong></p><p>YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15</p><p>Audio only: https://databaseschool.transistor.fm</p><p><br></p><p><strong>🕒 Chapters</strong></p><p><br></p><p>00:00 - Intro to Johannes</p><p>01:00 - From Prisma to LiveStore</p><p>03:00 - Discovering local-first through Riffle</p><p>05:00 - What is local-first and who is it for?</p><p>07:00 - Why local-first is gaining popularity</p><p>10:00 - The inspiration from apps like Linear</p><p>13:00 - Gaps in local-first tooling in 2020</p><p>16:00 - Social apps vs. user-centric apps</p><p>18:00 - Distributed systems and why they’re hard</p><p>21:00 - The value of embracing local-first</p><p>24:00 - What LiveStore is and what it’s not</p><p>26:00 - Event sourcing as the core of LiveStore</p><p>30:00 - Benefits of event sourcing for apps</p><p>33:00 - Schema changes and time travel via events</p><p>37:00 - Materializers and how they work</p><p>43:00 - Syncing data across clients and devices</p><p>48:00 - Sync servers and cross-tab communication</p><p>54:00 - Architecture choices and dev tooling</p><p>59:00 - State of the project and future vision</p><p>1:06:00 - How to get involved</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>How Durable Objects and D1 Work: A Deep Dive with Cloudflare’s Josh Howard</title>
      <itunes:episode>14</itunes:episode>
      <podcast:episode>14</podcast:episode>
      <itunes:title>How Durable Objects and D1 Work: A Deep Dive with Cloudflare’s Josh Howard</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">9407c824-3c63-487d-aef2-d426dc6ae2e7</guid>
      <link>https://share.transistor.fm/s/0acbfc78</link>
      <description>
        <![CDATA[<p>Josh Howard, Senior Engineering Manager at Cloudflare, joins me to explain how Durable Objects and D1 work under the hood—and why Cloudflare’s approach to stateful serverless infrastructure is so unique. We get into V8 isolates, replication models, routing strategies, and even upcoming support for containers. </p><p>Want to learn more about SQLite? Check out my SQLite course: https://highperformancesqlite.com/?ref=podcast </p><p>Follow Josh: <br>Twitter: https://twitter.com/ajoshhoward <br>LinkedIn: https://www.linkedin.com/in/joshthoward </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters <br>00:00 - Intro <br>00:37 - What is a Durable Object? <br>01:43 - Cloudflare’s serverless model and V8 isolates <br>03:58 - Why stateful serverless matters <br>05:14 - Durable Objects vs Workers <br>06:22 - How routing to Durable Objects works <br>08:01 - What makes them "durable"? <br>08:51 - Tradeoffs of colocating compute and state <br>10:58 - Stateless Durable Objects <br>12:49 - Waking up from sleep and restoring state <br>16:15 - Durable Object storage: KV and SQLite APIs <br>18:49 - Relationship between D1, Workers KV, and DOs <br>20:34 - Performance of local storage writes <br>21:50 - Storage replication and output gating <br>24:15 - Lifecycle of a request through a Durable Object <br>26:46 - Replication strategy and long-term durability <br>31:25 - Placement logic and sharding strategy <br>36:35 - Use cases: agents, multiplayer games, chat apps <br>40:33 - Scaling Durable Objects <br>41:14 - Globally unique ID generation <br>43:22 - Named Durable Objects and coordination <br>46:07 - D1 vs Workers KV vs Durable Objects <br>47:50 - Outerbase acquisition and DX improvements <br>49:49 - Querying durable object storage <br>51:20 - Developer Week highlights and new features <br>52:44 - Read replicas and sticky sessions <br>53:49 - Containers and the future of routing <br>56:47 - Deployment regions and infrastructure expansion <br>57:43 - Hiring and how to connect with Josh</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Josh Howard, Senior Engineering Manager at Cloudflare, joins me to explain how Durable Objects and D1 work under the hood—and why Cloudflare’s approach to stateful serverless infrastructure is so unique. We get into V8 isolates, replication models, routing strategies, and even upcoming support for containers. </p><p>Want to learn more about SQLite? Check out my SQLite course: https://highperformancesqlite.com/?ref=podcast </p><p>Follow Josh: <br>Twitter: https://twitter.com/ajoshhoward <br>LinkedIn: https://www.linkedin.com/in/joshthoward </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters <br>00:00 - Intro <br>00:37 - What is a Durable Object? <br>01:43 - Cloudflare’s serverless model and V8 isolates <br>03:58 - Why stateful serverless matters <br>05:14 - Durable Objects vs Workers <br>06:22 - How routing to Durable Objects works <br>08:01 - What makes them "durable"? <br>08:51 - Tradeoffs of colocating compute and state <br>10:58 - Stateless Durable Objects <br>12:49 - Waking up from sleep and restoring state <br>16:15 - Durable Object storage: KV and SQLite APIs <br>18:49 - Relationship between D1, Workers KV, and DOs <br>20:34 - Performance of local storage writes <br>21:50 - Storage replication and output gating <br>24:15 - Lifecycle of a request through a Durable Object <br>26:46 - Replication strategy and long-term durability <br>31:25 - Placement logic and sharding strategy <br>36:35 - Use cases: agents, multiplayer games, chat apps <br>40:33 - Scaling Durable Objects <br>41:14 - Globally unique ID generation <br>43:22 - Named Durable Objects and coordination <br>46:07 - D1 vs Workers KV vs Durable Objects <br>47:50 - Outerbase acquisition and DX improvements <br>49:49 - Querying durable object storage <br>51:20 - Developer Week highlights and new features <br>52:44 - Read replicas and sticky sessions <br>53:49 - Containers and the future of routing <br>56:47 - Deployment regions and infrastructure expansion <br>57:43 - Hiring and how to connect with Josh</p>]]>
      </content:encoded>
      <pubDate>Wed, 14 May 2025 11:09:37 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/0acbfc78/0a12e9ec.mp3" length="46617315" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>4480</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Josh Howard, Senior Engineering Manager at Cloudflare, joins me to explain how Durable Objects and D1 work under the hood—and why Cloudflare’s approach to stateful serverless infrastructure is so unique. We get into V8 isolates, replication models, routing strategies, and even upcoming support for containers. </p><p>Want to learn more about SQLite? Check out my SQLite course: https://highperformancesqlite.com/?ref=podcast </p><p>Follow Josh: <br>Twitter: https://twitter.com/ajoshhoward <br>LinkedIn: https://www.linkedin.com/in/joshthoward </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters <br>00:00 - Intro <br>00:37 - What is a Durable Object? <br>01:43 - Cloudflare’s serverless model and V8 isolates <br>03:58 - Why stateful serverless matters <br>05:14 - Durable Objects vs Workers <br>06:22 - How routing to Durable Objects works <br>08:01 - What makes them "durable"? <br>08:51 - Tradeoffs of colocating compute and state <br>10:58 - Stateless Durable Objects <br>12:49 - Waking up from sleep and restoring state <br>16:15 - Durable Object storage: KV and SQLite APIs <br>18:49 - Relationship between D1, Workers KV, and DOs <br>20:34 - Performance of local storage writes <br>21:50 - Storage replication and output gating <br>24:15 - Lifecycle of a request through a Durable Object <br>26:46 - Replication strategy and long-term durability <br>31:25 - Placement logic and sharding strategy <br>36:35 - Use cases: agents, multiplayer games, chat apps <br>40:33 - Scaling Durable Objects <br>41:14 - Globally unique ID generation <br>43:22 - Named Durable Objects and coordination <br>46:07 - D1 vs Workers KV vs Durable Objects <br>47:50 - Outerbase acquisition and DX improvements <br>49:49 - Querying durable object storage <br>51:20 - Developer Week highlights and new features <br>52:44 - Read replicas and sticky sessions <br>53:49 - Containers and the future of routing <br>56:47 - Deployment regions and infrastructure expansion <br>57:43 - Hiring and how to connect with Josh</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>20 years of hacking Postgres with Heikki Linnakangas (cofounder of Neon)</title>
      <itunes:episode>13</itunes:episode>
      <podcast:episode>13</podcast:episode>
      <itunes:title>20 years of hacking Postgres with Heikki Linnakangas (cofounder of Neon)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">bd6a54d2-590d-44fd-8ddd-ca975787a986</guid>
      <link>https://share.transistor.fm/s/f47ca95f</link>
      <description>
        <![CDATA[<p>In this episode of Database School, I talk with Heikki Linnakangas, co-founder of Neon and longtime PostgreSQL hacker, to talk about 20+ years in the Postgres community, the architecture behind Neon, and the future of multi-threaded Postgres. From paternity leave patches to branching production databases, we cover a lot of ground in this deep-dive conversation. </p><p>Links: <br>Let's make postgres multi-threaded: https://www.postgresql.org/message-id/31cc6df9-53fe-3cd9-af5b-ac0d801163f4%40iki.fi <br>Hacker News discussion: https://news.ycombinator.com/item?id=36284487 </p><p>Follow Heikki: <br>LinkedIn: https://www.linkedin.com/in/heikki-linnakangas-6b58bb203/ <br>Website: https://neon.tech </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>00:00 - Introduction and Heikki's background <br>01:19 - How Heikki got into Postgres <br>03:17 - First major patch: two-phase commit <br>04:00 - Governance and decision-making in Postgres <br>07:00 - Committer consensus and decentralization <br>09:25 - Attracting new contributors <br>11:25 - Founding Neon with Nikita Shamgunov <br>13:01 - Why separation of compute and storage matters <br>15:00 - Write-ahead log and architectural insights <br>17:03 - Early days of building Neon <br>20:00 - Building the control plane and user-facing systems <br>21:28 - What "serverless Postgres" really means <br>23:39 - Reducing cold start time from 5s to 700ms <br>25:05 - Storage architecture and page servers <br>27:31 - Who uses sleepable databases <br>28:44 - Multi-tenancy and schema management <br>31:01 - Role in low-code/AI app generation <br>33:04 - Branching, time travel, and read replicas <br>36:56 - Real-time point-in-time query recovery <br>38:47 - Large customers and scaling in Neon <br>41:04 - Heikki’s favorite Neon feature: time travel <br>41:49 - Making Postgres multi-threaded <br>45:29 - Why it matters for connection scaling <br>50:50 - The next five years for Postgres and Neon <br>52:57 - Final thoughts and where to find Heikki</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>In this episode of Database School, I talk with Heikki Linnakangas, co-founder of Neon and longtime PostgreSQL hacker, to talk about 20+ years in the Postgres community, the architecture behind Neon, and the future of multi-threaded Postgres. From paternity leave patches to branching production databases, we cover a lot of ground in this deep-dive conversation. </p><p>Links: <br>Let's make postgres multi-threaded: https://www.postgresql.org/message-id/31cc6df9-53fe-3cd9-af5b-ac0d801163f4%40iki.fi <br>Hacker News discussion: https://news.ycombinator.com/item?id=36284487 </p><p>Follow Heikki: <br>LinkedIn: https://www.linkedin.com/in/heikki-linnakangas-6b58bb203/ <br>Website: https://neon.tech </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>00:00 - Introduction and Heikki's background <br>01:19 - How Heikki got into Postgres <br>03:17 - First major patch: two-phase commit <br>04:00 - Governance and decision-making in Postgres <br>07:00 - Committer consensus and decentralization <br>09:25 - Attracting new contributors <br>11:25 - Founding Neon with Nikita Shamgunov <br>13:01 - Why separation of compute and storage matters <br>15:00 - Write-ahead log and architectural insights <br>17:03 - Early days of building Neon <br>20:00 - Building the control plane and user-facing systems <br>21:28 - What "serverless Postgres" really means <br>23:39 - Reducing cold start time from 5s to 700ms <br>25:05 - Storage architecture and page servers <br>27:31 - Who uses sleepable databases <br>28:44 - Multi-tenancy and schema management <br>31:01 - Role in low-code/AI app generation <br>33:04 - Branching, time travel, and read replicas <br>36:56 - Real-time point-in-time query recovery <br>38:47 - Large customers and scaling in Neon <br>41:04 - Heikki’s favorite Neon feature: time travel <br>41:49 - Making Postgres multi-threaded <br>45:29 - Why it matters for connection scaling <br>50:50 - The next five years for Postgres and Neon <br>52:57 - Final thoughts and where to find Heikki</p>]]>
      </content:encoded>
      <pubDate>Tue, 06 May 2025 12:51:55 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/f47ca95f/7e245e00.mp3" length="40733975" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>7211</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>In this episode of Database School, I talk with Heikki Linnakangas, co-founder of Neon and longtime PostgreSQL hacker, to talk about 20+ years in the Postgres community, the architecture behind Neon, and the future of multi-threaded Postgres. From paternity leave patches to branching production databases, we cover a lot of ground in this deep-dive conversation. </p><p>Links: <br>Let's make postgres multi-threaded: https://www.postgresql.org/message-id/31cc6df9-53fe-3cd9-af5b-ac0d801163f4%40iki.fi <br>Hacker News discussion: https://news.ycombinator.com/item?id=36284487 </p><p>Follow Heikki: <br>LinkedIn: https://www.linkedin.com/in/heikki-linnakangas-6b58bb203/ <br>Website: https://neon.tech </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>00:00 - Introduction and Heikki's background <br>01:19 - How Heikki got into Postgres <br>03:17 - First major patch: two-phase commit <br>04:00 - Governance and decision-making in Postgres <br>07:00 - Committer consensus and decentralization <br>09:25 - Attracting new contributors <br>11:25 - Founding Neon with Nikita Shamgunov <br>13:01 - Why separation of compute and storage matters <br>15:00 - Write-ahead log and architectural insights <br>17:03 - Early days of building Neon <br>20:00 - Building the control plane and user-facing systems <br>21:28 - What "serverless Postgres" really means <br>23:39 - Reducing cold start time from 5s to 700ms <br>25:05 - Storage architecture and page servers <br>27:31 - Who uses sleepable databases <br>28:44 - Multi-tenancy and schema management <br>31:01 - Role in low-code/AI app generation <br>33:04 - Branching, time travel, and read replicas <br>36:56 - Real-time point-in-time query recovery <br>38:47 - Large customers and scaling in Neon <br>41:04 - Heikki’s favorite Neon feature: time travel <br>41:49 - Making Postgres multi-threaded <br>45:29 - Why it matters for connection scaling <br>50:50 - The next five years for Postgres and Neon <br>52:57 - Final thoughts and where to find Heikki</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Building a serverless database replica with Carl Sverre</title>
      <itunes:episode>12</itunes:episode>
      <podcast:episode>12</podcast:episode>
      <itunes:title>Building a serverless database replica with Carl Sverre</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">e2f411eb-5c75-4ccf-93c9-b47fe9558326</guid>
      <link>https://share.transistor.fm/s/6dc15ef3</link>
      <description>
        <![CDATA[<p>Want to learn more SQLite? Check out my SQLite course: https://highperformancesqlite.com </p><p>In this episode, Carl Sverre and I discuss why syncing everything is a bad idea and how his new project, Graft, makes edge-native, partially replicated databases possible. We dig into SQLite, object storage, transactional guarantees, and why Graft might be the foundation for serverless database replicas. </p><p>SQLSync: https://sqlsync.dev <br>Stop syncing everything blog post: https://sqlsync.dev/posts/stop-syncing-everything <br>Graft: https://github.com/orbitinghail/graft </p><p>Follow Carl: <br>Twitter: https://twitter.com/carlsverre <br>LinkedIn: https://www.linkedin.com/in/carlsverre <br>Website: https://carlsverre.com/ </p><p>Follow Aaron: Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm  </p><p>Chapters: 00:00 - Intro and Carl’s controversial blog title <br>01:00 - Why “stop syncing everything” doesn't mean stop syncing <br>02:30 - The problem with full database syncs <br>03:20 - Quick recap of SQL Sync and multiplayer SQLite <br>04:45 - How SQL Sync works using physical replication <br>06:00 - The limitations that led to building Graft <br>09:00 - What is Graft? A high-level overview <br>16:30 - Syncing architecture: how Graft scales <br>18:00 - Graft's stateless design and Fly.io integration <br>20:00 - S3 compatibility and using Tigris as backend <br>22:00 - Latency tuning and express zone support <br>24:00 - Can Graft run locally or with Minio? <br>27:00 - Page store vs meta store in Graft <br>36:00 - Index-aware prefetching in SQLite <br>38:00 - Prefetching intelligence: Graft vs driver <br>40:00 - The benefits of Graft's architectural simplicity <br>48:00 - Three use cases: apps, web apps, and replicas <br>50:00 - Sync timing and perceived latency <br>59:00 - Replaying transactions vs logical conflict resolution <br>1:03:00 - What’s next for Graft and how to get involved <br>1:05:00 - Hacker News reception and blog post feedback <br>1:06:30 - Closing thoughts and where to find Carl</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Want to learn more SQLite? Check out my SQLite course: https://highperformancesqlite.com </p><p>In this episode, Carl Sverre and I discuss why syncing everything is a bad idea and how his new project, Graft, makes edge-native, partially replicated databases possible. We dig into SQLite, object storage, transactional guarantees, and why Graft might be the foundation for serverless database replicas. </p><p>SQLSync: https://sqlsync.dev <br>Stop syncing everything blog post: https://sqlsync.dev/posts/stop-syncing-everything <br>Graft: https://github.com/orbitinghail/graft </p><p>Follow Carl: <br>Twitter: https://twitter.com/carlsverre <br>LinkedIn: https://www.linkedin.com/in/carlsverre <br>Website: https://carlsverre.com/ </p><p>Follow Aaron: Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm  </p><p>Chapters: 00:00 - Intro and Carl’s controversial blog title <br>01:00 - Why “stop syncing everything” doesn't mean stop syncing <br>02:30 - The problem with full database syncs <br>03:20 - Quick recap of SQL Sync and multiplayer SQLite <br>04:45 - How SQL Sync works using physical replication <br>06:00 - The limitations that led to building Graft <br>09:00 - What is Graft? A high-level overview <br>16:30 - Syncing architecture: how Graft scales <br>18:00 - Graft's stateless design and Fly.io integration <br>20:00 - S3 compatibility and using Tigris as backend <br>22:00 - Latency tuning and express zone support <br>24:00 - Can Graft run locally or with Minio? <br>27:00 - Page store vs meta store in Graft <br>36:00 - Index-aware prefetching in SQLite <br>38:00 - Prefetching intelligence: Graft vs driver <br>40:00 - The benefits of Graft's architectural simplicity <br>48:00 - Three use cases: apps, web apps, and replicas <br>50:00 - Sync timing and perceived latency <br>59:00 - Replaying transactions vs logical conflict resolution <br>1:03:00 - What’s next for Graft and how to get involved <br>1:05:00 - Hacker News reception and blog post feedback <br>1:06:30 - Closing thoughts and where to find Carl</p>]]>
      </content:encoded>
      <pubDate>Fri, 18 Apr 2025 11:38:00 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/6dc15ef3/d950234d.mp3" length="55549064" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>5339</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Want to learn more SQLite? Check out my SQLite course: https://highperformancesqlite.com </p><p>In this episode, Carl Sverre and I discuss why syncing everything is a bad idea and how his new project, Graft, makes edge-native, partially replicated databases possible. We dig into SQLite, object storage, transactional guarantees, and why Graft might be the foundation for serverless database replicas. </p><p>SQLSync: https://sqlsync.dev <br>Stop syncing everything blog post: https://sqlsync.dev/posts/stop-syncing-everything <br>Graft: https://github.com/orbitinghail/graft </p><p>Follow Carl: <br>Twitter: https://twitter.com/carlsverre <br>LinkedIn: https://www.linkedin.com/in/carlsverre <br>Website: https://carlsverre.com/ </p><p>Follow Aaron: Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm  </p><p>Chapters: 00:00 - Intro and Carl’s controversial blog title <br>01:00 - Why “stop syncing everything” doesn't mean stop syncing <br>02:30 - The problem with full database syncs <br>03:20 - Quick recap of SQL Sync and multiplayer SQLite <br>04:45 - How SQL Sync works using physical replication <br>06:00 - The limitations that led to building Graft <br>09:00 - What is Graft? A high-level overview <br>16:30 - Syncing architecture: how Graft scales <br>18:00 - Graft's stateless design and Fly.io integration <br>20:00 - S3 compatibility and using Tigris as backend <br>22:00 - Latency tuning and express zone support <br>24:00 - Can Graft run locally or with Minio? <br>27:00 - Page store vs meta store in Graft <br>36:00 - Index-aware prefetching in SQLite <br>38:00 - Prefetching intelligence: Graft vs driver <br>40:00 - The benefits of Graft's architectural simplicity <br>48:00 - Three use cases: apps, web apps, and replicas <br>50:00 - Sync timing and perceived latency <br>59:00 - Replaying transactions vs logical conflict resolution <br>1:03:00 - What’s next for Graft and how to get involved <br>1:05:00 - Hacker News reception and blog post feedback <br>1:06:30 - Closing thoughts and where to find Carl</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Postgres on bare metal with the CEO of Prisma</title>
      <itunes:episode>11</itunes:episode>
      <podcast:episode>11</podcast:episode>
      <itunes:title>Postgres on bare metal with the CEO of Prisma</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">1243c8a7-51c9-4196-b3c5-81c6e1f30282</guid>
      <link>https://share.transistor.fm/s/cc2a901d</link>
      <description>
        <![CDATA[<p>Prisma started as a GraphQL backend and pivoted into one of the most widely used ORMs in the world. Now, they’ve launched Prisma Postgres, and CEO Søren Bramer Schmidt is here to break down the journey, the challenges, and the massive technical innovations behind it—including bare-metal servers, Firecracker microVMs, and unikernels. If you care about databases, performance, or scaling, this one’s for you.</p><p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com.</p><p>Follow Søren:<br>Twitter: https://twitter.com/sorenbs<br>GitHub: https://github.com/prisma/prisma<br>Prisma Postgres: https://www.prisma.io/postgres</p><p>Follow Aaron:<br>Twitter:  https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis<br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters:<br>00:00 - Introduction<br>01:15 - The Origins of Prisma: From GraphQL to ORM<br>02:55 - Why Firebase &amp; Parse Inspired Prisma<br>04:04 - The Pivot: From GraphQL to Prisma ORM<br>06:00 - Why They Abandoned Backend-as-a-Service<br>08:07 - The Open Source Business Model Debate<br>10:15 - The Challenges of Monetizing an ORM<br>12:42 - Building Prisma Accelerate &amp; Pulse<br>14:55 - How Prisma Accelerate Optimizes Database Access<br>17:00 - Real-Time Database Updates with Prisma Pulse<br>20:03 - How Prisma Pulse Handles Change Data Capture (CDC)<br>23:15 - Users Wanted a Hosted Database (Even When Prisma Didn’t)<br>25:40 - Why Prisma Finally Launched Prisma Postgres<br>27:32 - Unikernels, Firecracker MicroVMs &amp; Running Millions of Databases<br>31:10 - Bare Metal Servers vs. AWS: The Controversial Choice<br>34:40 - How Prisma Routes Queries for Low Latency<br>38:02 - Scaling, Cost Efficiency &amp; Performance Benefits<br>42:10 - The Prisma Postgres Roadmap &amp; Future Features<br>45:30 - Why Prisma is Competing with AWS &amp; The Big Cloud Players<br>48:05 - Final Thoughts &amp; Where to Learn More</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Prisma started as a GraphQL backend and pivoted into one of the most widely used ORMs in the world. Now, they’ve launched Prisma Postgres, and CEO Søren Bramer Schmidt is here to break down the journey, the challenges, and the massive technical innovations behind it—including bare-metal servers, Firecracker microVMs, and unikernels. If you care about databases, performance, or scaling, this one’s for you.</p><p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com.</p><p>Follow Søren:<br>Twitter: https://twitter.com/sorenbs<br>GitHub: https://github.com/prisma/prisma<br>Prisma Postgres: https://www.prisma.io/postgres</p><p>Follow Aaron:<br>Twitter:  https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis<br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters:<br>00:00 - Introduction<br>01:15 - The Origins of Prisma: From GraphQL to ORM<br>02:55 - Why Firebase &amp; Parse Inspired Prisma<br>04:04 - The Pivot: From GraphQL to Prisma ORM<br>06:00 - Why They Abandoned Backend-as-a-Service<br>08:07 - The Open Source Business Model Debate<br>10:15 - The Challenges of Monetizing an ORM<br>12:42 - Building Prisma Accelerate &amp; Pulse<br>14:55 - How Prisma Accelerate Optimizes Database Access<br>17:00 - Real-Time Database Updates with Prisma Pulse<br>20:03 - How Prisma Pulse Handles Change Data Capture (CDC)<br>23:15 - Users Wanted a Hosted Database (Even When Prisma Didn’t)<br>25:40 - Why Prisma Finally Launched Prisma Postgres<br>27:32 - Unikernels, Firecracker MicroVMs &amp; Running Millions of Databases<br>31:10 - Bare Metal Servers vs. AWS: The Controversial Choice<br>34:40 - How Prisma Routes Queries for Low Latency<br>38:02 - Scaling, Cost Efficiency &amp; Performance Benefits<br>42:10 - The Prisma Postgres Roadmap &amp; Future Features<br>45:30 - Why Prisma is Competing with AWS &amp; The Big Cloud Players<br>48:05 - Final Thoughts &amp; Where to Learn More</p>]]>
      </content:encoded>
      <pubDate>Mon, 17 Feb 2025 11:46:41 -0600</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/cc2a901d/fc375a7c.mp3" length="42561896" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>5043</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Prisma started as a GraphQL backend and pivoted into one of the most widely used ORMs in the world. Now, they’ve launched Prisma Postgres, and CEO Søren Bramer Schmidt is here to break down the journey, the challenges, and the massive technical innovations behind it—including bare-metal servers, Firecracker microVMs, and unikernels. If you care about databases, performance, or scaling, this one’s for you.</p><p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com.</p><p>Follow Søren:<br>Twitter: https://twitter.com/sorenbs<br>GitHub: https://github.com/prisma/prisma<br>Prisma Postgres: https://www.prisma.io/postgres</p><p>Follow Aaron:<br>Twitter:  https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis<br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters:<br>00:00 - Introduction<br>01:15 - The Origins of Prisma: From GraphQL to ORM<br>02:55 - Why Firebase &amp; Parse Inspired Prisma<br>04:04 - The Pivot: From GraphQL to Prisma ORM<br>06:00 - Why They Abandoned Backend-as-a-Service<br>08:07 - The Open Source Business Model Debate<br>10:15 - The Challenges of Monetizing an ORM<br>12:42 - Building Prisma Accelerate &amp; Pulse<br>14:55 - How Prisma Accelerate Optimizes Database Access<br>17:00 - Real-Time Database Updates with Prisma Pulse<br>20:03 - How Prisma Pulse Handles Change Data Capture (CDC)<br>23:15 - Users Wanted a Hosted Database (Even When Prisma Didn’t)<br>25:40 - Why Prisma Finally Launched Prisma Postgres<br>27:32 - Unikernels, Firecracker MicroVMs &amp; Running Millions of Databases<br>31:10 - Bare Metal Servers vs. AWS: The Controversial Choice<br>34:40 - How Prisma Routes Queries for Low Latency<br>38:02 - Scaling, Cost Efficiency &amp; Performance Benefits<br>42:10 - The Prisma Postgres Roadmap &amp; Future Features<br>45:30 - Why Prisma is Competing with AWS &amp; The Big Cloud Players<br>48:05 - Final Thoughts &amp; Where to Learn More</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Moving from Redis to SQLite with Mike Buckbee</title>
      <itunes:episode>10</itunes:episode>
      <podcast:episode>10</podcast:episode>
      <itunes:title>Moving from Redis to SQLite with Mike Buckbee</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">72ea260c-f8f7-46d8-97ab-a07f57073b26</guid>
      <link>https://share.transistor.fm/s/aa1a7338</link>
      <description>
        <![CDATA[<p>Want to learn more SQLite? Check out my SQLite course: https://highperformancesqlite.com </p><p>In this episode, I sit down with Mike Buckbee to dive into the nitty-gritty of web application firewalls and his journey from using Redis to SQLite in Wafris. We talk about database architecture, operational challenges, and the fascinating ways SQLite improves performance and usability in cybersecurity tools. </p><p>Get production ready SQLite with Turso: https://tur.so/af. </p><p>Follow Mike: <br>Twitter: https://twitter.com/mbuckbee <br>LinkedIn: https://www.linkedin.com/in/michaelbuckbee <br>Wafris website: https://wafris.org <br>Rearchitecting Redis to SQLite article: https://wafris.org/blog/rearchitecting-for-sqlite </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm  </p><p>Chapters: 00:00 - Introduction and Guest Overview <br>01:06 - What is Wafris? <br>02:43 - Naming and Origins of Wafris <br>04:00 - Mike's Cybersecurity Background <br>07:17 - Challenges with Web Application Firewalls <br>10:01 - Wafris Architecture Overview <br>16:15 - Why Switch to SQLite? <br>18:01 - Handling IP Address Ranges <br>24:00 - Wild Redis Data Structures Explained <br>28:51 - Transitioning to SQLite <br>32:02 - Operational Advantages of SQLite <br>37:04 - How Wafris Leverages Threat Lists <br>40:13 - Performance Gains with SQLite <br>46:51 - Splitting Reads and Writes in the New Architecture <br>52:29 - Closing Thoughts and Where to Learn More</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Want to learn more SQLite? Check out my SQLite course: https://highperformancesqlite.com </p><p>In this episode, I sit down with Mike Buckbee to dive into the nitty-gritty of web application firewalls and his journey from using Redis to SQLite in Wafris. We talk about database architecture, operational challenges, and the fascinating ways SQLite improves performance and usability in cybersecurity tools. </p><p>Get production ready SQLite with Turso: https://tur.so/af. </p><p>Follow Mike: <br>Twitter: https://twitter.com/mbuckbee <br>LinkedIn: https://www.linkedin.com/in/michaelbuckbee <br>Wafris website: https://wafris.org <br>Rearchitecting Redis to SQLite article: https://wafris.org/blog/rearchitecting-for-sqlite </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm  </p><p>Chapters: 00:00 - Introduction and Guest Overview <br>01:06 - What is Wafris? <br>02:43 - Naming and Origins of Wafris <br>04:00 - Mike's Cybersecurity Background <br>07:17 - Challenges with Web Application Firewalls <br>10:01 - Wafris Architecture Overview <br>16:15 - Why Switch to SQLite? <br>18:01 - Handling IP Address Ranges <br>24:00 - Wild Redis Data Structures Explained <br>28:51 - Transitioning to SQLite <br>32:02 - Operational Advantages of SQLite <br>37:04 - How Wafris Leverages Threat Lists <br>40:13 - Performance Gains with SQLite <br>46:51 - Splitting Reads and Writes in the New Architecture <br>52:29 - Closing Thoughts and Where to Learn More</p>]]>
      </content:encoded>
      <pubDate>Tue, 26 Nov 2024 12:50:27 -0600</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/aa1a7338/10a05b63.mp3" length="43224941" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>4154</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Want to learn more SQLite? Check out my SQLite course: https://highperformancesqlite.com </p><p>In this episode, I sit down with Mike Buckbee to dive into the nitty-gritty of web application firewalls and his journey from using Redis to SQLite in Wafris. We talk about database architecture, operational challenges, and the fascinating ways SQLite improves performance and usability in cybersecurity tools. </p><p>Get production ready SQLite with Turso: https://tur.so/af. </p><p>Follow Mike: <br>Twitter: https://twitter.com/mbuckbee <br>LinkedIn: https://www.linkedin.com/in/michaelbuckbee <br>Wafris website: https://wafris.org <br>Rearchitecting Redis to SQLite article: https://wafris.org/blog/rearchitecting-for-sqlite </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more.</p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm  </p><p>Chapters: 00:00 - Introduction and Guest Overview <br>01:06 - What is Wafris? <br>02:43 - Naming and Origins of Wafris <br>04:00 - Mike's Cybersecurity Background <br>07:17 - Challenges with Web Application Firewalls <br>10:01 - Wafris Architecture Overview <br>16:15 - Why Switch to SQLite? <br>18:01 - Handling IP Address Ranges <br>24:00 - Wild Redis Data Structures Explained <br>28:51 - Transitioning to SQLite <br>32:02 - Operational Advantages of SQLite <br>37:04 - How Wafris Leverages Threat Lists <br>40:13 - Performance Gains with SQLite <br>46:51 - Splitting Reads and Writes in the New Architecture <br>52:29 - Closing Thoughts and Where to Learn More</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Bootstrapping an email service provider (with Jesse Hanley)</title>
      <itunes:episode>9</itunes:episode>
      <podcast:episode>9</podcast:episode>
      <itunes:title>Bootstrapping an email service provider (with Jesse Hanley)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">73654410-8a90-434d-bd32-3cfe8b09365c</guid>
      <link>https://share.transistor.fm/s/7041e277</link>
      <description>
        <![CDATA[<p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com. </p><p>In this interview, I talk with Jesse Hanley, founder of Bento, about running a lean email service from Japan. We chat about the challenges of scaling infrastructure, managing databases, and maintaining a calm business while serving a global customer base. </p><p>Links Mentioned: <br>Bento: https://bentonow.com <br>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15 <br>Database school audio only: https://databaseschool.transistor.fm </p><p>Follow Jesse: <br>Twitter: https://twitter.com/jessethanley <br>Bento on Twitter: https://twitter.com/Bento </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more. </p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters: <br>00:00 - Introduction to Jesse Hanley <br>01:02 - Running Bento from Japan <br>01:48 - The Lean Team Structure at Bento <br>03:00 - Managing Support via Discord <br>05:01 - Benefits of Using Discord for Customer Support <br>06:45 - The Role of Community in Customer Feedback <br>09:01 - How Bento Gained Traction <br>13:00 - Bootstrapping Bento and Profitable Growth <br>16:00 - Running Your Own Mail Servers <br>19:03 - The Economics and Redundancy of Email Delivery <br>21:00 - Bento's Heroku Setup and Scaling Challenges <br>26:00 - Handling and Querying Massive Data in Bento <br>29:52 - Leveraging Elasticsearch for Data Queries <br>35:40 - Moving Toward Multi-Database Solutions <br>37:45 - Exploring Crunchy Data and Citus for Database Scaling <br>42:00 - Optimizing Bento for Performance and Scalability <br>54:02 - Jesse’s Advice on Building a Calm and Profitable Business <br>57:00 - How Bento Uses WebSockets and Background Jobs <br>1:00:00 - Optimizing Bento with Action Cable <br>1:02:25 - Avoiding N+1 Queries with WebSockets <br>1:04:50 - Scaling Redis and Postgres at Bento <br>1:09:00 - Jesse’s Approach to Managing Growth and Multiple Services <br>1:11:00 - Final Thoughts on Scaling and Optimizing Databases <br>1:13:10 - Advice for Aspiring Builders: Stay Patient and True to Your Vision <br>1:16:00 - Bento’s Unique Approach to Email Marketing and Transactional Emails <br>1:19:50 - Closing Thoughts and Where to Find Jesse Hanley Online</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com. </p><p>In this interview, I talk with Jesse Hanley, founder of Bento, about running a lean email service from Japan. We chat about the challenges of scaling infrastructure, managing databases, and maintaining a calm business while serving a global customer base. </p><p>Links Mentioned: <br>Bento: https://bentonow.com <br>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15 <br>Database school audio only: https://databaseschool.transistor.fm </p><p>Follow Jesse: <br>Twitter: https://twitter.com/jessethanley <br>Bento on Twitter: https://twitter.com/Bento </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more. </p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters: <br>00:00 - Introduction to Jesse Hanley <br>01:02 - Running Bento from Japan <br>01:48 - The Lean Team Structure at Bento <br>03:00 - Managing Support via Discord <br>05:01 - Benefits of Using Discord for Customer Support <br>06:45 - The Role of Community in Customer Feedback <br>09:01 - How Bento Gained Traction <br>13:00 - Bootstrapping Bento and Profitable Growth <br>16:00 - Running Your Own Mail Servers <br>19:03 - The Economics and Redundancy of Email Delivery <br>21:00 - Bento's Heroku Setup and Scaling Challenges <br>26:00 - Handling and Querying Massive Data in Bento <br>29:52 - Leveraging Elasticsearch for Data Queries <br>35:40 - Moving Toward Multi-Database Solutions <br>37:45 - Exploring Crunchy Data and Citus for Database Scaling <br>42:00 - Optimizing Bento for Performance and Scalability <br>54:02 - Jesse’s Advice on Building a Calm and Profitable Business <br>57:00 - How Bento Uses WebSockets and Background Jobs <br>1:00:00 - Optimizing Bento with Action Cable <br>1:02:25 - Avoiding N+1 Queries with WebSockets <br>1:04:50 - Scaling Redis and Postgres at Bento <br>1:09:00 - Jesse’s Approach to Managing Growth and Multiple Services <br>1:11:00 - Final Thoughts on Scaling and Optimizing Databases <br>1:13:10 - Advice for Aspiring Builders: Stay Patient and True to Your Vision <br>1:16:00 - Bento’s Unique Approach to Email Marketing and Transactional Emails <br>1:19:50 - Closing Thoughts and Where to Find Jesse Hanley Online</p>]]>
      </content:encoded>
      <pubDate>Mon, 14 Oct 2024 14:30:24 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/7041e277/6bd7cf12.mp3" length="48312015" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:image href="https://img.transistor.fm/alT_wMheaoRs7LFqYuIqEJH4pWWLldoQkz_AkiOmwww/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8xZjdm/MDZkNjUzZDdkYWI1/MjVlNTA5ODM0YmUy/YjZiYi5qcGc.jpg"/>
      <itunes:duration>4919</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com. </p><p>In this interview, I talk with Jesse Hanley, founder of Bento, about running a lean email service from Japan. We chat about the challenges of scaling infrastructure, managing databases, and maintaining a calm business while serving a global customer base. </p><p>Links Mentioned: <br>Bento: https://bentonow.com <br>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15 <br>Database school audio only: https://databaseschool.transistor.fm </p><p>Follow Jesse: <br>Twitter: https://twitter.com/jessethanley <br>Bento on Twitter: https://twitter.com/Bento </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more. </p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters: <br>00:00 - Introduction to Jesse Hanley <br>01:02 - Running Bento from Japan <br>01:48 - The Lean Team Structure at Bento <br>03:00 - Managing Support via Discord <br>05:01 - Benefits of Using Discord for Customer Support <br>06:45 - The Role of Community in Customer Feedback <br>09:01 - How Bento Gained Traction <br>13:00 - Bootstrapping Bento and Profitable Growth <br>16:00 - Running Your Own Mail Servers <br>19:03 - The Economics and Redundancy of Email Delivery <br>21:00 - Bento's Heroku Setup and Scaling Challenges <br>26:00 - Handling and Querying Massive Data in Bento <br>29:52 - Leveraging Elasticsearch for Data Queries <br>35:40 - Moving Toward Multi-Database Solutions <br>37:45 - Exploring Crunchy Data and Citus for Database Scaling <br>42:00 - Optimizing Bento for Performance and Scalability <br>54:02 - Jesse’s Advice on Building a Calm and Profitable Business <br>57:00 - How Bento Uses WebSockets and Background Jobs <br>1:00:00 - Optimizing Bento with Action Cable <br>1:02:25 - Avoiding N+1 Queries with WebSockets <br>1:04:50 - Scaling Redis and Postgres at Bento <br>1:09:00 - Jesse’s Approach to Managing Growth and Multiple Services <br>1:11:00 - Final Thoughts on Scaling and Optimizing Databases <br>1:13:10 - Advice for Aspiring Builders: Stay Patient and True to Your Vision <br>1:16:00 - Bento’s Unique Approach to Email Marketing and Transactional Emails <br>1:19:50 - Closing Thoughts and Where to Find Jesse Hanley Online</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Creating a Postgres platform with Monica &amp; Tudor from Xata.io</title>
      <itunes:episode>8</itunes:episode>
      <podcast:episode>8</podcast:episode>
      <itunes:title>Creating a Postgres platform with Monica &amp; Tudor from Xata.io</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">78bc3e69-3da9-4c1d-9e21-a4d5f324761a</guid>
      <link>https://share.transistor.fm/s/2f9a307b</link>
      <description>
        <![CDATA[<p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com. </p><p>Production ready Postgres for teams that ship fast: https://xata.io In this interview, I talk with Monica Sarbu and Tudor Golubenco from Xata about their journey from Elastic to founding Xata. We deep dive on building a Postgres hosting platform, handling schema changes, and how they've made their free tier economical. </p><p>Links Mentioned: <br>Xata.io: https://xata.io/ The economics of a Postgres free tier: <br>https://xata.io/blog/postgres-free-tier </p><p>Follow Monica &amp; Tudor: <br>Monica on Twitter: https://twitter.com/monicasarbu <br>Monica on LinkedIn: https://www.linkedin.com/in/monicasarbu <br>Tudor on Twitter: https://twitter.com/tudor_g <br>Tudor on LinkedIn: https://www.linkedin.com/in/tudorgolubenco/ </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more. </p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters: <br>00:00 - Introduction <br>00:26 - What is Xata? Overview and Mission <br>01:32 - Open Source Projects: PG Roll and PG Stream <br>02:33 - Synchronizing Data: Postgres to Elastic Search <br>03:12 - Monica and Tudor's Background &amp; Journey to Elastic <br>04:00 - Founding of Packetbeat: The Start of Open Source Monitoring <br>06:08 - Transition from Elastic to Starting Xata <br>07:00 - Launching a Nonprofit and Insights on Database Challenges <br>08:29 - The Idea Behind Xata: Simplifying Application Development <br>10:00 - Tudor Joins Xata: The Decision to Start Again <br>10:47 - The Technical Vision for Xata's Platform <br>12:06 - Founding Xata During the Pandemic 13:11 - Funding Journey: From Seed to Series A <br>15:07 - Building a Platform, Not Just a Hosted Database <br>17:20 - Introducing Postgres to Xata's Stack <br>20:19 - Navigating Postgres as a DBA <br>22:44 - Open Source Strategy &amp; Community Building <br>27:48 - PG Stream Use Cases &amp; Postgres Replication <br>32:08 - PG Roll for Zero Downtime Schema Changes <br>36:05 - Implementing Safe and Fast Schema Changes <br>39:49 - Blob Storage and Cloudflare Integration <br>45:11 - Xata's Unique Features: Serving Builders and Larger Teams <br>49:20 - Free Tier Economics and Why It Matters <br>56:04 - Working as a Husband-Wife Team</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com. </p><p>Production ready Postgres for teams that ship fast: https://xata.io In this interview, I talk with Monica Sarbu and Tudor Golubenco from Xata about their journey from Elastic to founding Xata. We deep dive on building a Postgres hosting platform, handling schema changes, and how they've made their free tier economical. </p><p>Links Mentioned: <br>Xata.io: https://xata.io/ The economics of a Postgres free tier: <br>https://xata.io/blog/postgres-free-tier </p><p>Follow Monica &amp; Tudor: <br>Monica on Twitter: https://twitter.com/monicasarbu <br>Monica on LinkedIn: https://www.linkedin.com/in/monicasarbu <br>Tudor on Twitter: https://twitter.com/tudor_g <br>Tudor on LinkedIn: https://www.linkedin.com/in/tudorgolubenco/ </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more. </p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters: <br>00:00 - Introduction <br>00:26 - What is Xata? Overview and Mission <br>01:32 - Open Source Projects: PG Roll and PG Stream <br>02:33 - Synchronizing Data: Postgres to Elastic Search <br>03:12 - Monica and Tudor's Background &amp; Journey to Elastic <br>04:00 - Founding of Packetbeat: The Start of Open Source Monitoring <br>06:08 - Transition from Elastic to Starting Xata <br>07:00 - Launching a Nonprofit and Insights on Database Challenges <br>08:29 - The Idea Behind Xata: Simplifying Application Development <br>10:00 - Tudor Joins Xata: The Decision to Start Again <br>10:47 - The Technical Vision for Xata's Platform <br>12:06 - Founding Xata During the Pandemic 13:11 - Funding Journey: From Seed to Series A <br>15:07 - Building a Platform, Not Just a Hosted Database <br>17:20 - Introducing Postgres to Xata's Stack <br>20:19 - Navigating Postgres as a DBA <br>22:44 - Open Source Strategy &amp; Community Building <br>27:48 - PG Stream Use Cases &amp; Postgres Replication <br>32:08 - PG Roll for Zero Downtime Schema Changes <br>36:05 - Implementing Safe and Fast Schema Changes <br>39:49 - Blob Storage and Cloudflare Integration <br>45:11 - Xata's Unique Features: Serving Builders and Larger Teams <br>49:20 - Free Tier Economics and Why It Matters <br>56:04 - Working as a Husband-Wife Team</p>]]>
      </content:encoded>
      <pubDate>Mon, 07 Oct 2024 13:09:32 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/2f9a307b/f41646c2.mp3" length="38338003" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:image href="https://img.transistor.fm/zKaqrh-y6dnxXzYPga-2vOwJl2-N8FoXsudAj5ogDbM/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS85YThh/NjJmMmQwMGI5MDQy/NDFjZGYzYmFlMjUy/ZjY0ZS5qcGc.jpg"/>
      <itunes:duration>3681</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com. </p><p>Production ready Postgres for teams that ship fast: https://xata.io In this interview, I talk with Monica Sarbu and Tudor Golubenco from Xata about their journey from Elastic to founding Xata. We deep dive on building a Postgres hosting platform, handling schema changes, and how they've made their free tier economical. </p><p>Links Mentioned: <br>Xata.io: https://xata.io/ The economics of a Postgres free tier: <br>https://xata.io/blog/postgres-free-tier </p><p>Follow Monica &amp; Tudor: <br>Monica on Twitter: https://twitter.com/monicasarbu <br>Monica on LinkedIn: https://www.linkedin.com/in/monicasarbu <br>Tudor on Twitter: https://twitter.com/tudor_g <br>Tudor on LinkedIn: https://www.linkedin.com/in/tudorgolubenco/ </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more. </p><p>Database school on YouTube: https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15<br>Database school audio only: https://databaseschool.transistor.fm </p><p>Chapters: <br>00:00 - Introduction <br>00:26 - What is Xata? Overview and Mission <br>01:32 - Open Source Projects: PG Roll and PG Stream <br>02:33 - Synchronizing Data: Postgres to Elastic Search <br>03:12 - Monica and Tudor's Background &amp; Journey to Elastic <br>04:00 - Founding of Packetbeat: The Start of Open Source Monitoring <br>06:08 - Transition from Elastic to Starting Xata <br>07:00 - Launching a Nonprofit and Insights on Database Challenges <br>08:29 - The Idea Behind Xata: Simplifying Application Development <br>10:00 - Tudor Joins Xata: The Decision to Start Again <br>10:47 - The Technical Vision for Xata's Platform <br>12:06 - Founding Xata During the Pandemic 13:11 - Funding Journey: From Seed to Series A <br>15:07 - Building a Platform, Not Just a Hosted Database <br>17:20 - Introducing Postgres to Xata's Stack <br>20:19 - Navigating Postgres as a DBA <br>22:44 - Open Source Strategy &amp; Community Building <br>27:48 - PG Stream Use Cases &amp; Postgres Replication <br>32:08 - PG Roll for Zero Downtime Schema Changes <br>36:05 - Implementing Safe and Fast Schema Changes <br>39:49 - Blob Storage and Cloudflare Integration <br>45:11 - Xata's Unique Features: Serving Builders and Larger Teams <br>49:20 - Free Tier Economics and Why It Matters <br>56:04 - Working as a Husband-Wife Team</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Heroku's glory days &amp; Postgres vs the world, w/ Craig Kerstiens</title>
      <itunes:episode>7</itunes:episode>
      <podcast:episode>7</podcast:episode>
      <itunes:title>Heroku's glory days &amp; Postgres vs the world, w/ Craig Kerstiens</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">6e516a46-c59d-4e15-a43a-82bf1fe198a6</guid>
      <link>https://share.transistor.fm/s/d248467d</link>
      <description>
        <![CDATA[<p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com. </p><p>In this interview, I dive deep with Craig Kerstiens from Crunchy Data into the world of Postgres, covering its rise to prominence, scaling at Heroku, and the power of Postgres extensions. Craig also shares insights on database sharding, the future of Postgres, and why developers love working with it. </p><p>Follow Craig: <br>Twitter: https://twitter.com/craigkerstiens <br>Crunchy Data Blog: https://www.crunchydata.com/blog </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more. </p><p>Chapters: <br>00:00 - Introduction: Welcome to Database School <br>00:20 - Guest Introduction: Craig Kerstiens and Crunchy Data <br>01:40 - Craig's Journey from Heroku to Crunchy Data <br>02:55 - Scaling Postgres at Heroku <br>04:50 - Mastering Postgres Course Announcement <br>05:30 - The Importance of Postgres at Heroku <br>07:50 - The Value of Live SQL with Data Clips <br>09:25 - Data Clips for Business Intelligence and Real-Time Analytics <br>11:05 - Heroku’s Unique Company Culture and How Data Clips Came to Be <br>12:30 - Postgres Extensions and Marketplace <br>14:00 - Citus: Scaling Postgres for Multi-Tenant Applications <br>15:40 - The Challenges of Sharding in Databases <br>18:00 - Managing Large Databases and Sharding Keys with Citus <br>24:00 - The Evolution of Postgres and Its Growing Popularity <br>31:00 - Postgres for Developers and the Importance of Extensions <br>35:00 - Extensions as Proving Grounds for Core Postgres Features <br>37:50 - Building an Extension Marketplace for Postgres <br>41:00 - Postgres as a Data Platform and Developer Flexibility <br>46:00 - Why Developers Love Postgres: Stability, Extensions, and Ownership <br>51:00 - DuckDB: A Fascinating New Database Approach <br>53:30 - Crunchy Data: What They Offer and Why It Matters <br>58:30 - Expanding Postgres with DuckDB for Data Warehousing <br>01:00:00 - Wrapping Up: Where to Find Craig and Crunchy Data</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com. </p><p>In this interview, I dive deep with Craig Kerstiens from Crunchy Data into the world of Postgres, covering its rise to prominence, scaling at Heroku, and the power of Postgres extensions. Craig also shares insights on database sharding, the future of Postgres, and why developers love working with it. </p><p>Follow Craig: <br>Twitter: https://twitter.com/craigkerstiens <br>Crunchy Data Blog: https://www.crunchydata.com/blog </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more. </p><p>Chapters: <br>00:00 - Introduction: Welcome to Database School <br>00:20 - Guest Introduction: Craig Kerstiens and Crunchy Data <br>01:40 - Craig's Journey from Heroku to Crunchy Data <br>02:55 - Scaling Postgres at Heroku <br>04:50 - Mastering Postgres Course Announcement <br>05:30 - The Importance of Postgres at Heroku <br>07:50 - The Value of Live SQL with Data Clips <br>09:25 - Data Clips for Business Intelligence and Real-Time Analytics <br>11:05 - Heroku’s Unique Company Culture and How Data Clips Came to Be <br>12:30 - Postgres Extensions and Marketplace <br>14:00 - Citus: Scaling Postgres for Multi-Tenant Applications <br>15:40 - The Challenges of Sharding in Databases <br>18:00 - Managing Large Databases and Sharding Keys with Citus <br>24:00 - The Evolution of Postgres and Its Growing Popularity <br>31:00 - Postgres for Developers and the Importance of Extensions <br>35:00 - Extensions as Proving Grounds for Core Postgres Features <br>37:50 - Building an Extension Marketplace for Postgres <br>41:00 - Postgres as a Data Platform and Developer Flexibility <br>46:00 - Why Developers Love Postgres: Stability, Extensions, and Ownership <br>51:00 - DuckDB: A Fascinating New Database Approach <br>53:30 - Crunchy Data: What They Offer and Why It Matters <br>58:30 - Expanding Postgres with DuckDB for Data Warehousing <br>01:00:00 - Wrapping Up: Where to Find Craig and Crunchy Data</p>]]>
      </content:encoded>
      <pubDate>Tue, 24 Sep 2024 10:01:46 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/d248467d/c1323b34.mp3" length="34967544" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:image href="https://img.transistor.fm/eHARHCPalxEqKFrlbFBMQCPJW0vx1fUfpDsp7bs8PqU/rs:fill:3000:3000:1/q:60/aHR0cHM6Ly9pbWct/dXBsb2FkLXByb2R1/Y3Rpb24udHJhbnNp/c3Rvci5mbS8wZWQz/ZmZlYTVjNGUzNmU0/OWEwZjJkNzBkMmMz/YTgwMy5qcGc.jpg"/>
      <itunes:duration>3766</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Want to learn more Postgres? Check out my Postgres course: https://masteringpostgres.com. </p><p>In this interview, I dive deep with Craig Kerstiens from Crunchy Data into the world of Postgres, covering its rise to prominence, scaling at Heroku, and the power of Postgres extensions. Craig also shares insights on database sharding, the future of Postgres, and why developers love working with it. </p><p>Follow Craig: <br>Twitter: https://twitter.com/craigkerstiens <br>Crunchy Data Blog: https://www.crunchydata.com/blog </p><p>Follow Aaron: <br>Twitter: https://twitter.com/aarondfrancis <br>LinkedIn: https://www.linkedin.com/in/aarondfrancis <br>Website: https://aaronfrancis.com - find articles, podcasts, courses, and more. </p><p>Chapters: <br>00:00 - Introduction: Welcome to Database School <br>00:20 - Guest Introduction: Craig Kerstiens and Crunchy Data <br>01:40 - Craig's Journey from Heroku to Crunchy Data <br>02:55 - Scaling Postgres at Heroku <br>04:50 - Mastering Postgres Course Announcement <br>05:30 - The Importance of Postgres at Heroku <br>07:50 - The Value of Live SQL with Data Clips <br>09:25 - Data Clips for Business Intelligence and Real-Time Analytics <br>11:05 - Heroku’s Unique Company Culture and How Data Clips Came to Be <br>12:30 - Postgres Extensions and Marketplace <br>14:00 - Citus: Scaling Postgres for Multi-Tenant Applications <br>15:40 - The Challenges of Sharding in Databases <br>18:00 - Managing Large Databases and Sharding Keys with Citus <br>24:00 - The Evolution of Postgres and Its Growing Popularity <br>31:00 - Postgres for Developers and the Importance of Extensions <br>35:00 - Extensions as Proving Grounds for Core Postgres Features <br>37:50 - Building an Extension Marketplace for Postgres <br>41:00 - Postgres as a Data Platform and Developer Flexibility <br>46:00 - Why Developers Love Postgres: Stability, Extensions, and Ownership <br>51:00 - DuckDB: A Fascinating New Database Approach <br>53:30 - Crunchy Data: What They Offer and Why It Matters <br>58:30 - Expanding Postgres with DuckDB for Data Warehousing <br>01:00:00 - Wrapping Up: Where to Find Craig and Crunchy Data</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Ruby on Rails + SQLite with Stephen Margheim</title>
      <itunes:episode>6</itunes:episode>
      <podcast:episode>6</podcast:episode>
      <itunes:title>Ruby on Rails + SQLite with Stephen Margheim</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">3d5cee3d-1bb5-467c-ba09-582d0386e70e</guid>
      <link>https://share.transistor.fm/s/e67dbaf1</link>
      <description>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a> Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>In this interview, I talk to Stephen Margheim about his work with SQLite and Ruby on Rails. </p><p>Links: <br>Database school on YouTube: <a href="https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15">https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15</a> <br>Database school audio only: <a href="https://databaseschool.transistor.fm">https://databaseschool.transistor.fm</a><br>Aaron on Twitter: <a href="https://twitter.com/aarondfrancis%20">https://twitter.com/aarondfrancis </a><br>Stephen on Twitter: <a href="https://twitter.com/fractaledmind%20">https://twitter.com/fractaledmind </a><br>Stephen's blog: <a href="https://fractaledmind.github.io/%20">https://fractaledmind.github.io/ </a><br>Stephen's book: <a href="https://fractaledmind.gumroad.com/l/sqlite-on-rails">https://fractaledmind.gumroad.com/l/sqlite-on-rails </a><br>Aaron's conference talk: <a href="https://www.youtube.com/watch?v=2YaEtaXYVtI">https://www.youtube.com/watch?v=2YaEtaXYVtI</a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a> Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>In this interview, I talk to Stephen Margheim about his work with SQLite and Ruby on Rails. </p><p>Links: <br>Database school on YouTube: <a href="https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15">https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15</a> <br>Database school audio only: <a href="https://databaseschool.transistor.fm">https://databaseschool.transistor.fm</a><br>Aaron on Twitter: <a href="https://twitter.com/aarondfrancis%20">https://twitter.com/aarondfrancis </a><br>Stephen on Twitter: <a href="https://twitter.com/fractaledmind%20">https://twitter.com/fractaledmind </a><br>Stephen's blog: <a href="https://fractaledmind.github.io/%20">https://fractaledmind.github.io/ </a><br>Stephen's book: <a href="https://fractaledmind.gumroad.com/l/sqlite-on-rails">https://fractaledmind.gumroad.com/l/sqlite-on-rails </a><br>Aaron's conference talk: <a href="https://www.youtube.com/watch?v=2YaEtaXYVtI">https://www.youtube.com/watch?v=2YaEtaXYVtI</a></p>]]>
      </content:encoded>
      <pubDate>Thu, 08 Aug 2024 11:04:12 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/e67dbaf1/2b3cee58.mp3" length="48730218" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>6189</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a> Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>In this interview, I talk to Stephen Margheim about his work with SQLite and Ruby on Rails. </p><p>Links: <br>Database school on YouTube: <a href="https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15">https://www.youtube.com/playlist?list=PLI72dgeNJtzqElnNB6sQoAn2R-F3Vqm15</a> <br>Database school audio only: <a href="https://databaseschool.transistor.fm">https://databaseschool.transistor.fm</a><br>Aaron on Twitter: <a href="https://twitter.com/aarondfrancis%20">https://twitter.com/aarondfrancis </a><br>Stephen on Twitter: <a href="https://twitter.com/fractaledmind%20">https://twitter.com/fractaledmind </a><br>Stephen's blog: <a href="https://fractaledmind.github.io/%20">https://fractaledmind.github.io/ </a><br>Stephen's book: <a href="https://fractaledmind.gumroad.com/l/sqlite-on-rails">https://fractaledmind.gumroad.com/l/sqlite-on-rails </a><br>Aaron's conference talk: <a href="https://www.youtube.com/watch?v=2YaEtaXYVtI">https://www.youtube.com/watch?v=2YaEtaXYVtI</a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Migrating from Postgres to SQLite with Kent C. Dodds</title>
      <itunes:episode>5</itunes:episode>
      <podcast:episode>5</podcast:episode>
      <itunes:title>Migrating from Postgres to SQLite with Kent C. Dodds</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">a94ff7b4-eb68-4107-a4c3-f0bb1e4c8ab3</guid>
      <link>https://share.transistor.fm/s/0646f0cb</link>
      <description>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>. In this interview, I talk to Kent C. Dodds about SQLite, LiteFS and the React ecosystem. </p><p>Kent: <a href="https://twitter.com/kentcdodds">https://twitter.com/kentcdodds</a> <br>EpicWeb: <a href="https://www.epicweb.dev">https://www.epicweb.dev</a> <br>The Epic Stack: <a href="https://www.epicweb.dev/epic-stack">https://www.epicweb.dev/epic-stack</a> <br>Fly.io: <a href="https://fly.io">https://fly.io</a> <br>LiteFS: <a href="https://fly.io/docs/litefs">https://fly.io/docs/litefs</a> <br>Litestream: <a href="https://litestream.io">https://litestream.io</a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>. In this interview, I talk to Kent C. Dodds about SQLite, LiteFS and the React ecosystem. </p><p>Kent: <a href="https://twitter.com/kentcdodds">https://twitter.com/kentcdodds</a> <br>EpicWeb: <a href="https://www.epicweb.dev">https://www.epicweb.dev</a> <br>The Epic Stack: <a href="https://www.epicweb.dev/epic-stack">https://www.epicweb.dev/epic-stack</a> <br>Fly.io: <a href="https://fly.io">https://fly.io</a> <br>LiteFS: <a href="https://fly.io/docs/litefs">https://fly.io/docs/litefs</a> <br>Litestream: <a href="https://litestream.io">https://litestream.io</a></p>]]>
      </content:encoded>
      <pubDate>Thu, 20 Jun 2024 11:03:36 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/0646f0cb/fd48d867.mp3" length="33320290" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>3090</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>. In this interview, I talk to Kent C. Dodds about SQLite, LiteFS and the React ecosystem. </p><p>Kent: <a href="https://twitter.com/kentcdodds">https://twitter.com/kentcdodds</a> <br>EpicWeb: <a href="https://www.epicweb.dev">https://www.epicweb.dev</a> <br>The Epic Stack: <a href="https://www.epicweb.dev/epic-stack">https://www.epicweb.dev/epic-stack</a> <br>Fly.io: <a href="https://fly.io">https://fly.io</a> <br>LiteFS: <a href="https://fly.io/docs/litefs">https://fly.io/docs/litefs</a> <br>Litestream: <a href="https://litestream.io">https://litestream.io</a></p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Production SQLite with Turso and libSQL</title>
      <itunes:episode>4</itunes:episode>
      <podcast:episode>4</podcast:episode>
      <itunes:title>Production SQLite with Turso and libSQL</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">cd88d22b-3e33-444f-9e40-aa798fe29f4f</guid>
      <link>https://share.transistor.fm/s/cccd76f1</link>
      <description>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com">https://highperformancesqlite.com </a></p><p>Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>In this interview I talk to Glauber Costa, CEO of Turso.</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com">https://highperformancesqlite.com </a></p><p>Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>In this interview I talk to Glauber Costa, CEO of Turso.</p>]]>
      </content:encoded>
      <pubDate>Fri, 14 Jun 2024 14:03:31 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/cccd76f1/8615f9e1.mp3" length="35855024" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>6047</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com">https://highperformancesqlite.com </a></p><p>Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>In this interview I talk to Glauber Costa, CEO of Turso.</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Offline-first, multiplayer SQLite</title>
      <itunes:episode>3</itunes:episode>
      <podcast:episode>3</podcast:episode>
      <itunes:title>Offline-first, multiplayer SQLite</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">8ecc74e7-9660-4b25-98a5-69f602b31d34</guid>
      <link>https://share.transistor.fm/s/5a40b53a</link>
      <description>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>In this interview I talk to Carl Sverre about his new project: SQLSync. It's an offline-first, collaborative wrapper around SQLite. We cover event sourcing, conflict resolution, VFSes, and more! Carl: https://twitter.com/carlsverre PartyKit: https://www.partykit.io SQLSync: https://sqlsync.dev Carl's new company: https://orbitinghail.dev ------- 00:00 Intro and Background 01:56 What is SQLSync 02:30 Amplify 05:08 SQLSync Use Case 07:35 Multiplayer Explained 09:41 Durable Objects 12:00 Compare to PartyKit 13:08 Local First 22:46 SQLSync Terminology 24:28 SQLSync Replication Flow 27:33 Virtual File System 33:51 Transactions in WASM 39:41 Sync to Coordinator 43:22 Conflict Resolution as Business Logic 52:03 Sync to Clients 1:01:12 Goals for SQLSync 1:04:14 Scaling Limitations 1:07:30 Graft Storage Engine 1:14:47 Graft as a SQLite Extension 1:17:08 What's Next -----</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>In this interview I talk to Carl Sverre about his new project: SQLSync. It's an offline-first, collaborative wrapper around SQLite. We cover event sourcing, conflict resolution, VFSes, and more! Carl: https://twitter.com/carlsverre PartyKit: https://www.partykit.io SQLSync: https://sqlsync.dev Carl's new company: https://orbitinghail.dev ------- 00:00 Intro and Background 01:56 What is SQLSync 02:30 Amplify 05:08 SQLSync Use Case 07:35 Multiplayer Explained 09:41 Durable Objects 12:00 Compare to PartyKit 13:08 Local First 22:46 SQLSync Terminology 24:28 SQLSync Replication Flow 27:33 Virtual File System 33:51 Transactions in WASM 39:41 Sync to Coordinator 43:22 Conflict Resolution as Business Logic 52:03 Sync to Clients 1:01:12 Goals for SQLSync 1:04:14 Scaling Limitations 1:07:30 Graft Storage Engine 1:14:47 Graft as a SQLite Extension 1:17:08 What's Next -----</p>]]>
      </content:encoded>
      <pubDate>Thu, 13 Jun 2024 11:07:17 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/5a40b53a/4f8d1529.mp3" length="42235220" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>5196</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>In this interview I talk to Carl Sverre about his new project: SQLSync. It's an offline-first, collaborative wrapper around SQLite. We cover event sourcing, conflict resolution, VFSes, and more! Carl: https://twitter.com/carlsverre PartyKit: https://www.partykit.io SQLSync: https://sqlsync.dev Carl's new company: https://orbitinghail.dev ------- 00:00 Intro and Background 01:56 What is SQLSync 02:30 Amplify 05:08 SQLSync Use Case 07:35 Multiplayer Explained 09:41 Durable Objects 12:00 Compare to PartyKit 13:08 Local First 22:46 SQLSync Terminology 24:28 SQLSync Replication Flow 27:33 Virtual File System 33:51 Transactions in WASM 39:41 Sync to Coordinator 43:22 Conflict Resolution as Business Logic 52:03 Sync to Clients 1:01:12 Goals for SQLSync 1:04:14 Scaling Limitations 1:07:30 Graft Storage Engine 1:14:47 Graft as a SQLite Extension 1:17:08 What's Next -----</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>Distributed SQLite with Litestream and LiteFS</title>
      <itunes:episode>2</itunes:episode>
      <podcast:episode>2</podcast:episode>
      <itunes:title>Distributed SQLite with Litestream and LiteFS</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">144ee41f-85ce-4b64-a6a1-08ac86093524</guid>
      <link>https://share.transistor.fm/s/b6951032</link>
      <description>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>Ben and Aaron discuss replication and backups in SQLite, Litestream and LiteFS, and future mad scientist projects Ben is working on. • Ben Johnson on Twitter: https://x.com/benbjohnson • Litestream: https://litestream.io/ • LiteFS: https://fly.io/docs/litefs/</p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>Ben and Aaron discuss replication and backups in SQLite, Litestream and LiteFS, and future mad scientist projects Ben is working on. • Ben Johnson on Twitter: https://x.com/benbjohnson • Litestream: https://litestream.io/ • LiteFS: https://fly.io/docs/litefs/</p>]]>
      </content:encoded>
      <pubDate>Thu, 13 Jun 2024 11:04:35 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/b6951032/6bf691b7.mp3" length="35410580" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>3462</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>.</p><p>Ben and Aaron discuss replication and backups in SQLite, Litestream and LiteFS, and future mad scientist projects Ben is working on. • Ben Johnson on Twitter: https://x.com/benbjohnson • Litestream: https://litestream.io/ • LiteFS: https://fly.io/docs/litefs/</p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
    <item>
      <title>DHH discusses SQLite (and Stoicism)</title>
      <itunes:episode>1</itunes:episode>
      <podcast:episode>1</podcast:episode>
      <itunes:title>DHH discusses SQLite (and Stoicism)</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">a2b2be7d-7961-44d6-808c-03704da023ca</guid>
      <link>https://share.transistor.fm/s/c51246b6</link>
      <description>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>. DHH and Aaron discuss modern SQLite, the one-person framework, conceptual compression, stoicism, and ONCE.com's newest product: Workbook. </p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>. DHH and Aaron discuss modern SQLite, the one-person framework, conceptual compression, stoicism, and ONCE.com's newest product: Workbook. </p>]]>
      </content:encoded>
      <pubDate>Thu, 13 Jun 2024 10:59:11 -0500</pubDate>
      <author>Try Hard Studios</author>
      <enclosure url="https://media.transistor.fm/c51246b6/0b1950c6.mp3" length="32235552" type="audio/mpeg"/>
      <itunes:author>Try Hard Studios</itunes:author>
      <itunes:duration>3220</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>Want to learn more about SQLite? Check out the full course: <a href="https://highperformancesqlite.com/">https://highperformancesqlite.com</a>. Get production ready SQLite with Turso: <a href="https://tur.so/af">https://tur.so/af</a>. DHH and Aaron discuss modern SQLite, the one-person framework, conceptual compression, stoicism, and ONCE.com's newest product: Workbook. </p>]]>
      </itunes:summary>
      <itunes:keywords></itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
    </item>
  </channel>
</rss>
